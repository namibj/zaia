---
source: src/parser/mod.rs
assertion_line: 101
expression: syntax_tree_debug

---
Root@0..21106
  DeclStmt@0..15
    Local@0..5 "local"
    DeclTarget@5..12
      Ident@5..12 "anim_mt"
    Assign@12..13 "="
    TableExpr@13..15
      LCurly@13..14 "{"
      RCurly@14..15 "}"
  AssignStmt@15..38
    BinOp@15..30
      Ident@15..22
        Ident@15..22 "anim_mt"
      Dot@22..23 "."
      Ident@23..30
        Ident@23..30 "__index"
    Assign@30..31 "="
    Ident@31..38
      Ident@31..38 "anim_mt"
  FuncStmt@38..541
    Function@38..46 "function"
    Ident@46..58
      Ident@46..58 "newAnimation"
    FuncArgs@58..84
      LParen@58..59 "("
      Ident@59..64 "image"
      Comma@64..65 ","
      Ident@65..67 "fw"
      Comma@67..68 ","
      Ident@68..70 "fh"
      Comma@70..71 ","
      Ident@71..76 "delay"
      Comma@76..77 ","
      Ident@77..83 "frames"
      RParen@83..84 ")"
    StmtList@84..538
      DeclStmt@84..93
        Local@84..89 "local"
        DeclTarget@89..90
          Ident@89..90 "a"
        Assign@90..91 "="
        TableExpr@91..93
          LCurly@91..92 "{"
          RCurly@92..93 "}"
      AssignStmt@93..104
        BinOp@93..98
          Ident@93..94
            Ident@93..94 "a"
          Dot@94..95 "."
          Ident@95..98
            Ident@95..98 "img"
        Assign@98..99 "="
        Ident@99..104
          Ident@99..104 "image"
      AssignStmt@104..115
        BinOp@104..112
          Ident@104..105
            Ident@104..105 "a"
          Dot@105..106 "."
          Ident@106..112
            Ident@106..112 "frames"
        Assign@112..113 "="
        TableExpr@113..115
          LCurly@113..114 "{"
          RCurly@114..115 "}"
      AssignStmt@115..126
        BinOp@115..123
          Ident@115..116
            Ident@115..116 "a"
          Dot@116..117 "."
          Ident@117..123
            Ident@117..123 "delays"
        Assign@123..124 "="
        TableExpr@124..126
          LCurly@124..125 "{"
          RCurly@125..126 "}"
      AssignStmt@126..135
        BinOp@126..133
          Ident@126..127
            Ident@126..127 "a"
          Dot@127..128 "."
          Ident@128..133
            Ident@128..133 "timer"
        Assign@133..134 "="
        LiteralExpr@134..135
          Int@134..135 "0"
      AssignStmt@135..147
        BinOp@135..145
          Ident@135..136
            Ident@135..136 "a"
          Dot@136..137 "."
          Ident@137..145
            Ident@137..145 "position"
        Assign@145..146 "="
        LiteralExpr@146..147
          Int@146..147 "1"
      AssignStmt@147..154
        BinOp@147..151
          Ident@147..148
            Ident@147..148 "a"
          Dot@148..149 "."
          Ident@149..151
            Ident@149..151 "fw"
        Assign@151..152 "="
        Ident@152..154
          Ident@152..154 "fw"
      AssignStmt@154..161
        BinOp@154..158
          Ident@154..155
            Ident@154..155 "a"
          Dot@155..156 "."
          Ident@156..158
            Ident@156..158 "fh"
        Assign@158..159 "="
        Ident@159..161
          Ident@159..161 "fh"
      AssignStmt@161..175
        BinOp@161..170
          Ident@161..162
            Ident@161..162 "a"
          Dot@162..163 "."
          Ident@163..170
            Ident@163..170 "playing"
        Assign@170..171 "="
        LiteralExpr@171..175
          True@171..175 "true"
      AssignStmt@175..184
        BinOp@175..182
          Ident@175..176
            Ident@175..176 "a"
          Dot@176..177 "."
          Ident@177..182
            Ident@177..182 "speed"
        Assign@182..183 "="
        LiteralExpr@183..184
          Int@183..184 "1"
      AssignStmt@184..192
        BinOp@184..190
          Ident@184..185
            Ident@184..185 "a"
          Dot@185..186 "."
          Ident@186..190
            Ident@186..190 "mode"
        Assign@190..191 "="
        LiteralExpr@191..192
          Int@191..192 "1"
      AssignStmt@192..205
        BinOp@192..203
          Ident@192..193
            Ident@192..193 "a"
          Dot@193..194 "."
          Ident@194..203
            Ident@194..203 "direction"
        Assign@203..204 "="
        LiteralExpr@204..205
          Int@204..205 "1"
      DeclStmt@205..231
        Local@205..210 "local"
        DeclTarget@210..214
          Ident@210..214 "imgw"
        Assign@214..215 "="
        FuncCall@215..231
          BinOp@215..229
            Ident@215..220
              Ident@215..220 "image"
            Colon@220..221 ":"
            Ident@221..229
              Ident@221..229 "getWidth"
          FuncArgs@229..231
            LParen@229..230 "("
            RParen@230..231 ")"
      DeclStmt@231..258
        Local@231..236 "local"
        DeclTarget@236..240
          Ident@236..240 "imgh"
        Assign@240..241 "="
        FuncCall@241..258
          BinOp@241..256
            Ident@241..246
              Ident@241..246 "image"
            Colon@246..247 ":"
            Ident@247..256
              Ident@247..256 "getHeight"
          FuncArgs@256..258
            LParen@256..257 "("
            RParen@257..258 ")"
      IfStmt@258..298
        If@258..260 "if"
        BinOp@260..269
          Ident@260..266
            Ident@260..266 "frames"
          Eq@266..268 "=="
          LiteralExpr@268..269
            Int@268..269 "0"
        Then@269..273 "then"
        StmtList@273..295
          AssignStmt@273..295
            Ident@273..279
              Ident@273..279 "frames"
            Assign@279..280 "="
            BinOp@280..295
              BinOp@280..292
                BinOp@280..287
                  Ident@280..284
                    Ident@280..284 "imgw"
                  Slash@284..285 "/"
                  Ident@285..287
                    Ident@285..287 "fw"
                Star@287..288 "*"
                Ident@288..292
                  Ident@288..292 "imgh"
              Slash@292..293 "/"
              Ident@293..295
                Ident@293..295 "fh"
        End@295..298 "end"
      DeclStmt@298..318
        Local@298..303 "local"
        DeclTarget@303..310
          Ident@303..310 "rowsize"
        Assign@310..311 "="
        BinOp@311..318
          Ident@311..315
            Ident@311..315 "imgw"
          Slash@315..316 "/"
          Ident@316..318
            Ident@316..318 "fw"
      ForNumStmt@318..509
        For@318..321 "for"
        Ident@321..322 "i"
        Assign@322..323 "="
        LiteralExpr@323..324
          Int@323..324 "1"
        Comma@324..325 ","
        Ident@325..331
          Ident@325..331 "frames"
        BlockStmt@331..509
          Do@331..333 "do"
          StmtList@333..506
            DeclStmt@333..363
              Local@333..338 "local"
              DeclTarget@338..341
                Ident@338..341 "row"
              Assign@341..342 "="
              FuncCall@342..363
                BinOp@342..352
                  Ident@342..346
                    Ident@342..346 "math"
                  Dot@346..347 "."
                  Ident@347..352
                    Ident@347..352 "floor"
                FuncArgs@352..363
                  LParen@352..353 "("
                  BinOp@353..362
                    Ident@353..354
                      Ident@353..354 "i"
                    Slash@354..355 "/"
                    Ident@355..362
                      Ident@355..362 "rowsize"
                  RParen@362..363 ")"
            DeclStmt@363..384
              Local@363..368 "local"
              DeclTarget@368..374
                Ident@368..374 "column"
              Assign@374..375 "="
              BinOp@375..384
                Ident@375..376
                  Ident@375..376 "i"
                Percent@376..377 "%"
                Ident@377..384
                  Ident@377..384 "rowsize"
            DeclStmt@384..450
              Local@384..389 "local"
              DeclTarget@389..394
                Ident@389..394 "frame"
              Assign@394..395 "="
              FuncCall@395..450
                BinOp@395..416
                  Ident@395..399
                    Ident@395..399 "love"
                  Dot@399..400 "."
                  BinOp@400..416
                    Ident@400..408
                      Ident@400..408 "graphics"
                    Dot@408..409 "."
                    Ident@409..416
                      Ident@409..416 "newQuad"
                FuncArgs@416..450
                  LParen@416..417 "("
                  BinOp@417..426
                    Ident@417..423
                      Ident@417..423 "column"
                    Star@423..424 "*"
                    Ident@424..426
                      Ident@424..426 "fw"
                  Comma@426..427 ","
                  BinOp@427..433
                    Ident@427..430
                      Ident@427..430 "row"
                    Star@430..431 "*"
                    Ident@431..433
                      Ident@431..433 "fh"
                  Comma@433..434 ","
                  Ident@434..436
                    Ident@434..436 "fw"
                  Comma@436..437 ","
                  Ident@437..439
                    Ident@437..439 "fh"
                  Comma@439..440 ","
                  Ident@440..444
                    Ident@440..444 "imgw"
                  Comma@444..445 ","
                  Ident@445..449
                    Ident@445..449 "imgh"
                  RParen@449..450 ")"
            FuncCall@450..478
              BinOp@450..462
                Ident@450..455
                  Ident@450..455 "table"
                Dot@455..456 "."
                Ident@456..462
                  Ident@456..462 "insert"
              FuncArgs@462..478
                LParen@462..463 "("
                BinOp@463..471
                  Ident@463..464
                    Ident@463..464 "a"
                  Dot@464..465 "."
                  Ident@465..471
                    Ident@465..471 "frames"
                Comma@471..472 ","
                Ident@472..477
                  Ident@472..477 "frame"
                RParen@477..478 ")"
            FuncCall@478..506
              BinOp@478..490
                Ident@478..483
                  Ident@478..483 "table"
                Dot@483..484 "."
                Ident@484..490
                  Ident@484..490 "insert"
              FuncArgs@490..506
                LParen@490..491 "("
                BinOp@491..499
                  Ident@491..492
                    Ident@491..492 "a"
                  Dot@492..493 "."
                  Ident@493..499
                    Ident@493..499 "delays"
                Comma@499..500 ","
                Ident@500..505
                  Ident@500..505 "delay"
                RParen@505..506 ")"
          End@506..509 "end"
      ReturnStmt@509..538
        Return@509..515 "return"
        FuncCall@515..538
          Ident@515..527
            Ident@515..527 "setmetatable"
          FuncArgs@527..538
            LParen@527..528 "("
            Ident@528..529
              Ident@528..529 "a"
            Comma@529..530 ","
            Ident@530..537
              Ident@530..537 "anim_mt"
            RParen@537..538 ")"
    End@538..541 "end"
  FuncStmt@541..1059
    Function@541..549 "function"
    BinOp@549..563
      Ident@549..556
        Ident@549..556 "anim_mt"
      Colon@556..557 ":"
      Ident@557..563
        Ident@557..563 "update"
    FuncArgs@563..567
      LParen@563..564 "("
      Ident@564..566 "dt"
      RParen@566..567 ")"
    StmtList@567..1056
      IfStmt@567..597
        If@567..569 "if"
        PrefixOp@569..584
          Not@569..572 "not"
          BinOp@572..584
            Ident@572..576
              Ident@572..576 "self"
            Dot@576..577 "."
            Ident@577..584
              Ident@577..584 "playing"
        Then@584..588 "then"
        StmtList@588..594
          ReturnStmt@588..594
            Return@588..594 "return"
        End@594..597 "end"
      AssignStmt@597..632
        BinOp@597..607
          Ident@597..601
            Ident@597..601 "self"
          Dot@601..602 "."
          Ident@602..607
            Ident@602..607 "timer"
        Assign@607..608 "="
        BinOp@608..632
          BinOp@608..618
            Ident@608..612
              Ident@608..612 "self"
            Dot@612..613 "."
            Ident@613..618
              Ident@613..618 "timer"
          Plus@618..619 "+"
          BinOp@619..632
            Ident@619..621
              Ident@619..621 "dt"
            Star@621..622 "*"
            BinOp@622..632
              Ident@622..626
                Ident@622..626 "self"
              Dot@626..627 "."
              Ident@627..632
                Ident@627..632 "speed"
      IfStmt@632..1056
        If@632..634 "if"
        BinOp@634..671
          BinOp@634..644
            Ident@634..638
              Ident@634..638 "self"
            Dot@638..639 "."
            Ident@639..644
              Ident@639..644 "timer"
          RAngle@644..645 ">"
          Index@645..671
            BinOp@645..656
              Ident@645..649
                Ident@645..649 "self"
              Dot@649..650 "."
              Ident@650..656
                Ident@650..656 "delays"
            LBracket@656..657 "["
            BinOp@657..670
              Ident@657..661
                Ident@657..661 "self"
              Dot@661..662 "."
              Ident@662..670
                Ident@662..670 "position"
            RBracket@670..671 "]"
        Then@671..675 "then"
        StmtList@675..1053
          AssignStmt@675..723
            BinOp@675..685
              Ident@675..679
                Ident@675..679 "self"
              Dot@679..680 "."
              Ident@680..685
                Ident@680..685 "timer"
            Assign@685..686 "="
            BinOp@686..723
              BinOp@686..696
                Ident@686..690
                  Ident@686..690 "self"
                Dot@690..691 "."
                Ident@691..696
                  Ident@691..696 "timer"
              Minus@696..697 "-"
              Index@697..723
                BinOp@697..708
                  Ident@697..701
                    Ident@697..701 "self"
                  Dot@701..702 "."
                  Ident@702..708
                    Ident@702..708 "delays"
                LBracket@708..709 "["
                BinOp@709..722
                  Ident@709..713
                    Ident@709..713 "self"
                  Dot@713..714 "."
                  Ident@714..722
                    Ident@714..722 "position"
                RBracket@722..723 "]"
          AssignStmt@723..767
            BinOp@723..736
              Ident@723..727
                Ident@723..727 "self"
              Dot@727..728 "."
              Ident@728..736
                Ident@728..736 "position"
            Assign@736..737 "="
            BinOp@737..767
              BinOp@737..750
                Ident@737..741
                  Ident@737..741 "self"
                Dot@741..742 "."
                Ident@742..750
                  Ident@742..750 "position"
              Plus@750..751 "+"
              BinOp@751..767
                LiteralExpr@751..752
                  Int@751..752 "1"
                Star@752..753 "*"
                BinOp@753..767
                  Ident@753..757
                    Ident@753..757 "self"
                  Dot@757..758 "."
                  Ident@758..767
                    Ident@758..767 "direction"
          IfStmt@767..1053
            If@767..769 "if"
            BinOp@769..795
              BinOp@769..782
                Ident@769..773
                  Ident@769..773 "self"
                Dot@773..774 "."
                Ident@774..782
                  Ident@774..782 "position"
              RAngle@782..783 ">"
              PrefixOp@783..795
                Hash@783..784 "#"
                BinOp@784..795
                  Ident@784..788
                    Ident@784..788 "self"
                  Dot@788..789 "."
                  Ident@789..795
                    Ident@789..795 "frames"
            Then@795..799 "then"
            StmtList@799..965
              IfStmt@799..965
                If@799..801 "if"
                BinOp@801..813
                  BinOp@801..810
                    Ident@801..805
                      Ident@801..805 "self"
                    Dot@805..806 "."
                    Ident@806..810
                      Ident@806..810 "mode"
                  Eq@810..812 "=="
                  LiteralExpr@812..813
                    Int@812..813 "1"
                Then@813..817 "then"
                StmtList@817..832
                  AssignStmt@817..832
                    BinOp@817..830
                      Ident@817..821
                        Ident@817..821 "self"
                      Dot@821..822 "."
                      Ident@822..830
                        Ident@822..830 "position"
                    Assign@830..831 "="
                    LiteralExpr@831..832
                      Int@831..832 "1"
                ElseChain@832..965
                  IfStmt@832..965
                    ElseIf@832..838 "elseif"
                    BinOp@838..850
                      BinOp@838..847
                        Ident@838..842
                          Ident@838..842 "self"
                        Dot@842..843 "."
                        Ident@843..847
                          Ident@843..847 "mode"
                      Eq@847..849 "=="
                      LiteralExpr@849..850
                        Int@849..850 "2"
                    Then@850..854 "then"
                    StmtList@854..894
                      AssignStmt@854..883
                        BinOp@854..867
                          Ident@854..858
                            Ident@854..858 "self"
                          Dot@858..859 "."
                          Ident@859..867
                            Ident@859..867 "position"
                        Assign@867..868 "="
                        BinOp@868..883
                          BinOp@868..881
                            Ident@868..872
                              Ident@868..872 "self"
                            Dot@872..873 "."
                            Ident@873..881
                              Ident@873..881 "position"
                          Minus@881..882 "-"
                          LiteralExpr@882..883
                            Int@882..883 "1"
                      FuncCall@883..894
                        BinOp@883..892
                          Ident@883..887
                            Ident@883..887 "self"
                          Colon@887..888 ":"
                          Ident@888..892
                            Ident@888..892 "stop"
                        FuncArgs@892..894
                          LParen@892..893 "("
                          RParen@893..894 ")"
                    ElseChain@894..965
                      IfStmt@894..965
                        ElseIf@894..900 "elseif"
                        BinOp@900..912
                          BinOp@900..909
                            Ident@900..904
                              Ident@900..904 "self"
                            Dot@904..905 "."
                            Ident@905..909
                              Ident@905..909 "mode"
                          Eq@909..911 "=="
                          LiteralExpr@911..912
                            Int@911..912 "3"
                        Then@912..916 "then"
                        StmtList@916..962
                          AssignStmt@916..933
                            BinOp@916..930
                              Ident@916..920
                                Ident@916..920 "self"
                              Dot@920..921 "."
                              Ident@921..930
                                Ident@921..930 "direction"
                            Assign@930..931 "="
                            PrefixOp@931..933
                              Minus@931..932 "-"
                              LiteralExpr@932..933
                                Int@932..933 "1"
                          AssignStmt@933..962
                            BinOp@933..946
                              Ident@933..937
                                Ident@933..937 "self"
                              Dot@937..938 "."
                              Ident@938..946
                                Ident@938..946 "position"
                            Assign@946..947 "="
                            BinOp@947..962
                              BinOp@947..960
                                Ident@947..951
                                  Ident@947..951 "self"
                                Dot@951..952 "."
                                Ident@952..960
                                  Ident@952..960 "position"
                              Minus@960..961 "-"
                              LiteralExpr@961..962
                                Int@961..962 "1"
                        End@962..965 "end"
            ElseChain@965..1053
              IfStmt@965..1053
                ElseIf@965..971 "elseif"
                BinOp@971..1001
                  BinOp@971..986
                    BinOp@971..984
                      Ident@971..975
                        Ident@971..975 "self"
                      Dot@975..976 "."
                      Ident@976..984
                        Ident@976..984 "position"
                    LAngle@984..985 "<"
                    LiteralExpr@985..986
                      Int@985..986 "1"
                  And@986..989 "and"
                  BinOp@989..1001
                    BinOp@989..998
                      Ident@989..993
                        Ident@989..993 "self"
                      Dot@993..994 "."
                      Ident@994..998
                        Ident@994..998 "mode"
                    Eq@998..1000 "=="
                    LiteralExpr@1000..1001
                      Int@1000..1001 "3"
                Then@1001..1005 "then"
                StmtList@1005..1050
                  AssignStmt@1005..1021
                    BinOp@1005..1019
                      Ident@1005..1009
                        Ident@1005..1009 "self"
                      Dot@1009..1010 "."
                      Ident@1010..1019
                        Ident@1010..1019 "direction"
                    Assign@1019..1020 "="
                    LiteralExpr@1020..1021
                      Int@1020..1021 "1"
                  AssignStmt@1021..1050
                    BinOp@1021..1034
                      Ident@1021..1025
                        Ident@1021..1025 "self"
                      Dot@1025..1026 "."
                      Ident@1026..1034
                        Ident@1026..1034 "position"
                    Assign@1034..1035 "="
                    BinOp@1035..1050
                      BinOp@1035..1048
                        Ident@1035..1039
                          Ident@1035..1039 "self"
                        Dot@1039..1040 "."
                        Ident@1040..1048
                          Ident@1040..1048 "position"
                      Plus@1048..1049 "+"
                      LiteralExpr@1049..1050
                        Int@1049..1050 "1"
                End@1050..1053 "end"
        End@1053..1056 "end"
    End@1056..1059 "end"
  FuncStmt@1059..1170
    Function@1059..1067 "function"
    BinOp@1067..1079
      Ident@1067..1074
        Ident@1067..1074 "anim_mt"
      Colon@1074..1075 ":"
      Ident@1075..1079
        Ident@1075..1079 "draw"
    FuncArgs@1079..1096
      LParen@1079..1080 "("
      Ident@1080..1081 "x"
      Comma@1081..1082 ","
      Ident@1082..1083 "y"
      Comma@1083..1084 ","
      Ident@1084..1089 "angle"
      Comma@1089..1090 ","
      Ident@1090..1092 "sx"
      Comma@1092..1093 ","
      Ident@1093..1095 "sy"
      RParen@1095..1096 ")"
    StmtList@1096..1167
      FuncCall@1096..1167
        BinOp@1096..1114
          BinOp@1096..1109
            Ident@1096..1100
              Ident@1096..1100 "love"
            Dot@1100..1101 "."
            Ident@1101..1109
              Ident@1101..1109 "graphics"
          Dot@1109..1110 "."
          Ident@1110..1114
            Ident@1110..1114 "draw"
        FuncArgs@1114..1167
          LParen@1114..1115 "("
          BinOp@1115..1123
            Ident@1115..1119
              Ident@1115..1119 "self"
            Dot@1119..1120 "."
            Ident@1120..1123
              Ident@1120..1123 "img"
          Comma@1123..1124 ","
          Index@1124..1150
            BinOp@1124..1135
              Ident@1124..1128
                Ident@1124..1128 "self"
              Dot@1128..1129 "."
              Ident@1129..1135
                Ident@1129..1135 "frames"
            LBracket@1135..1136 "["
            BinOp@1136..1149
              Ident@1136..1140
                Ident@1136..1140 "self"
              Dot@1140..1141 "."
              Ident@1141..1149
                Ident@1141..1149 "position"
            RBracket@1149..1150 "]"
          Comma@1150..1151 ","
          Ident@1151..1152
            Ident@1151..1152 "x"
          Comma@1152..1153 ","
          Ident@1153..1154
            Ident@1153..1154 "y"
          Comma@1154..1155 ","
          Ident@1155..1160
            Ident@1155..1160 "angle"
          Comma@1160..1161 ","
          Ident@1161..1163
            Ident@1161..1163 "sx"
          Comma@1163..1164 ","
          Ident@1164..1166
            Ident@1164..1166 "sy"
          RParen@1166..1167 ")"
    End@1167..1170 "end"
  FuncStmt@1170..1350
    Function@1170..1178 "function"
    BinOp@1178..1194
      Ident@1178..1185
        Ident@1178..1185 "anim_mt"
      Colon@1185..1186 ":"
      Ident@1186..1194
        Ident@1186..1194 "addFrame"
    FuncArgs@1194..1209
      LParen@1194..1195 "("
      Ident@1195..1196 "x"
      Comma@1196..1197 ","
      Ident@1197..1198 "y"
      Comma@1198..1199 ","
      Ident@1199..1200 "w"
      Comma@1200..1201 ","
      Ident@1201..1202 "h"
      Comma@1202..1203 ","
      Ident@1203..1208 "delay"
      RParen@1208..1209 ")"
    StmtList@1209..1347
      DeclStmt@1209..1285
        Local@1209..1214 "local"
        DeclTarget@1214..1219
          Ident@1214..1219 "frame"
        Assign@1219..1220 "="
        FuncCall@1220..1285
          BinOp@1220..1241
            Ident@1220..1224
              Ident@1220..1224 "love"
            Dot@1224..1225 "."
            BinOp@1225..1241
              Ident@1225..1233
                Ident@1225..1233 "graphics"
              Dot@1233..1234 "."
              Ident@1234..1241
                Ident@1234..1241 "newQuad"
          FuncArgs@1241..1285
            LParen@1241..1242 "("
            Ident@1242..1243
              Ident@1242..1243 "x"
            Comma@1243..1244 ","
            Ident@1244..1245
              Ident@1244..1245 "y"
            Comma@1245..1246 ","
            Ident@1246..1247
              Ident@1246..1247 "w"
            Comma@1247..1248 ","
            Ident@1248..1249
              Ident@1248..1249 "h"
            Comma@1249..1250 ","
            FuncCall@1250..1266
              BinOp@1250..1264
                Ident@1250..1251
                  Ident@1250..1251 "a"
                Dot@1251..1252 "."
                BinOp@1252..1264
                  Ident@1252..1255
                    Ident@1252..1255 "img"
                  Colon@1255..1256 ":"
                  Ident@1256..1264
                    Ident@1256..1264 "getWidth"
              FuncArgs@1264..1266
                LParen@1264..1265 "("
                RParen@1265..1266 ")"
            Comma@1266..1267 ","
            FuncCall@1267..1284
              BinOp@1267..1282
                Ident@1267..1268
                  Ident@1267..1268 "a"
                Dot@1268..1269 "."
                BinOp@1269..1282
                  Ident@1269..1272
                    Ident@1269..1272 "img"
                  Colon@1272..1273 ":"
                  Ident@1273..1282
                    Ident@1273..1282 "getHeight"
              FuncArgs@1282..1284
                LParen@1282..1283 "("
                RParen@1283..1284 ")"
            RParen@1284..1285 ")"
      FuncCall@1285..1316
        BinOp@1285..1297
          Ident@1285..1290
            Ident@1285..1290 "table"
          Dot@1290..1291 "."
          Ident@1291..1297
            Ident@1291..1297 "insert"
        FuncArgs@1297..1316
          LParen@1297..1298 "("
          BinOp@1298..1309
            Ident@1298..1302
              Ident@1298..1302 "self"
            Dot@1302..1303 "."
            Ident@1303..1309
              Ident@1303..1309 "frames"
          Comma@1309..1310 ","
          Ident@1310..1315
            Ident@1310..1315 "frame"
          RParen@1315..1316 ")"
      FuncCall@1316..1347
        BinOp@1316..1328
          Ident@1316..1321
            Ident@1316..1321 "table"
          Dot@1321..1322 "."
          Ident@1322..1328
            Ident@1322..1328 "insert"
        FuncArgs@1328..1347
          LParen@1328..1329 "("
          BinOp@1329..1340
            Ident@1329..1333
              Ident@1329..1333 "self"
            Dot@1333..1334 "."
            Ident@1334..1340
              Ident@1334..1340 "delays"
          Comma@1340..1341 ","
          Ident@1341..1346
            Ident@1341..1346 "delay"
          RParen@1346..1347 ")"
    End@1347..1350 "end"
  FuncStmt@1350..1392
    Function@1350..1358 "function"
    BinOp@1358..1370
      Ident@1358..1365
        Ident@1358..1365 "anim_mt"
      Colon@1365..1366 ":"
      Ident@1366..1370
        Ident@1366..1370 "play"
    FuncArgs@1370..1372
      LParen@1370..1371 "("
      RParen@1371..1372 ")"
    StmtList@1372..1389
      AssignStmt@1372..1389
        BinOp@1372..1384
          Ident@1372..1376
            Ident@1372..1376 "self"
          Dot@1376..1377 "."
          Ident@1377..1384
            Ident@1377..1384 "playing"
        Assign@1384..1385 "="
        LiteralExpr@1385..1389
          True@1385..1389 "true"
    End@1389..1392 "end"
  FuncStmt@1392..1435
    Function@1392..1400 "function"
    BinOp@1400..1412
      Ident@1400..1407
        Ident@1400..1407 "anim_mt"
      Colon@1407..1408 ":"
      Ident@1408..1412
        Ident@1408..1412 "stop"
    FuncArgs@1412..1414
      LParen@1412..1413 "("
      RParen@1413..1414 ")"
    StmtList@1414..1432
      AssignStmt@1414..1432
        BinOp@1414..1426
          Ident@1414..1418
            Ident@1414..1418 "self"
          Dot@1418..1419 "."
          Ident@1419..1426
            Ident@1419..1426 "playing"
        Assign@1426..1427 "="
        LiteralExpr@1427..1432
          False@1427..1432 "false"
    End@1432..1435 "end"
  FuncStmt@1435..1473
    Function@1435..1443 "function"
    BinOp@1443..1456
      Ident@1443..1450
        Ident@1443..1450 "anim_mt"
      Colon@1450..1451 ":"
      Ident@1451..1456
        Ident@1451..1456 "reset"
    FuncArgs@1456..1458
      LParen@1456..1457 "("
      RParen@1457..1458 ")"
    StmtList@1458..1470
      FuncCall@1458..1470
        BinOp@1458..1467
          Ident@1458..1462
            Ident@1458..1462 "self"
          Colon@1462..1463 ":"
          Ident@1463..1467
            Ident@1463..1467 "seek"
        FuncArgs@1467..1470
          LParen@1467..1468 "("
          LiteralExpr@1468..1469
            Int@1468..1469 "0"
          RParen@1469..1470 ")"
    End@1470..1473 "end"
  FuncStmt@1473..1534
    Function@1473..1481 "function"
    BinOp@1481..1493
      Ident@1481..1488
        Ident@1481..1488 "anim_mt"
      Colon@1488..1489 ":"
      Ident@1489..1493
        Ident@1489..1493 "seek"
    FuncArgs@1493..1500
      LParen@1493..1494 "("
      Ident@1494..1499 "frame"
      RParen@1499..1500 ")"
    StmtList@1500..1531
      AssignStmt@1500..1519
        BinOp@1500..1513
          Ident@1500..1504
            Ident@1500..1504 "self"
          Dot@1504..1505 "."
          Ident@1505..1513
            Ident@1505..1513 "position"
        Assign@1513..1514 "="
        Ident@1514..1519
          Ident@1514..1519 "frame"
      AssignStmt@1519..1531
        BinOp@1519..1529
          Ident@1519..1523
            Ident@1519..1523 "self"
          Dot@1523..1524 "."
          Ident@1524..1529
            Ident@1524..1529 "timer"
        Assign@1529..1530 "="
        LiteralExpr@1530..1531
          Int@1530..1531 "0"
    End@1531..1534 "end"
  FuncStmt@1534..1589
    Function@1534..1542 "function"
    BinOp@1542..1565
      Ident@1542..1549
        Ident@1542..1549 "anim_mt"
      Colon@1549..1550 ":"
      Ident@1550..1565
        Ident@1550..1565 "getCurrentFrame"
    FuncArgs@1565..1567
      LParen@1565..1566 "("
      RParen@1566..1567 ")"
    StmtList@1567..1586
      ReturnStmt@1567..1586
        Return@1567..1573 "return"
        BinOp@1573..1586
          Ident@1573..1577
            Ident@1573..1577 "self"
          Dot@1577..1578 "."
          Ident@1578..1586
            Ident@1578..1586 "position"
    End@1586..1589 "end"
  FuncStmt@1589..1635
    Function@1589..1597 "function"
    BinOp@1597..1612
      Ident@1597..1604
        Ident@1597..1604 "anim_mt"
      Colon@1604..1605 ":"
      Ident@1605..1612
        Ident@1605..1612 "getSize"
    FuncArgs@1612..1614
      LParen@1612..1613 "("
      RParen@1613..1614 ")"
    StmtList@1614..1632
      ReturnStmt@1614..1632
        Return@1614..1620 "return"
        PrefixOp@1620..1632
          Hash@1620..1621 "#"
          BinOp@1621..1632
            Ident@1621..1625
              Ident@1621..1625 "self"
            Dot@1625..1626 "."
            Ident@1626..1632
              Ident@1626..1632 "frames"
    End@1632..1635 "end"
  FuncStmt@1635..1699
    Function@1635..1643 "function"
    BinOp@1643..1659
      Ident@1643..1650
        Ident@1643..1650 "anim_mt"
      Colon@1650..1651 ":"
      Ident@1651..1659
        Ident@1651..1659 "setDelay"
    FuncArgs@1659..1672
      LParen@1659..1660 "("
      Ident@1660..1665 "frame"
      Comma@1665..1666 ","
      Ident@1666..1671 "delay"
      RParen@1671..1672 ")"
    StmtList@1672..1696
      AssignStmt@1672..1696
        Index@1672..1690
          BinOp@1672..1683
            Ident@1672..1676
              Ident@1672..1676 "self"
            Dot@1676..1677 "."
            Ident@1677..1683
              Ident@1677..1683 "delays"
          LBracket@1683..1684 "["
          Ident@1684..1689
            Ident@1684..1689 "frame"
          RBracket@1689..1690 "]"
        Assign@1690..1691 "="
        Ident@1691..1696
          Ident@1691..1696 "delay"
    End@1696..1699 "end"
  FuncStmt@1699..1749
    Function@1699..1707 "function"
    BinOp@1707..1723
      Ident@1707..1714
        Ident@1707..1714 "anim_mt"
      Colon@1714..1715 ":"
      Ident@1715..1723
        Ident@1715..1723 "setSpeed"
    FuncArgs@1723..1730
      LParen@1723..1724 "("
      Ident@1724..1729 "speed"
      RParen@1729..1730 ")"
    StmtList@1730..1746
      AssignStmt@1730..1746
        BinOp@1730..1740
          Ident@1730..1734
            Ident@1730..1734 "self"
          Dot@1734..1735 "."
          Ident@1735..1740
            Ident@1735..1740 "speed"
        Assign@1740..1741 "="
        Ident@1741..1746
          Ident@1741..1746 "speed"
    End@1746..1749 "end"
  FuncStmt@1749..1821
    Function@1749..1757 "function"
    BinOp@1757..1773
      Ident@1757..1764
        Ident@1757..1764 "anim_mt"
      Colon@1764..1765 ":"
      Ident@1765..1773
        Ident@1765..1773 "getWidth"
    FuncArgs@1773..1775
      LParen@1773..1774 "("
      RParen@1774..1775 ")"
    StmtList@1775..1818
      ReturnStmt@1775..1818
        Return@1775..1781 "return"
        FuncCall@1781..1818
          BinOp@1781..1816
            Index@1781..1807
              BinOp@1781..1792
                Ident@1781..1785
                  Ident@1781..1785 "self"
                Dot@1785..1786 "."
                Ident@1786..1792
                  Ident@1786..1792 "frames"
              LBracket@1792..1793 "["
              BinOp@1793..1806
                Ident@1793..1797
                  Ident@1793..1797 "self"
                Dot@1797..1798 "."
                Ident@1798..1806
                  Ident@1798..1806 "position"
              RBracket@1806..1807 "]"
            Colon@1807..1808 ":"
            Ident@1808..1816
              Ident@1808..1816 "getWidth"
          FuncArgs@1816..1818
            LParen@1816..1817 "("
            RParen@1817..1818 ")"
    End@1818..1821 "end"
  FuncStmt@1821..1895
    Function@1821..1829 "function"
    BinOp@1829..1846
      Ident@1829..1836
        Ident@1829..1836 "anim_mt"
      Colon@1836..1837 ":"
      Ident@1837..1846
        Ident@1837..1846 "getHeight"
    FuncArgs@1846..1848
      LParen@1846..1847 "("
      RParen@1847..1848 ")"
    StmtList@1848..1892
      ReturnStmt@1848..1892
        Return@1848..1854 "return"
        FuncCall@1854..1892
          BinOp@1854..1890
            Index@1854..1880
              BinOp@1854..1865
                Ident@1854..1858
                  Ident@1854..1858 "self"
                Dot@1858..1859 "."
                Ident@1859..1865
                  Ident@1859..1865 "frames"
              LBracket@1865..1866 "["
              BinOp@1866..1879
                Ident@1866..1870
                  Ident@1866..1870 "self"
                Dot@1870..1871 "."
                Ident@1871..1879
                  Ident@1871..1879 "position"
              RBracket@1879..1880 "]"
            Colon@1880..1881 ":"
            Ident@1881..1890
              Ident@1881..1890 "getHeight"
          FuncArgs@1890..1892
            LParen@1890..1891 "("
            RParen@1891..1892 ")"
    End@1892..1895 "end"
  FuncStmt@1895..2027
    Function@1895..1903 "function"
    BinOp@1903..1918
      Ident@1903..1910
        Ident@1903..1910 "anim_mt"
      Colon@1910..1911 ":"
      Ident@1911..1918
        Ident@1911..1918 "setMode"
    FuncArgs@1918..1924
      LParen@1918..1919 "("
      Ident@1919..1923 "mode"
      RParen@1923..1924 ")"
    StmtList@1924..2024
      IfStmt@1924..2024
        If@1924..1926 "if"
        BinOp@1926..1938
          Ident@1926..1930
            Ident@1926..1930 "mode"
          Eq@1930..1932 "=="
          LiteralExpr@1932..1938
            String@1932..1938 "\"loop\""
        Then@1938..1942 "then"
        StmtList@1942..1953
          AssignStmt@1942..1953
            BinOp@1942..1951
              Ident@1942..1946
                Ident@1942..1946 "self"
              Dot@1946..1947 "."
              Ident@1947..1951
                Ident@1947..1951 "mode"
            Assign@1951..1952 "="
            LiteralExpr@1952..1953
              Int@1952..1953 "1"
        ElseChain@1953..2024
          IfStmt@1953..2024
            ElseIf@1953..1959 "elseif"
            BinOp@1959..1971
              Ident@1959..1963
                Ident@1959..1963 "mode"
              Eq@1963..1965 "=="
              LiteralExpr@1965..1971
                String@1965..1971 "\"once\""
            Then@1971..1975 "then"
            StmtList@1975..1986
              AssignStmt@1975..1986
                BinOp@1975..1984
                  Ident@1975..1979
                    Ident@1975..1979 "self"
                  Dot@1979..1980 "."
                  Ident@1980..1984
                    Ident@1980..1984 "mode"
                Assign@1984..1985 "="
                LiteralExpr@1985..1986
                  Int@1985..1986 "2"
            ElseChain@1986..2024
              IfStmt@1986..2024
                ElseIf@1986..1992 "elseif"
                BinOp@1992..2006
                  Ident@1992..1996
                    Ident@1992..1996 "mode"
                  Eq@1996..1998 "=="
                  LiteralExpr@1998..2006
                    String@1998..2006 "\"bounce\""
                Then@2006..2010 "then"
                StmtList@2010..2021
                  AssignStmt@2010..2021
                    BinOp@2010..2019
                      Ident@2010..2014
                        Ident@2010..2014 "self"
                      Dot@2014..2015 "."
                      Ident@2015..2019
                        Ident@2015..2019 "mode"
                    Assign@2019..2020 "="
                    LiteralExpr@2020..2021
                      Int@2020..2021 "3"
                End@2021..2024 "end"
    End@2024..2027 "end"
  IfStmt@2027..2249
    If@2027..2029 "if"
    Ident@2029..2054
      Ident@2029..2054 "Animations_legacy_sup ..."
    Then@2054..2058 "then"
    StmtList@2058..2246
      AssignStmt@2058..2097
        BinOp@2058..2084
          BinOp@2058..2071
            Ident@2058..2062
              Ident@2058..2062 "love"
            Dot@2062..2063 "."
            Ident@2063..2071
              Ident@2063..2071 "graphics"
          Dot@2071..2072 "."
          Ident@2072..2084
            Ident@2072..2084 "newAnimation"
        Assign@2084..2085 "="
        Ident@2085..2097
          Ident@2085..2097 "newAnimation"
      DeclStmt@2097..2130
        Local@2097..2102 "local"
        DeclTarget@2102..2111
          Ident@2102..2111 "oldLGDraw"
        Assign@2111..2112 "="
        BinOp@2112..2130
          Ident@2112..2116
            Ident@2112..2116 "love"
          Dot@2116..2117 "."
          BinOp@2117..2130
            Ident@2117..2125
              Ident@2117..2125 "graphics"
            Dot@2125..2126 "."
            Ident@2126..2130
              Ident@2126..2130 "draw"
      FuncStmt@2130..2246
        Function@2130..2138 "function"
        BinOp@2138..2156
          BinOp@2138..2151
            Ident@2138..2142
              Ident@2138..2142 "love"
            Dot@2142..2143 "."
            Ident@2143..2151
              Ident@2143..2151 "graphics"
          Dot@2151..2152 "."
          Ident@2152..2156
            Ident@2152..2156 "draw"
        FuncArgs@2156..2166
          LParen@2156..2157 "("
          Ident@2157..2161 "item"
          Comma@2161..2162 ","
          TDot@2162..2165 "..."
          RParen@2165..2166 ")"
        StmtList@2166..2243
          IfStmt@2166..2243
            If@2166..2168 "if"
            BinOp@2168..2199
              BinOp@2168..2187
                FuncCall@2168..2178
                  Ident@2168..2172
                    Ident@2168..2172 "type"
                  FuncArgs@2172..2178
                    LParen@2172..2173 "("
                    Ident@2173..2177
                      Ident@2173..2177 "item"
                    RParen@2177..2178 ")"
                Eq@2178..2180 "=="
                LiteralExpr@2180..2187
                  String@2180..2187 "\"table\""
              And@2187..2190 "and"
              BinOp@2190..2199
                Ident@2190..2194
                  Ident@2190..2194 "item"
                Dot@2194..2195 "."
                Ident@2195..2199
                  Ident@2195..2199 "draw"
            Then@2199..2203 "then"
            StmtList@2203..2217
              FuncCall@2203..2217
                BinOp@2203..2212
                  Ident@2203..2207
                    Ident@2203..2207 "item"
                  Colon@2207..2208 ":"
                  Ident@2208..2212
                    Ident@2208..2212 "draw"
                FuncArgs@2212..2217
                  LParen@2212..2213 "("
                  VarArgExpr@2213..2216
                    TDot@2213..2216 "..."
                  RParen@2216..2217 ")"
            ElseChain@2217..2243
              Else@2217..2221 "else"
              StmtList@2221..2240
                FuncCall@2221..2240
                  Ident@2221..2230
                    Ident@2221..2230 "oldLGDraw"
                  FuncArgs@2230..2240
                    LParen@2230..2231 "("
                    Ident@2231..2235
                      Ident@2231..2235 "item"
                    Comma@2235..2236 ","
                    VarArgExpr@2236..2239
                      TDot@2236..2239 "..."
                    RParen@2239..2240 ")"
              End@2240..2243 "end"
        End@2243..2246 "end"
    End@2246..2249 "end"
  DeclStmt@2249..2264
    Local@2249..2254 "local"
    DeclTarget@2254..2261
      Ident@2254..2261 "exports"
    Assign@2261..2262 "="
    TableExpr@2262..2264
      LCurly@2262..2263 "{"
      RCurly@2263..2264 "}"
  DeclStmt@2264..2279
    Local@2264..2269 "local"
    DeclTarget@2269..2276
      Ident@2269..2276 "methods"
    Assign@2276..2277 "="
    TableExpr@2277..2279
      LCurly@2277..2278 "{"
      RCurly@2278..2279 "}"
  DeclStmt@2279..2321
    Local@2279..2284 "local"
    DeclTarget@2284..2290
      Ident@2284..2290 "unpack"
    Assign@2290..2291 "="
    BinOp@2291..2321
      FuncCall@2291..2313
        Ident@2291..2297
          Ident@2291..2297 "rawget"
        FuncArgs@2297..2313
          LParen@2297..2298 "("
          Ident@2298..2303
            Ident@2298..2303 "table"
          Comma@2303..2304 ","
          LiteralExpr@2304..2312
            String@2304..2312 "\"unpack\""
          RParen@2312..2313 ")"
      Or@2313..2315 "or"
      Ident@2315..2321
        Ident@2315..2321 "unpack"
  DeclStmt@2321..2409
    Local@2321..2326 "local"
    DeclTarget@2326..2345
      Ident@2326..2345 "return_if_not_empty"
    Assign@2345..2346 "="
    FuncExpr@2346..2409
      Function@2346..2354 "function"
      FuncArgs@2354..2367
        LParen@2354..2355 "("
        Ident@2355..2362 "state_x"
        Comma@2362..2363 ","
        TDot@2363..2366 "..."
        RParen@2366..2367 ")"
      StmtList@2367..2406
        IfStmt@2367..2397
          If@2367..2369 "if"
          BinOp@2369..2381
            Ident@2369..2376
              Ident@2369..2376 "state_x"
            Eq@2376..2378 "=="
            LiteralExpr@2378..2381
              Nil@2378..2381 "nil"
          Then@2381..2385 "then"
          StmtList@2385..2394
            ReturnStmt@2385..2394
              Return@2385..2391 "return"
              LiteralExpr@2391..2394
                Nil@2391..2394 "nil"
          End@2394..2397 "end"
        ReturnStmt@2397..2406
          Return@2397..2403 "return"
          VarArgExpr@2403..2406
            TDot@2403..2406 "..."
      End@2406..2409 "end"
  DeclStmt@2409..2512
    Local@2409..2414 "local"
    DeclTarget@2414..2431
      Ident@2414..2431 "call_if_not_empty"
    Assign@2431..2432 "="
    FuncExpr@2432..2512
      Function@2432..2440 "function"
      FuncArgs@2440..2457
        LParen@2440..2441 "("
        Ident@2441..2444 "fun"
        Comma@2444..2445 ","
        Ident@2445..2452 "state_x"
        Comma@2452..2453 ","
        TDot@2453..2456 "..."
        RParen@2456..2457 ")"
      StmtList@2457..2509
        IfStmt@2457..2487
          If@2457..2459 "if"
          BinOp@2459..2471
            Ident@2459..2466
              Ident@2459..2466 "state_x"
            Eq@2466..2468 "=="
            LiteralExpr@2468..2471
              Nil@2468..2471 "nil"
          Then@2471..2475 "then"
          StmtList@2475..2484
            ReturnStmt@2475..2484
              Return@2475..2481 "return"
              LiteralExpr@2481..2484
                Nil@2481..2484 "nil"
          End@2484..2487 "end"
        ReturnStmt@2487..2509
          Return@2487..2493 "return"
          ExprList@2493..2509
            Ident@2493..2500
              Ident@2493..2500 "state_x"
            Comma@2500..2501 ","
            FuncCall@2501..2509
              Ident@2501..2504
                Ident@2501..2504 "fun"
              FuncArgs@2504..2509
                LParen@2504..2505 "("
                VarArgExpr@2505..2508
                  TDot@2505..2508 "..."
                RParen@2508..2509 ")"
      End@2509..2512 "end"
  DeclStmt@2512..2720
    Local@2512..2517 "local"
    FuncStmt@2517..2720
      Function@2517..2525 "function"
      Ident@2525..2533
        Ident@2525..2533 "deepcopy"
      FuncArgs@2533..2539
        LParen@2533..2534 "("
        Ident@2534..2538 "orig"
        RParen@2538..2539 ")"
      StmtList@2539..2717
        DeclStmt@2539..2564
          Local@2539..2544 "local"
          DeclTarget@2544..2553
            Ident@2544..2553 "orig_type"
          Assign@2553..2554 "="
          FuncCall@2554..2564
            Ident@2554..2558
              Ident@2554..2558 "type"
            FuncArgs@2558..2564
              LParen@2558..2559 "("
              Ident@2559..2563
                Ident@2559..2563 "orig"
              RParen@2563..2564 ")"
        DeclStmt@2564..2573
          Local@2564..2569 "local"
          DeclTarget@2569..2573
            Ident@2569..2573 "copy"
        IfStmt@2573..2707
          If@2573..2575 "if"
          BinOp@2575..2593
            Ident@2575..2584
              Ident@2575..2584 "orig_type"
            Eq@2584..2586 "=="
            LiteralExpr@2586..2593
              String@2586..2593 "'table'"
          Then@2593..2597 "then"
          StmtList@2597..2691
            AssignStmt@2597..2604
              Ident@2597..2601
                Ident@2597..2601 "copy"
              Assign@2601..2602 "="
              TableExpr@2602..2604
                LCurly@2602..2603 "{"
                RCurly@2603..2604 "}"
            ForGenStmt@2604..2691
              For@2604..2607 "for"
              Ident@2607..2615 "orig_key"
              Comma@2615..2616 ","
              Ident@2616..2626 "orig_value"
              In@2626..2628 "in"
              ExprList@2628..2641
                Ident@2628..2632
                  Ident@2628..2632 "next"
                Comma@2632..2633 ","
                Ident@2633..2637
                  Ident@2633..2637 "orig"
                Comma@2637..2638 ","
                LiteralExpr@2638..2641
                  Nil@2638..2641 "nil"
              BlockStmt@2641..2691
                Do@2641..2643 "do"
                StmtList@2643..2688
                  AssignStmt@2643..2688
                    Index@2643..2667
                      Ident@2643..2647
                        Ident@2643..2647 "copy"
                      LBracket@2647..2648 "["
                      FuncCall@2648..2666
                        Ident@2648..2656
                          Ident@2648..2656 "deepcopy"
                        FuncArgs@2656..2666
                          LParen@2656..2657 "("
                          Ident@2657..2665
                            Ident@2657..2665 "orig_key"
                          RParen@2665..2666 ")"
                      RBracket@2666..2667 "]"
                    Assign@2667..2668 "="
                    FuncCall@2668..2688
                      Ident@2668..2676
                        Ident@2668..2676 "deepcopy"
                      FuncArgs@2676..2688
                        LParen@2676..2677 "("
                        Ident@2677..2687
                          Ident@2677..2687 "orig_value"
                        RParen@2687..2688 ")"
                End@2688..2691 "end"
          ElseChain@2691..2707
            Else@2691..2695 "else"
            StmtList@2695..2704
              AssignStmt@2695..2704
                Ident@2695..2699
                  Ident@2695..2699 "copy"
                Assign@2699..2700 "="
                Ident@2700..2704
                  Ident@2700..2704 "orig"
            End@2704..2707 "end"
        ReturnStmt@2707..2717
          Return@2707..2713 "return"
          Ident@2713..2717
            Ident@2713..2717 "copy"
      End@2717..2720 "end"
  DeclStmt@2720..2867
    Local@2720..2725 "local"
    DeclTarget@2725..2736
      Ident@2725..2736 "iterator_mt"
    Assign@2736..2737 "="
    TableExpr@2737..2867
      LCurly@2737..2738 "{"
      TableMapElem@2738..2801
        Ident@2738..2744 "__call"
        Assign@2744..2745 "="
        FuncExpr@2745..2801
          Function@2745..2753 "function"
          FuncArgs@2753..2771
            LParen@2753..2754 "("
            Ident@2754..2758 "self"
            Comma@2758..2759 ","
            Ident@2759..2764 "param"
            Comma@2764..2765 ","
            Ident@2765..2770 "state"
            RParen@2770..2771 ")"
          StmtList@2771..2798
            ReturnStmt@2771..2798
              Return@2771..2777 "return"
              FuncCall@2777..2798
                BinOp@2777..2785
                  Ident@2777..2781
                    Ident@2777..2781 "self"
                  Dot@2781..2782 "."
                  Ident@2782..2785
                    Ident@2782..2785 "gen"
                FuncArgs@2785..2798
                  LParen@2785..2786 "("
                  Ident@2786..2791
                    Ident@2786..2791 "param"
                  Comma@2791..2792 ","
                  Ident@2792..2797
                    Ident@2792..2797 "state"
                  RParen@2797..2798 ")"
          End@2798..2801 "end"
      Semicolon@2801..2802 ";"
      TableMapElem@2802..2849
        Ident@2802..2812 "__tostring"
        Assign@2812..2813 "="
        FuncExpr@2813..2849
          Function@2813..2821 "function"
          FuncArgs@2821..2827
            LParen@2821..2822 "("
            Ident@2822..2826 "self"
            RParen@2826..2827 ")"
          StmtList@2827..2846
            ReturnStmt@2827..2846
              Return@2827..2833 "return"
              LiteralExpr@2833..2846
                String@2833..2846 "'<generator>'"
          End@2846..2849 "end"
      Semicolon@2849..2850 ";"
      TableMapElem@2850..2865
        Ident@2850..2857 "__index"
        Assign@2857..2858 "="
        Ident@2858..2865
          Ident@2858..2865 "methods"
      Semicolon@2865..2866 ";"
      RCurly@2866..2867 "}"
  DeclStmt@2867..2982
    Local@2867..2872 "local"
    DeclTarget@2872..2876
      Ident@2872..2876 "wrap"
    Assign@2876..2877 "="
    FuncExpr@2877..2982
      Function@2877..2885 "function"
      FuncArgs@2885..2902
        LParen@2885..2886 "("
        Ident@2886..2889 "gen"
        Comma@2889..2890 ","
        Ident@2890..2895 "param"
        Comma@2895..2896 ","
        Ident@2896..2901 "state"
        RParen@2901..2902 ")"
      StmtList@2902..2979
        ReturnStmt@2902..2979
          Return@2902..2908 "return"
          ExprList@2908..2979
            FuncCall@2908..2967
              Ident@2908..2920
                Ident@2908..2920 "setmetatable"
              FuncArgs@2920..2967
                LParen@2920..2921 "("
                TableExpr@2921..2954
                  LCurly@2921..2922 "{"
                  TableMapElem@2922..2929
                    Ident@2922..2925 "gen"
                    Assign@2925..2926 "="
                    Ident@2926..2929
                      Ident@2926..2929 "gen"
                  Comma@2929..2930 ","
                  TableMapElem@2930..2941
                    Ident@2930..2935 "param"
                    Assign@2935..2936 "="
                    Ident@2936..2941
                      Ident@2936..2941 "param"
                  Comma@2941..2942 ","
                  TableMapElem@2942..2953
                    Ident@2942..2947 "state"
                    Assign@2947..2948 "="
                    Ident@2948..2953
                      Ident@2948..2953 "state"
                  RCurly@2953..2954 "}"
                Comma@2954..2955 ","
                Ident@2955..2966
                  Ident@2955..2966 "iterator_mt"
                RParen@2966..2967 ")"
            Comma@2967..2968 ","
            Ident@2968..2973
              Ident@2968..2973 "param"
            Comma@2973..2974 ","
            Ident@2974..2979
              Ident@2974..2979 "state"
      End@2979..2982 "end"
  AssignStmt@2982..2999
    BinOp@2982..2994
      Ident@2982..2989
        Ident@2982..2989 "exports"
      Dot@2989..2990 "."
      Ident@2990..2994
        Ident@2990..2994 "wrap"
    Assign@2994..2995 "="
    Ident@2995..2999
      Ident@2995..2999 "wrap"
  DeclStmt@2999..3064
    Local@2999..3004 "local"
    DeclTarget@3004..3010
      Ident@3004..3010 "unwrap"
    Assign@3010..3011 "="
    FuncExpr@3011..3064
      Function@3011..3019 "function"
      FuncArgs@3019..3025
        LParen@3019..3020 "("
        Ident@3020..3024 "self"
        RParen@3024..3025 ")"
      StmtList@3025..3061
        ReturnStmt@3025..3061
          Return@3025..3031 "return"
          ExprList@3031..3061
            BinOp@3031..3039
              Ident@3031..3035
                Ident@3031..3035 "self"
              Dot@3035..3036 "."
              Ident@3036..3039
                Ident@3036..3039 "gen"
            Comma@3039..3040 ","
            BinOp@3040..3050
              Ident@3040..3044
                Ident@3040..3044 "self"
              Dot@3044..3045 "."
              Ident@3045..3050
                Ident@3045..3050 "param"
            Comma@3050..3051 ","
            BinOp@3051..3061
              Ident@3051..3055
                Ident@3051..3055 "self"
              Dot@3055..3056 "."
              Ident@3056..3061
                Ident@3056..3061 "state"
      End@3061..3064 "end"
  AssignStmt@3064..3085
    BinOp@3064..3078
      Ident@3064..3071
        Ident@3064..3071 "methods"
      Dot@3071..3072 "."
      Ident@3072..3078
        Ident@3072..3078 "unwrap"
    Assign@3078..3079 "="
    Ident@3079..3085
      Ident@3079..3085 "unwrap"
  DeclStmt@3085..3133
    Local@3085..3090 "local"
    DeclTarget@3090..3097
      Ident@3090..3097 "nil_gen"
    Assign@3097..3098 "="
    FuncExpr@3098..3133
      Function@3098..3106 "function"
      FuncArgs@3106..3121
        LParen@3106..3107 "("
        Ident@3107..3113 "_param"
        Comma@3113..3114 ","
        Ident@3114..3120 "_state"
        RParen@3120..3121 ")"
      StmtList@3121..3130
        ReturnStmt@3121..3130
          Return@3121..3127 "return"
          LiteralExpr@3127..3130
            Nil@3127..3130 "nil"
      End@3130..3133 "end"
  DeclStmt@3133..3270
    Local@3133..3138 "local"
    DeclTarget@3138..3148
      Ident@3138..3148 "string_gen"
    Assign@3148..3149 "="
    FuncExpr@3149..3270
      Function@3149..3157 "function"
      FuncArgs@3157..3170
        LParen@3157..3158 "("
        Ident@3158..3163 "param"
        Comma@3163..3164 ","
        Ident@3164..3169 "state"
        RParen@3169..3170 ")"
      StmtList@3170..3267
        DeclStmt@3170..3188
          Local@3170..3175 "local"
          DeclTarget@3175..3180
            Ident@3175..3180 "state"
          Assign@3180..3181 "="
          BinOp@3181..3188
            Ident@3181..3186
              Ident@3181..3186 "state"
            Plus@3186..3187 "+"
            LiteralExpr@3187..3188
              Int@3187..3188 "1"
        IfStmt@3188..3218
          If@3188..3190 "if"
          BinOp@3190..3202
            Ident@3190..3195
              Ident@3190..3195 "state"
            RAngle@3195..3196 ">"
            PrefixOp@3196..3202
              Hash@3196..3197 "#"
              Ident@3197..3202
                Ident@3197..3202 "param"
          Then@3202..3206 "then"
          StmtList@3206..3215
            ReturnStmt@3206..3215
              Return@3206..3212 "return"
              LiteralExpr@3212..3215
                Nil@3212..3215 "nil"
          End@3215..3218 "end"
        DeclStmt@3218..3254
          Local@3218..3223 "local"
          DeclTarget@3223..3224
            Ident@3223..3224 "r"
          Assign@3224..3225 "="
          FuncCall@3225..3254
            BinOp@3225..3235
              Ident@3225..3231
                Ident@3225..3231 "string"
              Dot@3231..3232 "."
              Ident@3232..3235
                Ident@3232..3235 "sub"
            FuncArgs@3235..3254
              LParen@3235..3236 "("
              Ident@3236..3241
                Ident@3236..3241 "param"
              Comma@3241..3242 ","
              Ident@3242..3247
                Ident@3242..3247 "state"
              Comma@3247..3248 ","
              Ident@3248..3253
                Ident@3248..3253 "state"
              RParen@3253..3254 ")"
        ReturnStmt@3254..3267
          Return@3254..3260 "return"
          ExprList@3260..3267
            Ident@3260..3265
              Ident@3260..3265 "state"
            Comma@3265..3266 ","
            Ident@3266..3267
              Ident@3266..3267 "r"
      End@3267..3270 "end"
  DeclStmt@3270..3296
    Local@3270..3275 "local"
    DeclTarget@3275..3285
      Ident@3275..3285 "ipairs_gen"
    Assign@3285..3286 "="
    FuncCall@3286..3296
      Ident@3286..3292
        Ident@3286..3292 "ipairs"
      FuncArgs@3292..3296
        LParen@3292..3293 "("
        TableExpr@3293..3295
          LCurly@3293..3294 "{"
          RCurly@3294..3295 "}"
        RParen@3295..3296 ")"
  DeclStmt@3296..3323
    Local@3296..3301 "local"
    DeclTarget@3301..3310
      Ident@3301..3310 "pairs_gen"
    Assign@3310..3311 "="
    FuncCall@3311..3323
      Ident@3311..3316
        Ident@3311..3316 "pairs"
      FuncArgs@3316..3323
        LParen@3316..3317 "("
        TableExpr@3317..3322
          LCurly@3317..3318 "{"
          TableMapElem@3318..3321
            Ident@3318..3319 "a"
            Assign@3319..3320 "="
            LiteralExpr@3320..3321
              Int@3320..3321 "0"
          RCurly@3321..3322 "}"
        RParen@3322..3323 ")"
  DeclStmt@3323..3418
    Local@3323..3328 "local"
    DeclTarget@3328..3335
      Ident@3328..3335 "map_gen"
    Assign@3335..3336 "="
    FuncExpr@3336..3418
      Function@3336..3344 "function"
      FuncArgs@3344..3353
        LParen@3344..3345 "("
        Ident@3345..3348 "tab"
        Comma@3348..3349 ","
        Ident@3349..3352 "key"
        RParen@3352..3353 ")"
      StmtList@3353..3415
        DeclStmt@3353..3363
          Local@3353..3358 "local"
          DeclTarget@3358..3363
            Ident@3358..3363 "value"
        DeclStmt@3363..3396
          Local@3363..3368 "local"
          DeclTarget@3368..3371
            Ident@3368..3371 "key"
          Comma@3371..3372 ","
          DeclTarget@3372..3377
            Ident@3372..3377 "value"
          Assign@3377..3378 "="
          FuncCall@3378..3396
            Ident@3378..3387
              Ident@3378..3387 "pairs_gen"
            FuncArgs@3387..3396
              LParen@3387..3388 "("
              Ident@3388..3391
                Ident@3388..3391 "tab"
              Comma@3391..3392 ","
              Ident@3392..3395
                Ident@3392..3395 "key"
              RParen@3395..3396 ")"
        ReturnStmt@3396..3415
          Return@3396..3402 "return"
          ExprList@3402..3415
            Ident@3402..3405
              Ident@3402..3405 "key"
            Comma@3405..3406 ","
            Ident@3406..3409
              Ident@3406..3409 "key"
            Comma@3409..3410 ","
            Ident@3410..3415
              Ident@3410..3415 "value"
      End@3415..3418 "end"
  DeclStmt@3418..3991
    Local@3418..3423 "local"
    DeclTarget@3423..3430
      Ident@3423..3430 "rawiter"
    Assign@3430..3431 "="
    FuncExpr@3431..3991
      Function@3431..3439 "function"
      FuncArgs@3439..3456
        LParen@3439..3440 "("
        Ident@3440..3443 "obj"
        Comma@3443..3444 ","
        Ident@3444..3449 "param"
        Comma@3449..3450 ","
        Ident@3450..3455 "state"
        RParen@3455..3456 ")"
      StmtList@3456..3988
        FuncCall@3456..3491
          Ident@3456..3462
            Ident@3456..3462 "assert"
          FuncArgs@3462..3491
            LParen@3462..3463 "("
            BinOp@3463..3471
              Ident@3463..3466
                Ident@3463..3466 "obj"
              NotEq@3466..3468 "~="
              LiteralExpr@3468..3471
                Nil@3468..3471 "nil"
            Comma@3471..3472 ","
            LiteralExpr@3472..3490
              String@3472..3490 "\"invalid iterator\""
            RParen@3490..3491 ")"
        IfStmt@3491..3912
          If@3491..3493 "if"
          BinOp@3493..3511
            FuncCall@3493..3502
              Ident@3493..3497
                Ident@3493..3497 "type"
              FuncArgs@3497..3502
                LParen@3497..3498 "("
                Ident@3498..3501
                  Ident@3498..3501 "obj"
                RParen@3501..3502 ")"
            Eq@3502..3504 "=="
            LiteralExpr@3504..3511
              String@3504..3511 "\"table\""
          Then@3511..3515 "then"
          StmtList@3515..3765
            DeclStmt@3515..3540
              Local@3515..3520 "local"
              DeclTarget@3520..3522
                Ident@3520..3522 "mt"
              Assign@3522..3523 "="
              FuncCall@3523..3540
                Ident@3523..3535
                  Ident@3523..3535 "getmetatable"
                FuncArgs@3535..3540
                  LParen@3535..3536 "("
                  Ident@3536..3539
                    Ident@3536..3539 "obj"
                  RParen@3539..3540 ")"
            Semicolon@3540..3541
              Semicolon@3540..3541 ";"
            IfStmt@3541..3708
              If@3541..3543 "if"
              BinOp@3543..3550
                Ident@3543..3545
                  Ident@3543..3545 "mt"
                NotEq@3545..3547 "~="
                LiteralExpr@3547..3550
                  Nil@3547..3550 "nil"
              Then@3550..3554 "then"
              StmtList@3554..3705
                IfStmt@3554..3705
                  If@3554..3556 "if"
                  BinOp@3556..3571
                    Ident@3556..3558
                      Ident@3556..3558 "mt"
                    Eq@3558..3560 "=="
                    Ident@3560..3571
                      Ident@3560..3571 "iterator_mt"
                  Then@3571..3575 "then"
                  StmtList@3575..3608
                    ReturnStmt@3575..3608
                      Return@3575..3581 "return"
                      ExprList@3581..3608
                        BinOp@3581..3588
                          Ident@3581..3584
                            Ident@3581..3584 "obj"
                          Dot@3584..3585 "."
                          Ident@3585..3588
                            Ident@3585..3588 "gen"
                        Comma@3588..3589 ","
                        BinOp@3589..3598
                          Ident@3589..3592
                            Ident@3589..3592 "obj"
                          Dot@3592..3593 "."
                          Ident@3593..3598
                            Ident@3593..3598 "param"
                        Comma@3598..3599 ","
                        BinOp@3599..3608
                          Ident@3599..3602
                            Ident@3599..3602 "obj"
                          Dot@3602..3603 "."
                          Ident@3603..3608
                            Ident@3603..3608 "state"
                  ElseChain@3608..3705
                    IfStmt@3608..3705
                      ElseIf@3608..3614 "elseif"
                      BinOp@3614..3630
                        BinOp@3614..3625
                          Ident@3614..3616
                            Ident@3614..3616 "mt"
                          Dot@3616..3617 "."
                          Ident@3617..3625
                            Ident@3617..3625 "__ipairs"
                        NotEq@3625..3627 "~="
                        LiteralExpr@3627..3630
                          Nil@3627..3630 "nil"
                      Then@3630..3634 "then"
                      StmtList@3634..3656
                        ReturnStmt@3634..3656
                          Return@3634..3640 "return"
                          FuncCall@3640..3656
                            BinOp@3640..3651
                              Ident@3640..3642
                                Ident@3640..3642 "mt"
                              Dot@3642..3643 "."
                              Ident@3643..3651
                                Ident@3643..3651 "__ipairs"
                            FuncArgs@3651..3656
                              LParen@3651..3652 "("
                              Ident@3652..3655
                                Ident@3652..3655 "obj"
                              RParen@3655..3656 ")"
                      ElseChain@3656..3705
                        IfStmt@3656..3705
                          ElseIf@3656..3662 "elseif"
                          BinOp@3662..3677
                            BinOp@3662..3672
                              Ident@3662..3664
                                Ident@3662..3664 "mt"
                              Dot@3664..3665 "."
                              Ident@3665..3672
                                Ident@3665..3672 "__pairs"
                            NotEq@3672..3674 "~="
                            LiteralExpr@3674..3677
                              Nil@3674..3677 "nil"
                          Then@3677..3681 "then"
                          StmtList@3681..3702
                            ReturnStmt@3681..3702
                              Return@3681..3687 "return"
                              FuncCall@3687..3702
                                BinOp@3687..3697
                                  Ident@3687..3689
                                    Ident@3687..3689 "mt"
                                  Dot@3689..3690 "."
                                  Ident@3690..3697
                                    Ident@3690..3697 "__pairs"
                                FuncArgs@3697..3702
                                  LParen@3697..3698 "("
                                  Ident@3698..3701
                                    Ident@3698..3701 "obj"
                                  RParen@3701..3702 ")"
                          End@3702..3705 "end"
              End@3705..3708 "end"
            IfStmt@3708..3765
              If@3708..3710 "if"
              BinOp@3710..3716
                PrefixOp@3710..3714
                  Hash@3710..3711 "#"
                  Ident@3711..3714
                    Ident@3711..3714 "obj"
                RAngle@3714..3715 ">"
                LiteralExpr@3715..3716
                  Int@3715..3716 "0"
              Then@3716..3720 "then"
              StmtList@3720..3737
                ReturnStmt@3720..3737
                  Return@3720..3726 "return"
                  FuncCall@3726..3737
                    Ident@3726..3732
                      Ident@3726..3732 "ipairs"
                    FuncArgs@3732..3737
                      LParen@3732..3733 "("
                      Ident@3733..3736
                        Ident@3733..3736 "obj"
                      RParen@3736..3737 ")"
              ElseChain@3737..3765
                Else@3737..3741 "else"
                StmtList@3741..3762
                  ReturnStmt@3741..3762
                    Return@3741..3747 "return"
                    ExprList@3747..3762
                      Ident@3747..3754
                        Ident@3747..3754 "map_gen"
                      Comma@3754..3755 ","
                      Ident@3755..3758
                        Ident@3755..3758 "obj"
                      Comma@3758..3759 ","
                      LiteralExpr@3759..3762
                        Nil@3759..3762 "nil"
                End@3762..3765 "end"
          ElseChain@3765..3912
            IfStmt@3765..3912
              ElseIf@3765..3771 "elseif"
              Expr@3771..3794
                LParen@3771..3772 "("
                BinOp@3772..3793
                  FuncCall@3772..3781
                    Ident@3772..3776
                      Ident@3772..3776 "type"
                    FuncArgs@3776..3781
                      LParen@3776..3777 "("
                      Ident@3777..3780
                        Ident@3777..3780 "obj"
                      RParen@3780..3781 ")"
                  Eq@3781..3783 "=="
                  LiteralExpr@3783..3793
                    String@3783..3793 "\"function\""
                RParen@3793..3794 ")"
              Then@3794..3798 "then"
              StmtList@3798..3819
                ReturnStmt@3798..3819
                  Return@3798..3804 "return"
                  ExprList@3804..3819
                    Ident@3804..3807
                      Ident@3804..3807 "obj"
                    Comma@3807..3808 ","
                    Ident@3808..3813
                      Ident@3808..3813 "param"
                    Comma@3813..3814 ","
                    Ident@3814..3819
                      Ident@3814..3819 "state"
              ElseChain@3819..3912
                IfStmt@3819..3912
                  ElseIf@3819..3825 "elseif"
                  Expr@3825..3846
                    LParen@3825..3826 "("
                    BinOp@3826..3845
                      FuncCall@3826..3835
                        Ident@3826..3830
                          Ident@3826..3830 "type"
                        FuncArgs@3830..3835
                          LParen@3830..3831 "("
                          Ident@3831..3834
                            Ident@3831..3834 "obj"
                          RParen@3834..3835 ")"
                      Eq@3835..3837 "=="
                      LiteralExpr@3837..3845
                        String@3837..3845 "\"string\""
                    RParen@3845..3846 ")"
                  Then@3846..3850 "then"
                  StmtList@3850..3909
                    IfStmt@3850..3887
                      If@3850..3852 "if"
                      BinOp@3852..3859
                        PrefixOp@3852..3856
                          Hash@3852..3853 "#"
                          Ident@3853..3856
                            Ident@3853..3856 "obj"
                        Eq@3856..3858 "=="
                        LiteralExpr@3858..3859
                          Int@3858..3859 "0"
                      Then@3859..3863 "then"
                      StmtList@3863..3884
                        ReturnStmt@3863..3884
                          Return@3863..3869 "return"
                          ExprList@3869..3884
                            Ident@3869..3876
                              Ident@3869..3876 "nil_gen"
                            Comma@3876..3877 ","
                            LiteralExpr@3877..3880
                              Nil@3877..3880 "nil"
                            Comma@3880..3881 ","
                            LiteralExpr@3881..3884
                              Nil@3881..3884 "nil"
                      End@3884..3887 "end"
                    ReturnStmt@3887..3909
                      Return@3887..3893 "return"
                      ExprList@3893..3909
                        Ident@3893..3903
                          Ident@3893..3903 "string_gen"
                        Comma@3903..3904 ","
                        Ident@3904..3907
                          Ident@3904..3907 "obj"
                        Comma@3907..3908 ","
                        LiteralExpr@3908..3909
                          Int@3908..3909 "0"
                  End@3909..3912 "end"
        FuncCall@3912..3988
          Ident@3912..3917
            Ident@3912..3917 "error"
          FuncArgs@3917..3988
            LParen@3917..3918 "("
            FuncCall@3918..3987
              BinOp@3918..3931
                Ident@3918..3924
                  Ident@3918..3924 "string"
                Dot@3924..3925 "."
                Ident@3925..3931
                  Ident@3925..3931 "format"
              FuncArgs@3931..3987
                LParen@3931..3932 "("
                LiteralExpr@3932..3972
                  String@3932..3972 "'object %s of type \"% ..."
                Comma@3972..3973 ","
                Ident@3973..3976
                  Ident@3973..3976 "obj"
                Comma@3976..3977 ","
                FuncCall@3977..3986
                  Ident@3977..3981
                    Ident@3977..3981 "type"
                  FuncArgs@3981..3986
                    LParen@3981..3982 "("
                    Ident@3982..3985
                      Ident@3982..3985 "obj"
                    RParen@3985..3986 ")"
                RParen@3986..3987 ")"
            RParen@3987..3988 ")"
      End@3988..3991 "end"
  DeclStmt@3991..4065
    Local@3991..3996 "local"
    DeclTarget@3996..4000
      Ident@3996..4000 "iter"
    Assign@4000..4001 "="
    FuncExpr@4001..4065
      Function@4001..4009 "function"
      FuncArgs@4009..4026
        LParen@4009..4010 "("
        Ident@4010..4013 "obj"
        Comma@4013..4014 ","
        Ident@4014..4019 "param"
        Comma@4019..4020 ","
        Ident@4020..4025 "state"
        RParen@4025..4026 ")"
      StmtList@4026..4062
        ReturnStmt@4026..4062
          Return@4026..4032 "return"
          FuncCall@4032..4062
            Ident@4032..4036
              Ident@4032..4036 "wrap"
            FuncArgs@4036..4062
              LParen@4036..4037 "("
              FuncCall@4037..4061
                Ident@4037..4044
                  Ident@4037..4044 "rawiter"
                FuncArgs@4044..4061
                  LParen@4044..4045 "("
                  Ident@4045..4048
                    Ident@4045..4048 "obj"
                  Comma@4048..4049 ","
                  Ident@4049..4054
                    Ident@4049..4054 "param"
                  Comma@4054..4055 ","
                  Ident@4055..4060
                    Ident@4055..4060 "state"
                  RParen@4060..4061 ")"
              RParen@4061..4062 ")"
      End@4062..4065 "end"
  AssignStmt@4065..4082
    BinOp@4065..4077
      Ident@4065..4072
        Ident@4065..4072 "exports"
      Dot@4072..4073 "."
      Ident@4073..4077
        Ident@4073..4077 "iter"
    Assign@4077..4078 "="
    Ident@4078..4082
      Ident@4078..4082 "iter"
  DeclStmt@4082..4175
    Local@4082..4087 "local"
    DeclTarget@4087..4094
      Ident@4087..4094 "method0"
    Assign@4094..4095 "="
    FuncExpr@4095..4175
      Function@4095..4103 "function"
      FuncArgs@4103..4108
        LParen@4103..4104 "("
        Ident@4104..4107 "fun"
        RParen@4107..4108 ")"
      StmtList@4108..4172
        ReturnStmt@4108..4172
          Return@4108..4114 "return"
          FuncExpr@4114..4172
            Function@4114..4122 "function"
            FuncArgs@4122..4128
              LParen@4122..4123 "("
              Ident@4123..4127 "self"
              RParen@4127..4128 ")"
            StmtList@4128..4169
              ReturnStmt@4128..4169
                Return@4128..4134 "return"
                FuncCall@4134..4169
                  Ident@4134..4137
                    Ident@4134..4137 "fun"
                  FuncArgs@4137..4169
                    LParen@4137..4138 "("
                    BinOp@4138..4146
                      Ident@4138..4142
                        Ident@4138..4142 "self"
                      Dot@4142..4143 "."
                      Ident@4143..4146
                        Ident@4143..4146 "gen"
                    Comma@4146..4147 ","
                    BinOp@4147..4157
                      Ident@4147..4151
                        Ident@4147..4151 "self"
                      Dot@4151..4152 "."
                      Ident@4152..4157
                        Ident@4152..4157 "param"
                    Comma@4157..4158 ","
                    BinOp@4158..4168
                      Ident@4158..4162
                        Ident@4158..4162 "self"
                      Dot@4162..4163 "."
                      Ident@4163..4168
                        Ident@4163..4168 "state"
                    RParen@4168..4169 ")"
            End@4169..4172 "end"
      End@4172..4175 "end"
  DeclStmt@4175..4278
    Local@4175..4180 "local"
    DeclTarget@4180..4187
      Ident@4180..4187 "method1"
    Assign@4187..4188 "="
    FuncExpr@4188..4278
      Function@4188..4196 "function"
      FuncArgs@4196..4201
        LParen@4196..4197 "("
        Ident@4197..4200 "fun"
        RParen@4200..4201 ")"
      StmtList@4201..4275
        ReturnStmt@4201..4275
          Return@4201..4207 "return"
          FuncExpr@4207..4275
            Function@4207..4215 "function"
            FuncArgs@4215..4226
              LParen@4215..4216 "("
              Ident@4216..4220 "self"
              Comma@4220..4221 ","
              Ident@4221..4225 "arg1"
              RParen@4225..4226 ")"
            StmtList@4226..4272
              ReturnStmt@4226..4272
                Return@4226..4232 "return"
                FuncCall@4232..4272
                  Ident@4232..4235
                    Ident@4232..4235 "fun"
                  FuncArgs@4235..4272
                    LParen@4235..4236 "("
                    Ident@4236..4240
                      Ident@4236..4240 "arg1"
                    Comma@4240..4241 ","
                    BinOp@4241..4249
                      Ident@4241..4245
                        Ident@4241..4245 "self"
                      Dot@4245..4246 "."
                      Ident@4246..4249
                        Ident@4246..4249 "gen"
                    Comma@4249..4250 ","
                    BinOp@4250..4260
                      Ident@4250..4254
                        Ident@4250..4254 "self"
                      Dot@4254..4255 "."
                      Ident@4255..4260
                        Ident@4255..4260 "param"
                    Comma@4260..4261 ","
                    BinOp@4261..4271
                      Ident@4261..4265
                        Ident@4261..4265 "self"
                      Dot@4265..4266 "."
                      Ident@4266..4271
                        Ident@4266..4271 "state"
                    RParen@4271..4272 ")"
            End@4272..4275 "end"
      End@4275..4278 "end"
  DeclStmt@4278..4391
    Local@4278..4283 "local"
    DeclTarget@4283..4290
      Ident@4283..4290 "method2"
    Assign@4290..4291 "="
    FuncExpr@4291..4391
      Function@4291..4299 "function"
      FuncArgs@4299..4304
        LParen@4299..4300 "("
        Ident@4300..4303 "fun"
        RParen@4303..4304 ")"
      StmtList@4304..4388
        ReturnStmt@4304..4388
          Return@4304..4310 "return"
          FuncExpr@4310..4388
            Function@4310..4318 "function"
            FuncArgs@4318..4334
              LParen@4318..4319 "("
              Ident@4319..4323 "self"
              Comma@4323..4324 ","
              Ident@4324..4328 "arg1"
              Comma@4328..4329 ","
              Ident@4329..4333 "arg2"
              RParen@4333..4334 ")"
            StmtList@4334..4385
              ReturnStmt@4334..4385
                Return@4334..4340 "return"
                FuncCall@4340..4385
                  Ident@4340..4343
                    Ident@4340..4343 "fun"
                  FuncArgs@4343..4385
                    LParen@4343..4344 "("
                    Ident@4344..4348
                      Ident@4344..4348 "arg1"
                    Comma@4348..4349 ","
                    Ident@4349..4353
                      Ident@4349..4353 "arg2"
                    Comma@4353..4354 ","
                    BinOp@4354..4362
                      Ident@4354..4358
                        Ident@4354..4358 "self"
                      Dot@4358..4359 "."
                      Ident@4359..4362
                        Ident@4359..4362 "gen"
                    Comma@4362..4363 ","
                    BinOp@4363..4373
                      Ident@4363..4367
                        Ident@4363..4367 "self"
                      Dot@4367..4368 "."
                      Ident@4368..4373
                        Ident@4368..4373 "param"
                    Comma@4373..4374 ","
                    BinOp@4374..4384
                      Ident@4374..4378
                        Ident@4374..4378 "self"
                      Dot@4378..4379 "."
                      Ident@4379..4384
                        Ident@4379..4384 "state"
                    RParen@4384..4385 ")"
            End@4385..4388 "end"
      End@4388..4391 "end"
  DeclStmt@4391..4489
    Local@4391..4396 "local"
    DeclTarget@4396..4403
      Ident@4396..4403 "export0"
    Assign@4403..4404 "="
    FuncExpr@4404..4489
      Function@4404..4412 "function"
      FuncArgs@4412..4417
        LParen@4412..4413 "("
        Ident@4413..4416 "fun"
        RParen@4416..4417 ")"
      StmtList@4417..4486
        ReturnStmt@4417..4486
          Return@4417..4423 "return"
          FuncExpr@4423..4486
            Function@4423..4431 "function"
            FuncArgs@4431..4448
              LParen@4431..4432 "("
              Ident@4432..4435 "gen"
              Comma@4435..4436 ","
              Ident@4436..4441 "param"
              Comma@4441..4442 ","
              Ident@4442..4447 "state"
              RParen@4447..4448 ")"
            StmtList@4448..4483
              ReturnStmt@4448..4483
                Return@4448..4454 "return"
                FuncCall@4454..4483
                  Ident@4454..4457
                    Ident@4454..4457 "fun"
                  FuncArgs@4457..4483
                    LParen@4457..4458 "("
                    FuncCall@4458..4482
                      Ident@4458..4465
                        Ident@4458..4465 "rawiter"
                      FuncArgs@4465..4482
                        LParen@4465..4466 "("
                        Ident@4466..4469
                          Ident@4466..4469 "gen"
                        Comma@4469..4470 ","
                        Ident@4470..4475
                          Ident@4470..4475 "param"
                        Comma@4475..4476 ","
                        Ident@4476..4481
                          Ident@4476..4481 "state"
                        RParen@4481..4482 ")"
                    RParen@4482..4483 ")"
            End@4483..4486 "end"
      End@4486..4489 "end"
  DeclStmt@4489..4597
    Local@4489..4494 "local"
    DeclTarget@4494..4501
      Ident@4494..4501 "export1"
    Assign@4501..4502 "="
    FuncExpr@4502..4597
      Function@4502..4510 "function"
      FuncArgs@4510..4515
        LParen@4510..4511 "("
        Ident@4511..4514 "fun"
        RParen@4514..4515 ")"
      StmtList@4515..4594
        ReturnStmt@4515..4594
          Return@4515..4521 "return"
          FuncExpr@4521..4594
            Function@4521..4529 "function"
            FuncArgs@4529..4551
              LParen@4529..4530 "("
              Ident@4530..4534 "arg1"
              Comma@4534..4535 ","
              Ident@4535..4538 "gen"
              Comma@4538..4539 ","
              Ident@4539..4544 "param"
              Comma@4544..4545 ","
              Ident@4545..4550 "state"
              RParen@4550..4551 ")"
            StmtList@4551..4591
              ReturnStmt@4551..4591
                Return@4551..4557 "return"
                FuncCall@4557..4591
                  Ident@4557..4560
                    Ident@4557..4560 "fun"
                  FuncArgs@4560..4591
                    LParen@4560..4561 "("
                    Ident@4561..4565
                      Ident@4561..4565 "arg1"
                    Comma@4565..4566 ","
                    FuncCall@4566..4590
                      Ident@4566..4573
                        Ident@4566..4573 "rawiter"
                      FuncArgs@4573..4590
                        LParen@4573..4574 "("
                        Ident@4574..4577
                          Ident@4574..4577 "gen"
                        Comma@4577..4578 ","
                        Ident@4578..4583
                          Ident@4578..4583 "param"
                        Comma@4583..4584 ","
                        Ident@4584..4589
                          Ident@4584..4589 "state"
                        RParen@4589..4590 ")"
                    RParen@4590..4591 ")"
            End@4591..4594 "end"
      End@4594..4597 "end"
  DeclStmt@4597..4715
    Local@4597..4602 "local"
    DeclTarget@4602..4609
      Ident@4602..4609 "export2"
    Assign@4609..4610 "="
    FuncExpr@4610..4715
      Function@4610..4618 "function"
      FuncArgs@4618..4623
        LParen@4618..4619 "("
        Ident@4619..4622 "fun"
        RParen@4622..4623 ")"
      StmtList@4623..4712
        ReturnStmt@4623..4712
          Return@4623..4629 "return"
          FuncExpr@4629..4712
            Function@4629..4637 "function"
            FuncArgs@4637..4664
              LParen@4637..4638 "("
              Ident@4638..4642 "arg1"
              Comma@4642..4643 ","
              Ident@4643..4647 "arg2"
              Comma@4647..4648 ","
              Ident@4648..4651 "gen"
              Comma@4651..4652 ","
              Ident@4652..4657 "param"
              Comma@4657..4658 ","
              Ident@4658..4663 "state"
              RParen@4663..4664 ")"
            StmtList@4664..4709
              ReturnStmt@4664..4709
                Return@4664..4670 "return"
                FuncCall@4670..4709
                  Ident@4670..4673
                    Ident@4670..4673 "fun"
                  FuncArgs@4673..4709
                    LParen@4673..4674 "("
                    Ident@4674..4678
                      Ident@4674..4678 "arg1"
                    Comma@4678..4679 ","
                    Ident@4679..4683
                      Ident@4679..4683 "arg2"
                    Comma@4683..4684 ","
                    FuncCall@4684..4708
                      Ident@4684..4691
                        Ident@4684..4691 "rawiter"
                      FuncArgs@4691..4708
                        LParen@4691..4692 "("
                        Ident@4692..4695
                          Ident@4692..4695 "gen"
                        Comma@4695..4696 ","
                        Ident@4696..4701
                          Ident@4696..4701 "param"
                        Comma@4701..4702 ","
                        Ident@4702..4707
                          Ident@4702..4707 "state"
                        RParen@4707..4708 ")"
                    RParen@4708..4709 ")"
            End@4709..4712 "end"
      End@4712..4715 "end"
  DeclStmt@4715..4823
    Local@4715..4720 "local"
    DeclTarget@4720..4724
      Ident@4720..4724 "each"
    Assign@4724..4725 "="
    FuncExpr@4725..4823
      Function@4725..4733 "function"
      FuncArgs@4733..4754
        LParen@4733..4734 "("
        Ident@4734..4737 "fun"
        Comma@4737..4738 ","
        Ident@4738..4741 "gen"
        Comma@4741..4742 ","
        Ident@4742..4747 "param"
        Comma@4747..4748 ","
        Ident@4748..4753 "state"
        RParen@4753..4754 ")"
      StmtList@4754..4820
        RepeatStmt@4754..4820
          Repeat@4754..4760 "repeat"
          StmtList@4760..4805
            AssignStmt@4760..4805
              Ident@4760..4765
                Ident@4760..4765 "state"
              Assign@4765..4766 "="
              FuncCall@4766..4805
                Ident@4766..4783
                  Ident@4766..4783 "call_if_not_empty"
                FuncArgs@4783..4805
                  LParen@4783..4784 "("
                  Ident@4784..4787
                    Ident@4784..4787 "fun"
                  Comma@4787..4788 ","
                  FuncCall@4788..4804
                    Ident@4788..4791
                      Ident@4788..4791 "gen"
                    FuncArgs@4791..4804
                      LParen@4791..4792 "("
                      Ident@4792..4797
                        Ident@4792..4797 "param"
                      Comma@4797..4798 ","
                      Ident@4798..4803
                        Ident@4798..4803 "state"
                      RParen@4803..4804 ")"
                  RParen@4804..4805 ")"
          Until@4805..4810 "until"
          BinOp@4810..4820
            Ident@4810..4815
              Ident@4810..4815 "state"
            Eq@4815..4817 "=="
            LiteralExpr@4817..4820
              Nil@4817..4820 "nil"
      End@4820..4823 "end"
  AssignStmt@4823..4849
    BinOp@4823..4835
      Ident@4823..4830
        Ident@4823..4830 "methods"
      Dot@4830..4831 "."
      Ident@4831..4835
        Ident@4831..4835 "each"
    Assign@4835..4836 "="
    FuncCall@4836..4849
      Ident@4836..4843
        Ident@4836..4843 "method1"
      FuncArgs@4843..4849
        LParen@4843..4844 "("
        Ident@4844..4848
          Ident@4844..4848 "each"
        RParen@4848..4849 ")"
  AssignStmt@4849..4875
    BinOp@4849..4861
      Ident@4849..4856
        Ident@4849..4856 "exports"
      Dot@4856..4857 "."
      Ident@4857..4861
        Ident@4857..4861 "each"
    Assign@4861..4862 "="
    FuncCall@4862..4875
      Ident@4862..4869
        Ident@4862..4869 "export1"
      FuncArgs@4869..4875
        LParen@4869..4870 "("
        Ident@4870..4874
          Ident@4870..4874 "each"
        RParen@4874..4875 ")"
  AssignStmt@4875..4904
    BinOp@4875..4891
      Ident@4875..4882
        Ident@4875..4882 "methods"
      Dot@4882..4883 "."
      Ident@4883..4891
        Ident@4883..4891 "for_each"
    Assign@4891..4892 "="
    BinOp@4892..4904
      Ident@4892..4899
        Ident@4892..4899 "methods"
      Dot@4899..4900 "."
      Ident@4900..4904
        Ident@4900..4904 "each"
  AssignStmt@4904..4933
    BinOp@4904..4920
      Ident@4904..4911
        Ident@4904..4911 "exports"
      Dot@4911..4912 "."
      Ident@4912..4920
        Ident@4912..4920 "for_each"
    Assign@4920..4921 "="
    BinOp@4921..4933
      Ident@4921..4928
        Ident@4921..4928 "exports"
      Dot@4928..4929 "."
      Ident@4929..4933
        Ident@4929..4933 "each"
  AssignStmt@4933..4961
    BinOp@4933..4948
      Ident@4933..4940
        Ident@4933..4940 "methods"
      Dot@4940..4941 "."
      Ident@4941..4948
        Ident@4941..4948 "foreach"
    Assign@4948..4949 "="
    BinOp@4949..4961
      Ident@4949..4956
        Ident@4949..4956 "methods"
      Dot@4956..4957 "."
      Ident@4957..4961
        Ident@4957..4961 "each"
  AssignStmt@4961..4989
    BinOp@4961..4976
      Ident@4961..4968
        Ident@4961..4968 "exports"
      Dot@4968..4969 "."
      Ident@4969..4976
        Ident@4969..4976 "foreach"
    Assign@4976..4977 "="
    BinOp@4977..4989
      Ident@4977..4984
        Ident@4977..4984 "exports"
      Dot@4984..4985 "."
      Ident@4985..4989
        Ident@4985..4989 "each"
  DeclStmt@4989..5126
    Local@4989..4994 "local"
    DeclTarget@4994..5003
      Ident@4994..5003 "range_gen"
    Assign@5003..5004 "="
    FuncExpr@5004..5126
      Function@5004..5012 "function"
      FuncArgs@5012..5025
        LParen@5012..5013 "("
        Ident@5013..5018 "param"
        Comma@5018..5019 ","
        Ident@5019..5024 "state"
        RParen@5024..5025 ")"
      StmtList@5025..5123
        DeclStmt@5025..5057
          Local@5025..5030 "local"
          DeclTarget@5030..5034
            Ident@5030..5034 "stop"
          Comma@5034..5035 ","
          DeclTarget@5035..5039
            Ident@5035..5039 "step"
          Assign@5039..5040 "="
          ExprList@5040..5057
            Index@5040..5048
              Ident@5040..5045
                Ident@5040..5045 "param"
              LBracket@5045..5046 "["
              LiteralExpr@5046..5047
                Int@5046..5047 "1"
              RBracket@5047..5048 "]"
            Comma@5048..5049 ","
            Index@5049..5057
              Ident@5049..5054
                Ident@5049..5054 "param"
              LBracket@5054..5055 "["
              LiteralExpr@5055..5056
                Int@5055..5056 "2"
              RBracket@5056..5057 "]"
        DeclStmt@5057..5078
          Local@5057..5062 "local"
          DeclTarget@5062..5067
            Ident@5062..5067 "state"
          Assign@5067..5068 "="
          BinOp@5068..5078
            Ident@5068..5073
              Ident@5068..5073 "state"
            Plus@5073..5074 "+"
            Ident@5074..5078
              Ident@5074..5078 "step"
        IfStmt@5078..5106
          If@5078..5080 "if"
          BinOp@5080..5090
            Ident@5080..5085
              Ident@5080..5085 "state"
            RAngle@5085..5086 ">"
            Ident@5086..5090
              Ident@5086..5090 "stop"
          Then@5090..5094 "then"
          StmtList@5094..5103
            ReturnStmt@5094..5103
              Return@5094..5100 "return"
              LiteralExpr@5100..5103
                Nil@5100..5103 "nil"
          End@5103..5106 "end"
        ReturnStmt@5106..5123
          Return@5106..5112 "return"
          ExprList@5112..5123
            Ident@5112..5117
              Ident@5112..5117 "state"
            Comma@5117..5118 ","
            Ident@5118..5123
              Ident@5118..5123 "state"
      End@5123..5126 "end"
  DeclStmt@5126..5267
    Local@5126..5131 "local"
    DeclTarget@5131..5144
      Ident@5131..5144 "range_rev_gen"
    Assign@5144..5145 "="
    FuncExpr@5145..5267
      Function@5145..5153 "function"
      FuncArgs@5153..5166
        LParen@5153..5154 "("
        Ident@5154..5159 "param"
        Comma@5159..5160 ","
        Ident@5160..5165 "state"
        RParen@5165..5166 ")"
      StmtList@5166..5264
        DeclStmt@5166..5198
          Local@5166..5171 "local"
          DeclTarget@5171..5175
            Ident@5171..5175 "stop"
          Comma@5175..5176 ","
          DeclTarget@5176..5180
            Ident@5176..5180 "step"
          Assign@5180..5181 "="
          ExprList@5181..5198
            Index@5181..5189
              Ident@5181..5186
                Ident@5181..5186 "param"
              LBracket@5186..5187 "["
              LiteralExpr@5187..5188
                Int@5187..5188 "1"
              RBracket@5188..5189 "]"
            Comma@5189..5190 ","
            Index@5190..5198
              Ident@5190..5195
                Ident@5190..5195 "param"
              LBracket@5195..5196 "["
              LiteralExpr@5196..5197
                Int@5196..5197 "2"
              RBracket@5197..5198 "]"
        DeclStmt@5198..5219
          Local@5198..5203 "local"
          DeclTarget@5203..5208
            Ident@5203..5208 "state"
          Assign@5208..5209 "="
          BinOp@5209..5219
            Ident@5209..5214
              Ident@5209..5214 "state"
            Plus@5214..5215 "+"
            Ident@5215..5219
              Ident@5215..5219 "step"
        IfStmt@5219..5247
          If@5219..5221 "if"
          BinOp@5221..5231
            Ident@5221..5226
              Ident@5221..5226 "state"
            LAngle@5226..5227 "<"
            Ident@5227..5231
              Ident@5227..5231 "stop"
          Then@5231..5235 "then"
          StmtList@5235..5244
            ReturnStmt@5235..5244
              Return@5235..5241 "return"
              LiteralExpr@5241..5244
                Nil@5241..5244 "nil"
          End@5244..5247 "end"
        ReturnStmt@5247..5264
          Return@5247..5253 "return"
          ExprList@5253..5264
            Ident@5253..5258
              Ident@5253..5258 "state"
            Comma@5258..5259 ","
            Ident@5259..5264
              Ident@5259..5264 "state"
      End@5264..5267 "end"
  DeclStmt@5267..5758
    Local@5267..5272 "local"
    DeclTarget@5272..5277
      Ident@5272..5277 "range"
    Assign@5277..5278 "="
    FuncExpr@5278..5758
      Function@5278..5286 "function"
      FuncArgs@5286..5303
        LParen@5286..5287 "("
        Ident@5287..5292 "start"
        Comma@5292..5293 ","
        Ident@5293..5297 "stop"
        Comma@5297..5298 ","
        Ident@5298..5302 "step"
        RParen@5302..5303 ")"
      StmtList@5303..5755
        IfStmt@5303..5431
          If@5303..5305 "if"
          BinOp@5305..5314
            Ident@5305..5309
              Ident@5305..5309 "step"
            Eq@5309..5311 "=="
            LiteralExpr@5311..5314
              Nil@5311..5314 "nil"
          Then@5314..5318 "then"
          StmtList@5318..5428
            IfStmt@5318..5404
              If@5318..5320 "if"
              BinOp@5320..5329
                Ident@5320..5324
                  Ident@5320..5324 "stop"
                Eq@5324..5326 "=="
                LiteralExpr@5326..5329
                  Nil@5326..5329 "nil"
              Then@5329..5333 "then"
              StmtList@5333..5401
                IfStmt@5333..5371
                  If@5333..5335 "if"
                  BinOp@5335..5343
                    Ident@5335..5340
                      Ident@5335..5340 "start"
                    Eq@5340..5342 "=="
                    LiteralExpr@5342..5343
                      Int@5342..5343 "0"
                  Then@5343..5347 "then"
                  StmtList@5347..5368
                    ReturnStmt@5347..5368
                      Return@5347..5353 "return"
                      ExprList@5353..5368
                        Ident@5353..5360
                          Ident@5353..5360 "nil_gen"
                        Comma@5360..5361 ","
                        LiteralExpr@5361..5364
                          Nil@5361..5364 "nil"
                        Comma@5364..5365 ","
                        LiteralExpr@5365..5368
                          Nil@5365..5368 "nil"
                  End@5368..5371 "end"
                AssignStmt@5371..5381
                  Ident@5371..5375
                    Ident@5371..5375 "stop"
                  Assign@5375..5376 "="
                  Ident@5376..5381
                    Ident@5376..5381 "start"
                AssignStmt@5381..5401
                  Ident@5381..5386
                    Ident@5381..5386 "start"
                  Assign@5386..5387 "="
                  BinOp@5387..5401
                    BinOp@5387..5397
                      BinOp@5387..5393
                        Ident@5387..5391
                          Ident@5387..5391 "stop"
                        RAngle@5391..5392 ">"
                        LiteralExpr@5392..5393
                          Int@5392..5393 "0"
                      And@5393..5396 "and"
                      LiteralExpr@5396..5397
                        Int@5396..5397 "1"
                    Or@5397..5399 "or"
                    PrefixOp@5399..5401
                      Minus@5399..5400 "-"
                      LiteralExpr@5400..5401
                        Int@5400..5401 "1"
              End@5401..5404 "end"
            AssignStmt@5404..5428
              Ident@5404..5408
                Ident@5404..5408 "step"
              Assign@5408..5409 "="
              BinOp@5409..5428
                BinOp@5409..5424
                  BinOp@5409..5420
                    Ident@5409..5414
                      Ident@5409..5414 "start"
                    LEq@5414..5416 "<="
                    Ident@5416..5420
                      Ident@5416..5420 "stop"
                  And@5420..5423 "and"
                  LiteralExpr@5423..5424
                    Int@5423..5424 "1"
                Or@5424..5426 "or"
                PrefixOp@5426..5428
                  Minus@5426..5427 "-"
                  LiteralExpr@5427..5428
                    Int@5427..5428 "1"
          End@5428..5431 "end"
        FuncCall@5431..5485
          Ident@5431..5437
            Ident@5431..5437 "assert"
          FuncArgs@5437..5485
            LParen@5437..5438 "("
            BinOp@5438..5459
              FuncCall@5438..5449
                Ident@5438..5442
                  Ident@5438..5442 "type"
                FuncArgs@5442..5449
                  LParen@5442..5443 "("
                  Ident@5443..5448
                    Ident@5443..5448 "start"
                  RParen@5448..5449 ")"
              Eq@5449..5451 "=="
              LiteralExpr@5451..5459
                String@5451..5459 "\"number\""
            Comma@5459..5460 ","
            LiteralExpr@5460..5484
              String@5460..5484 "\"start must be a number\""
            RParen@5484..5485 ")"
        FuncCall@5485..5537
          Ident@5485..5491
            Ident@5485..5491 "assert"
          FuncArgs@5491..5537
            LParen@5491..5492 "("
            BinOp@5492..5512
              FuncCall@5492..5502
                Ident@5492..5496
                  Ident@5492..5496 "type"
                FuncArgs@5496..5502
                  LParen@5496..5497 "("
                  Ident@5497..5501
                    Ident@5497..5501 "stop"
                  RParen@5501..5502 ")"
              Eq@5502..5504 "=="
              LiteralExpr@5504..5512
                String@5504..5512 "\"number\""
            Comma@5512..5513 ","
            LiteralExpr@5513..5536
              String@5513..5536 "\"stop must be a number\""
            RParen@5536..5537 ")"
        FuncCall@5537..5589
          Ident@5537..5543
            Ident@5537..5543 "assert"
          FuncArgs@5543..5589
            LParen@5543..5544 "("
            BinOp@5544..5564
              FuncCall@5544..5554
                Ident@5544..5548
                  Ident@5544..5548 "type"
                FuncArgs@5548..5554
                  LParen@5548..5549 "("
                  Ident@5549..5553
                    Ident@5549..5553 "step"
                  RParen@5553..5554 ")"
              Eq@5554..5556 "=="
              LiteralExpr@5556..5564
                String@5556..5564 "\"number\""
            Comma@5564..5565 ","
            LiteralExpr@5565..5588
              String@5565..5588 "\"step must be a number\""
            RParen@5588..5589 ")"
        FuncCall@5589..5628
          Ident@5589..5595
            Ident@5589..5595 "assert"
          FuncArgs@5595..5628
            LParen@5595..5596 "("
            BinOp@5596..5603
              Ident@5596..5600
                Ident@5596..5600 "step"
              NotEq@5600..5602 "~="
              LiteralExpr@5602..5603
                Int@5602..5603 "0"
            Comma@5603..5604 ","
            LiteralExpr@5604..5627
              String@5604..5627 "\"step must not be zero\""
            RParen@5627..5628 ")"
        IfStmt@5628..5755
          If@5628..5630 "if"
          Expr@5630..5638
            LParen@5630..5631 "("
            BinOp@5631..5637
              Ident@5631..5635
                Ident@5631..5635 "step"
              RAngle@5635..5636 ">"
              LiteralExpr@5636..5637
                Int@5636..5637 "0"
            RParen@5637..5638 ")"
          Then@5638..5642 "then"
          StmtList@5642..5686
            ReturnStmt@5642..5686
              Return@5642..5648 "return"
              FuncCall@5648..5686
                Ident@5648..5652
                  Ident@5648..5652 "wrap"
                FuncArgs@5652..5686
                  LParen@5652..5653 "("
                  Ident@5653..5662
                    Ident@5653..5662 "range_gen"
                  Comma@5662..5663 ","
                  TableExpr@5663..5674
                    LCurly@5663..5664 "{"
                    TableArrayElem@5664..5668
                      Ident@5664..5668
                        Ident@5664..5668 "stop"
                    Comma@5668..5669 ","
                    TableArrayElem@5669..5673
                      Ident@5669..5673
                        Ident@5669..5673 "step"
                    RCurly@5673..5674 "}"
                  Comma@5674..5675 ","
                  BinOp@5675..5685
                    Ident@5675..5680
                      Ident@5675..5680 "start"
                    Minus@5680..5681 "-"
                    Ident@5681..5685
                      Ident@5681..5685 "step"
                  RParen@5685..5686 ")"
          ElseChain@5686..5755
            IfStmt@5686..5755
              ElseIf@5686..5692 "elseif"
              Expr@5692..5700
                LParen@5692..5693 "("
                BinOp@5693..5699
                  Ident@5693..5697
                    Ident@5693..5697 "step"
                  LAngle@5697..5698 "<"
                  LiteralExpr@5698..5699
                    Int@5698..5699 "0"
                RParen@5699..5700 ")"
              Then@5700..5704 "then"
              StmtList@5704..5752
                ReturnStmt@5704..5752
                  Return@5704..5710 "return"
                  FuncCall@5710..5752
                    Ident@5710..5714
                      Ident@5710..5714 "wrap"
                    FuncArgs@5714..5752
                      LParen@5714..5715 "("
                      Ident@5715..5728
                        Ident@5715..5728 "range_rev_gen"
                      Comma@5728..5729 ","
                      TableExpr@5729..5740
                        LCurly@5729..5730 "{"
                        TableArrayElem@5730..5734
                          Ident@5730..5734
                            Ident@5730..5734 "stop"
                        Comma@5734..5735 ","
                        TableArrayElem@5735..5739
                          Ident@5735..5739
                            Ident@5735..5739 "step"
                        RCurly@5739..5740 "}"
                      Comma@5740..5741 ","
                      BinOp@5741..5751
                        Ident@5741..5746
                          Ident@5741..5746 "start"
                        Minus@5746..5747 "-"
                        Ident@5747..5751
                          Ident@5747..5751 "step"
                      RParen@5751..5752 ")"
              End@5752..5755 "end"
      End@5755..5758 "end"
  AssignStmt@5758..5777
    BinOp@5758..5771
      Ident@5758..5765
        Ident@5758..5765 "exports"
      Dot@5765..5766 "."
      Ident@5766..5771
        Ident@5766..5771 "range"
    Assign@5771..5772 "="
    Ident@5772..5777
      Ident@5772..5777 "range"
  DeclStmt@5777..5861
    Local@5777..5782 "local"
    DeclTarget@5782..5801
      Ident@5782..5801 "duplicate_table_gen"
    Assign@5801..5802 "="
    FuncExpr@5802..5861
      Function@5802..5810 "function"
      FuncArgs@5810..5827
        LParen@5810..5811 "("
        Ident@5811..5818 "param_x"
        Comma@5818..5819 ","
        Ident@5819..5826 "state_x"
        RParen@5826..5827 ")"
      StmtList@5827..5858
        ReturnStmt@5827..5858
          Return@5827..5833 "return"
          ExprList@5833..5858
            BinOp@5833..5842
              Ident@5833..5840
                Ident@5833..5840 "state_x"
              Plus@5840..5841 "+"
              LiteralExpr@5841..5842
                Int@5841..5842 "1"
            Comma@5842..5843 ","
            FuncCall@5843..5858
              Ident@5843..5849
                Ident@5843..5849 "unpack"
              FuncArgs@5849..5858
                LParen@5849..5850 "("
                Ident@5850..5857
                  Ident@5850..5857 "param_x"
                RParen@5857..5858 ")"
      End@5858..5861 "end"
  DeclStmt@5861..5944
    Local@5861..5866 "local"
    DeclTarget@5866..5883
      Ident@5866..5883 "duplicate_fun_gen"
    Assign@5883..5884 "="
    FuncExpr@5884..5944
      Function@5884..5892 "function"
      FuncArgs@5892..5909
        LParen@5892..5893 "("
        Ident@5893..5900 "param_x"
        Comma@5900..5901 ","
        Ident@5901..5908 "state_x"
        RParen@5908..5909 ")"
      StmtList@5909..5941
        ReturnStmt@5909..5941
          Return@5909..5915 "return"
          ExprList@5915..5941
            BinOp@5915..5924
              Ident@5915..5922
                Ident@5915..5922 "state_x"
              Plus@5922..5923 "+"
              LiteralExpr@5923..5924
                Int@5923..5924 "1"
            Comma@5924..5925 ","
            FuncCall@5925..5941
              Ident@5925..5932
                Ident@5925..5932 "param_x"
              FuncArgs@5932..5941
                LParen@5932..5933 "("
                Ident@5933..5940
                  Ident@5933..5940 "state_x"
                RParen@5940..5941 ")"
      End@5941..5944 "end"
  DeclStmt@5944..6014
    Local@5944..5949 "local"
    DeclTarget@5949..5962
      Ident@5949..5962 "duplicate_gen"
    Assign@5962..5963 "="
    FuncExpr@5963..6014
      Function@5963..5971 "function"
      FuncArgs@5971..5988
        LParen@5971..5972 "("
        Ident@5972..5979 "param_x"
        Comma@5979..5980 ","
        Ident@5980..5987 "state_x"
        RParen@5987..5988 ")"
      StmtList@5988..6011
        ReturnStmt@5988..6011
          Return@5988..5994 "return"
          ExprList@5994..6011
            BinOp@5994..6003
              Ident@5994..6001
                Ident@5994..6001 "state_x"
              Plus@6001..6002 "+"
              LiteralExpr@6002..6003
                Int@6002..6003 "1"
            Comma@6003..6004 ","
            Ident@6004..6011
              Ident@6004..6011 "param_x"
      End@6011..6014 "end"
  DeclStmt@6014..6156
    Local@6014..6019 "local"
    DeclTarget@6019..6028
      Ident@6019..6028 "duplicate"
    Assign@6028..6029 "="
    FuncExpr@6029..6156
      Function@6029..6037 "function"
      FuncArgs@6037..6042
        LParen@6037..6038 "("
        TDot@6038..6041 "..."
        RParen@6041..6042 ")"
      StmtList@6042..6153
        IfStmt@6042..6153
          If@6042..6044 "if"
          BinOp@6044..6062
            FuncCall@6044..6059
              Ident@6044..6050
                Ident@6044..6050 "select"
              FuncArgs@6050..6059
                LParen@6050..6051 "("
                LiteralExpr@6051..6054
                  String@6051..6054 "'#'"
                Comma@6054..6055 ","
                VarArgExpr@6055..6058
                  TDot@6055..6058 "..."
                RParen@6058..6059 ")"
            LEq@6059..6061 "<="
            LiteralExpr@6061..6062
              Int@6061..6062 "1"
          Then@6062..6066 "then"
          StmtList@6066..6107
            ReturnStmt@6066..6107
              Return@6066..6072 "return"
              FuncCall@6072..6107
                Ident@6072..6076
                  Ident@6072..6076 "wrap"
                FuncArgs@6076..6107
                  LParen@6076..6077 "("
                  Ident@6077..6090
                    Ident@6077..6090 "duplicate_gen"
                  Comma@6090..6091 ","
                  FuncCall@6091..6104
                    Ident@6091..6097
                      Ident@6091..6097 "select"
                    FuncArgs@6097..6104
                      LParen@6097..6098 "("
                      LiteralExpr@6098..6099
                        Int@6098..6099 "1"
                      Comma@6099..6100 ","
                      VarArgExpr@6100..6103
                        TDot@6100..6103 "..."
                      RParen@6103..6104 ")"
                  Comma@6104..6105 ","
                  LiteralExpr@6105..6106
                    Int@6105..6106 "0"
                  RParen@6106..6107 ")"
          ElseChain@6107..6153
            Else@6107..6111 "else"
            StmtList@6111..6150
              ReturnStmt@6111..6150
                Return@6111..6117 "return"
                FuncCall@6117..6150
                  Ident@6117..6121
                    Ident@6117..6121 "wrap"
                  FuncArgs@6121..6150
                    LParen@6121..6122 "("
                    Ident@6122..6141
                      Ident@6122..6141 "duplicate_table_gen"
                    Comma@6141..6142 ","
                    TableExpr@6142..6147
                      LCurly@6142..6143 "{"
                      TableArrayElem@6143..6146
                        VarArgExpr@6143..6146
                          TDot@6143..6146 "..."
                      RCurly@6146..6147 "}"
                    Comma@6147..6148 ","
                    LiteralExpr@6148..6149
                      Int@6148..6149 "0"
                    RParen@6149..6150 ")"
            End@6150..6153 "end"
      End@6153..6156 "end"
  AssignStmt@6156..6183
    BinOp@6156..6173
      Ident@6156..6163
        Ident@6156..6163 "exports"
      Dot@6163..6164 "."
      Ident@6164..6173
        Ident@6164..6173 "duplicate"
    Assign@6173..6174 "="
    Ident@6174..6183
      Ident@6174..6183 "duplicate"
  AssignStmt@6183..6210
    BinOp@6183..6200
      Ident@6183..6190
        Ident@6183..6190 "exports"
      Dot@6190..6191 "."
      Ident@6191..6200
        Ident@6191..6200 "replicate"
    Assign@6200..6201 "="
    Ident@6201..6210
      Ident@6201..6210 "duplicate"
  AssignStmt@6210..6235
    BinOp@6210..6225
      Ident@6210..6217
        Ident@6210..6217 "exports"
      Dot@6217..6218 "."
      Ident@6218..6225
        Ident@6218..6225 "xrepeat"
    Assign@6225..6226 "="
    Ident@6226..6235
      Ident@6226..6235 "duplicate"
  DeclStmt@6235..6329
    Local@6235..6240 "local"
    DeclTarget@6240..6248
      Ident@6240..6248 "tabulate"
    Assign@6248..6249 "="
    FuncExpr@6249..6329
      Function@6249..6257 "function"
      FuncArgs@6257..6262
        LParen@6257..6258 "("
        Ident@6258..6261 "fun"
        RParen@6261..6262 ")"
      StmtList@6262..6326
        FuncCall@6262..6291
          Ident@6262..6268
            Ident@6262..6268 "assert"
          FuncArgs@6268..6291
            LParen@6268..6269 "("
            BinOp@6269..6290
              FuncCall@6269..6278
                Ident@6269..6273
                  Ident@6269..6273 "type"
                FuncArgs@6273..6278
                  LParen@6273..6274 "("
                  Ident@6274..6277
                    Ident@6274..6277 "fun"
                  RParen@6277..6278 ")"
              Eq@6278..6280 "=="
              LiteralExpr@6280..6290
                String@6280..6290 "\"function\""
            RParen@6290..6291 ")"
        ReturnStmt@6291..6326
          Return@6291..6297 "return"
          FuncCall@6297..6326
            Ident@6297..6301
              Ident@6297..6301 "wrap"
            FuncArgs@6301..6326
              LParen@6301..6302 "("
              Ident@6302..6319
                Ident@6302..6319 "duplicate_fun_gen"
              Comma@6319..6320 ","
              Ident@6320..6323
                Ident@6320..6323 "fun"
              Comma@6323..6324 ","
              LiteralExpr@6324..6325
                Int@6324..6325 "0"
              RParen@6325..6326 ")"
      End@6326..6329 "end"
  AssignStmt@6329..6354
    BinOp@6329..6345
      Ident@6329..6336
        Ident@6329..6336 "exports"
      Dot@6336..6337 "."
      Ident@6337..6345
        Ident@6337..6345 "tabulate"
    Assign@6345..6346 "="
    Ident@6346..6354
      Ident@6346..6354 "tabulate"
  DeclStmt@6354..6407
    Local@6354..6359 "local"
    DeclTarget@6359..6364
      Ident@6359..6364 "zeros"
    Assign@6364..6365 "="
    FuncExpr@6365..6407
      Function@6365..6373 "function"
      FuncArgs@6373..6375
        LParen@6373..6374 "("
        RParen@6374..6375 ")"
      StmtList@6375..6404
        ReturnStmt@6375..6404
          Return@6375..6381 "return"
          FuncCall@6381..6404
            Ident@6381..6385
              Ident@6381..6385 "wrap"
            FuncArgs@6385..6404
              LParen@6385..6386 "("
              Ident@6386..6399
                Ident@6386..6399 "duplicate_gen"
              Comma@6399..6400 ","
              LiteralExpr@6400..6401
                Int@6400..6401 "0"
              Comma@6401..6402 ","
              LiteralExpr@6402..6403
                Int@6402..6403 "0"
              RParen@6403..6404 ")"
      End@6404..6407 "end"
  AssignStmt@6407..6426
    BinOp@6407..6420
      Ident@6407..6414
        Ident@6407..6414 "exports"
      Dot@6414..6415 "."
      Ident@6415..6420
        Ident@6415..6420 "zeros"
    Assign@6420..6421 "="
    Ident@6421..6426
      Ident@6421..6426 "zeros"
  DeclStmt@6426..6478
    Local@6426..6431 "local"
    DeclTarget@6431..6435
      Ident@6431..6435 "ones"
    Assign@6435..6436 "="
    FuncExpr@6436..6478
      Function@6436..6444 "function"
      FuncArgs@6444..6446
        LParen@6444..6445 "("
        RParen@6445..6446 ")"
      StmtList@6446..6475
        ReturnStmt@6446..6475
          Return@6446..6452 "return"
          FuncCall@6452..6475
            Ident@6452..6456
              Ident@6452..6456 "wrap"
            FuncArgs@6456..6475
              LParen@6456..6457 "("
              Ident@6457..6470
                Ident@6457..6470 "duplicate_gen"
              Comma@6470..6471 ","
              LiteralExpr@6471..6472
                Int@6471..6472 "1"
              Comma@6472..6473 ","
              LiteralExpr@6473..6474
                Int@6473..6474 "0"
              RParen@6474..6475 ")"
      End@6475..6478 "end"
  AssignStmt@6478..6495
    BinOp@6478..6490
      Ident@6478..6485
        Ident@6478..6485 "exports"
      Dot@6485..6486 "."
      Ident@6486..6490
        Ident@6486..6490 "ones"
    Assign@6490..6491 "="
    Ident@6491..6495
      Ident@6491..6495 "ones"
  DeclStmt@6495..6581
    Local@6495..6500 "local"
    DeclTarget@6500..6509
      Ident@6500..6509 "rands_gen"
    Assign@6509..6510 "="
    FuncExpr@6510..6581
      Function@6510..6518 "function"
      FuncArgs@6518..6536
        LParen@6518..6519 "("
        Ident@6519..6526 "param_x"
        Comma@6526..6527 ","
        Ident@6527..6535 "_state_x"
        RParen@6535..6536 ")"
      StmtList@6536..6578
        ReturnStmt@6536..6578
          Return@6536..6542 "return"
          ExprList@6542..6578
            LiteralExpr@6542..6543
              Int@6542..6543 "0"
            Comma@6543..6544 ","
            FuncCall@6544..6578
              BinOp@6544..6555
                Ident@6544..6548
                  Ident@6544..6548 "math"
                Dot@6548..6549 "."
                Ident@6549..6555
                  Ident@6549..6555 "random"
              FuncArgs@6555..6578
                LParen@6555..6556 "("
                Index@6556..6566
                  Ident@6556..6563
                    Ident@6556..6563 "param_x"
                  LBracket@6563..6564 "["
                  LiteralExpr@6564..6565
                    Int@6564..6565 "1"
                  RBracket@6565..6566 "]"
                Comma@6566..6567 ","
                Index@6567..6577
                  Ident@6567..6574
                    Ident@6567..6574 "param_x"
                  LBracket@6574..6575 "["
                  LiteralExpr@6575..6576
                    Int@6575..6576 "2"
                  RBracket@6576..6577 "]"
                RParen@6577..6578 ")"
      End@6578..6581 "end"
  DeclStmt@6581..6651
    Local@6581..6586 "local"
    DeclTarget@6586..6599
      Ident@6586..6599 "rands_nil_gen"
    Assign@6599..6600 "="
    FuncExpr@6600..6651
      Function@6600..6608 "function"
      FuncArgs@6608..6627
        LParen@6608..6609 "("
        Ident@6609..6617 "_param_x"
        Comma@6617..6618 ","
        Ident@6618..6626 "_state_x"
        RParen@6626..6627 ")"
      StmtList@6627..6648
        ReturnStmt@6627..6648
          Return@6627..6633 "return"
          ExprList@6633..6648
            LiteralExpr@6633..6634
              Int@6633..6634 "0"
            Comma@6634..6635 ","
            FuncCall@6635..6648
              BinOp@6635..6646
                Ident@6635..6639
                  Ident@6635..6639 "math"
                Dot@6639..6640 "."
                Ident@6640..6646
                  Ident@6640..6646 "random"
              FuncArgs@6646..6648
                LParen@6646..6647 "("
                RParen@6647..6648 ")"
      End@6648..6651 "end"
  DeclStmt@6651..6924
    Local@6651..6656 "local"
    DeclTarget@6656..6661
      Ident@6656..6661 "rands"
    Assign@6661..6662 "="
    FuncExpr@6662..6924
      Function@6662..6670 "function"
      FuncArgs@6670..6675
        LParen@6670..6671 "("
        Ident@6671..6672 "n"
        Comma@6672..6673 ","
        Ident@6673..6674 "m"
        RParen@6674..6675 ")"
      StmtList@6675..6921
        IfStmt@6675..6728
          If@6675..6677 "if"
          BinOp@6677..6692
            BinOp@6677..6683
              Ident@6677..6678
                Ident@6677..6678 "n"
              Eq@6678..6680 "=="
              LiteralExpr@6680..6683
                Nil@6680..6683 "nil"
            And@6683..6686 "and"
            BinOp@6686..6692
              Ident@6686..6687
                Ident@6686..6687 "m"
              Eq@6687..6689 "=="
              LiteralExpr@6689..6692
                Nil@6689..6692 "nil"
          Then@6692..6696 "then"
          StmtList@6696..6725
            ReturnStmt@6696..6725
              Return@6696..6702 "return"
              FuncCall@6702..6725
                Ident@6702..6706
                  Ident@6702..6706 "wrap"
                FuncArgs@6706..6725
                  LParen@6706..6707 "("
                  Ident@6707..6720
                    Ident@6707..6720 "rands_nil_gen"
                  Comma@6720..6721 ","
                  LiteralExpr@6721..6722
                    Int@6721..6722 "0"
                  Comma@6722..6723 ","
                  LiteralExpr@6723..6724
                    Int@6723..6724 "0"
                  RParen@6724..6725 ")"
          End@6725..6728 "end"
        FuncCall@6728..6782
          Ident@6728..6734
            Ident@6728..6734 "assert"
          FuncArgs@6734..6782
            LParen@6734..6735 "("
            BinOp@6735..6752
              FuncCall@6735..6742
                Ident@6735..6739
                  Ident@6735..6739 "type"
                FuncArgs@6739..6742
                  LParen@6739..6740 "("
                  Ident@6740..6741
                    Ident@6740..6741 "n"
                  RParen@6741..6742 ")"
              Eq@6742..6744 "=="
              LiteralExpr@6744..6752
                String@6744..6752 "\"number\""
            Comma@6752..6753 ","
            LiteralExpr@6753..6781
              String@6753..6781 "\"invalid first arg to ..."
            RParen@6781..6782 ")"
        IfStmt@6782..6862
          If@6782..6784 "if"
          BinOp@6784..6790
            Ident@6784..6785
              Ident@6784..6785 "m"
            Eq@6785..6787 "=="
            LiteralExpr@6787..6790
              Nil@6787..6790 "nil"
          Then@6790..6794 "then"
          StmtList@6794..6800
            AssignStmt@6794..6797
              Ident@6794..6795
                Ident@6794..6795 "m"
              Assign@6795..6796 "="
              Ident@6796..6797
                Ident@6796..6797 "n"
            AssignStmt@6797..6800
              Ident@6797..6798
                Ident@6797..6798 "n"
              Assign@6798..6799 "="
              LiteralExpr@6799..6800
                Int@6799..6800 "0"
          ElseChain@6800..6862
            Else@6800..6804 "else"
            StmtList@6804..6859
              FuncCall@6804..6859
                Ident@6804..6810
                  Ident@6804..6810 "assert"
                FuncArgs@6810..6859
                  LParen@6810..6811 "("
                  BinOp@6811..6828
                    FuncCall@6811..6818
                      Ident@6811..6815
                        Ident@6811..6815 "type"
                      FuncArgs@6815..6818
                        LParen@6815..6816 "("
                        Ident@6816..6817
                          Ident@6816..6817 "m"
                        RParen@6817..6818 ")"
                    Eq@6818..6820 "=="
                    LiteralExpr@6820..6828
                      String@6820..6828 "\"number\""
                  Comma@6828..6829 ","
                  LiteralExpr@6829..6858
                    String@6829..6858 "\"invalid second arg t ..."
                  RParen@6858..6859 ")"
            End@6859..6862 "end"
        FuncCall@6862..6890
          Ident@6862..6868
            Ident@6862..6868 "assert"
          FuncArgs@6868..6890
            LParen@6868..6869 "("
            BinOp@6869..6872
              Ident@6869..6870
                Ident@6869..6870 "n"
              LAngle@6870..6871 "<"
              Ident@6871..6872
                Ident@6871..6872 "m"
            Comma@6872..6873 ","
            LiteralExpr@6873..6889
              String@6873..6889 "\"empty interval\""
            RParen@6889..6890 ")"
        ReturnStmt@6890..6921
          Return@6890..6896 "return"
          FuncCall@6896..6921
            Ident@6896..6900
              Ident@6896..6900 "wrap"
            FuncArgs@6900..6921
              LParen@6900..6901 "("
              Ident@6901..6910
                Ident@6901..6910 "rands_gen"
              Comma@6910..6911 ","
              TableExpr@6911..6918
                LCurly@6911..6912 "{"
                TableArrayElem@6912..6913
                  Ident@6912..6913
                    Ident@6912..6913 "n"
                Comma@6913..6914 ","
                TableArrayElem@6914..6917
                  BinOp@6914..6917
                    Ident@6914..6915
                      Ident@6914..6915 "m"
                    Minus@6915..6916 "-"
                    LiteralExpr@6916..6917
                      Int@6916..6917 "1"
                RCurly@6917..6918 "}"
              Comma@6918..6919 ","
              LiteralExpr@6919..6920
                Int@6919..6920 "0"
              RParen@6920..6921 ")"
      End@6921..6924 "end"
  AssignStmt@6924..6943
    BinOp@6924..6937
      Ident@6924..6931
        Ident@6924..6931 "exports"
      Dot@6931..6932 "."
      Ident@6932..6937
        Ident@6932..6937 "rands"
    Assign@6937..6938 "="
    Ident@6938..6943
      Ident@6938..6943 "rands"
  DeclStmt@6943..7288
    Local@6943..6948 "local"
    DeclTarget@6948..6951
      Ident@6948..6951 "nth"
    Assign@6951..6952 "="
    FuncExpr@6952..7288
      Function@6952..6960 "function"
      FuncArgs@6960..6985
        LParen@6960..6961 "("
        Ident@6961..6962 "n"
        Comma@6962..6963 ","
        Ident@6963..6968 "gen_x"
        Comma@6968..6969 ","
        Ident@6969..6976 "param_x"
        Comma@6976..6977 ","
        Ident@6977..6984 "state_x"
        RParen@6984..6985 ")"
      StmtList@6985..7285
        FuncCall@6985..7028
          Ident@6985..6991
            Ident@6985..6991 "assert"
          FuncArgs@6991..7028
            LParen@6991..6992 "("
            BinOp@6992..6995
              Ident@6992..6993
                Ident@6992..6993 "n"
              RAngle@6993..6994 ">"
              LiteralExpr@6994..6995
                Int@6994..6995 "0"
            Comma@6995..6996 ","
            LiteralExpr@6996..7027
              String@6996..7027 "\"invalid first argume ..."
            RParen@7027..7028 ")"
        IfStmt@7028..7159
          If@7028..7030 "if"
          BinOp@7030..7047
            Ident@7030..7035
              Ident@7030..7035 "gen_x"
            Eq@7035..7037 "=="
            Ident@7037..7047
              Ident@7037..7047 "ipairs_gen"
          Then@7047..7051 "then"
          StmtList@7051..7067
            ReturnStmt@7051..7067
              Return@7051..7057 "return"
              Index@7057..7067
                Ident@7057..7064
                  Ident@7057..7064 "param_x"
                LBracket@7064..7065 "["
                Ident@7065..7066
                  Ident@7065..7066 "n"
                RBracket@7066..7067 "]"
          ElseChain@7067..7159
            IfStmt@7067..7159
              ElseIf@7067..7073 "elseif"
              BinOp@7073..7090
                Ident@7073..7078
                  Ident@7073..7078 "gen_x"
                Eq@7078..7080 "=="
                Ident@7080..7090
                  Ident@7080..7090 "string_gen"
              Then@7090..7094 "then"
              StmtList@7094..7156
                IfStmt@7094..7156
                  If@7094..7096 "if"
                  BinOp@7096..7107
                    Ident@7096..7097
                      Ident@7096..7097 "n"
                    LEq@7097..7099 "<="
                    PrefixOp@7099..7107
                      Hash@7099..7100 "#"
                      Ident@7100..7107
                        Ident@7100..7107 "param_x"
                  Then@7107..7111 "then"
                  StmtList@7111..7140
                    ReturnStmt@7111..7140
                      Return@7111..7117 "return"
                      FuncCall@7117..7140
                        BinOp@7117..7127
                          Ident@7117..7123
                            Ident@7117..7123 "string"
                          Dot@7123..7124 "."
                          Ident@7124..7127
                            Ident@7124..7127 "sub"
                        FuncArgs@7127..7140
                          LParen@7127..7128 "("
                          Ident@7128..7135
                            Ident@7128..7135 "param_x"
                          Comma@7135..7136 ","
                          Ident@7136..7137
                            Ident@7136..7137 "n"
                          Comma@7137..7138 ","
                          Ident@7138..7139
                            Ident@7138..7139 "n"
                          RParen@7139..7140 ")"
                  ElseChain@7140..7156
                    Else@7140..7144 "else"
                    StmtList@7144..7153
                      ReturnStmt@7144..7153
                        Return@7144..7150 "return"
                        LiteralExpr@7150..7153
                          Nil@7150..7153 "nil"
                    End@7153..7156 "end"
              End@7156..7159 "end"
        ForNumStmt@7159..7236
          For@7159..7162 "for"
          Ident@7162..7163 "i"
          Assign@7163..7164 "="
          LiteralExpr@7164..7165
            Int@7164..7165 "1"
          Comma@7165..7166 ","
          BinOp@7166..7169
            Ident@7166..7167
              Ident@7166..7167 "n"
            Minus@7167..7168 "-"
            LiteralExpr@7168..7169
              Int@7168..7169 "1"
          Comma@7169..7170 ","
          LiteralExpr@7170..7171
            Int@7170..7171 "1"
          BlockStmt@7171..7236
            Do@7171..7173 "do"
            StmtList@7173..7233
              AssignStmt@7173..7203
                Ident@7173..7180
                  Ident@7173..7180 "state_x"
                Assign@7180..7181 "="
                FuncCall@7181..7203
                  Ident@7181..7186
                    Ident@7181..7186 "gen_x"
                  FuncArgs@7186..7203
                    LParen@7186..7187 "("
                    Ident@7187..7194
                      Ident@7187..7194 "param_x"
                    Comma@7194..7195 ","
                    Ident@7195..7202
                      Ident@7195..7202 "state_x"
                    RParen@7202..7203 ")"
              IfStmt@7203..7233
                If@7203..7205 "if"
                BinOp@7205..7217
                  Ident@7205..7212
                    Ident@7205..7212 "state_x"
                  Eq@7212..7214 "=="
                  LiteralExpr@7214..7217
                    Nil@7214..7217 "nil"
                Then@7217..7221 "then"
                StmtList@7221..7230
                  ReturnStmt@7221..7230
                    Return@7221..7227 "return"
                    LiteralExpr@7227..7230
                      Nil@7227..7230 "nil"
                End@7230..7233 "end"
            End@7233..7236 "end"
        ReturnStmt@7236..7285
          Return@7236..7242 "return"
          FuncCall@7242..7285
            Ident@7242..7261
              Ident@7242..7261 "return_if_not_empty"
            FuncArgs@7261..7285
              LParen@7261..7262 "("
              FuncCall@7262..7284
                Ident@7262..7267
                  Ident@7262..7267 "gen_x"
                FuncArgs@7267..7284
                  LParen@7267..7268 "("
                  Ident@7268..7275
                    Ident@7268..7275 "param_x"
                  Comma@7275..7276 ","
                  Ident@7276..7283
                    Ident@7276..7283 "state_x"
                  RParen@7283..7284 ")"
              RParen@7284..7285 ")"
      End@7285..7288 "end"
  AssignStmt@7288..7312
    BinOp@7288..7299
      Ident@7288..7295
        Ident@7288..7295 "methods"
      Dot@7295..7296 "."
      Ident@7296..7299
        Ident@7296..7299 "nth"
    Assign@7299..7300 "="
    FuncCall@7300..7312
      Ident@7300..7307
        Ident@7300..7307 "method1"
      FuncArgs@7307..7312
        LParen@7307..7308 "("
        Ident@7308..7311
          Ident@7308..7311 "nth"
        RParen@7311..7312 ")"
  AssignStmt@7312..7336
    BinOp@7312..7323
      Ident@7312..7319
        Ident@7312..7319 "exports"
      Dot@7319..7320 "."
      Ident@7320..7323
        Ident@7320..7323 "nth"
    Assign@7323..7324 "="
    FuncCall@7324..7336
      Ident@7324..7331
        Ident@7324..7331 "export1"
      FuncArgs@7331..7336
        LParen@7331..7332 "("
        Ident@7332..7335
          Ident@7332..7335 "nth"
        RParen@7335..7336 ")"
  DeclStmt@7336..7433
    Local@7336..7341 "local"
    DeclTarget@7341..7350
      Ident@7341..7350 "head_call"
    Assign@7350..7351 "="
    FuncExpr@7351..7433
      Function@7351..7359 "function"
      FuncArgs@7359..7370
        LParen@7359..7360 "("
        Ident@7360..7365 "state"
        Comma@7365..7366 ","
        TDot@7366..7369 "..."
        RParen@7369..7370 ")"
      StmtList@7370..7430
        IfStmt@7370..7421
          If@7370..7372 "if"
          BinOp@7372..7382
            Ident@7372..7377
              Ident@7372..7377 "state"
            Eq@7377..7379 "=="
            LiteralExpr@7379..7382
              Nil@7379..7382 "nil"
          Then@7382..7386 "then"
          StmtList@7386..7418
            FuncCall@7386..7418
              Ident@7386..7391
                Ident@7386..7391 "error"
              FuncArgs@7391..7418
                LParen@7391..7392 "("
                LiteralExpr@7392..7417
                  String@7392..7417 "\"head: iterator is em ..."
                RParen@7417..7418 ")"
          End@7418..7421 "end"
        ReturnStmt@7421..7430
          Return@7421..7427 "return"
          VarArgExpr@7427..7430
            TDot@7427..7430 "..."
      End@7430..7433 "end"
  DeclStmt@7433..7504
    Local@7433..7438 "local"
    DeclTarget@7438..7442
      Ident@7438..7442 "head"
    Assign@7442..7443 "="
    FuncExpr@7443..7504
      Function@7443..7451 "function"
      FuncArgs@7451..7468
        LParen@7451..7452 "("
        Ident@7452..7455 "gen"
        Comma@7455..7456 ","
        Ident@7456..7461 "param"
        Comma@7461..7462 ","
        Ident@7462..7467 "state"
        RParen@7467..7468 ")"
      StmtList@7468..7501
        ReturnStmt@7468..7501
          Return@7468..7474 "return"
          FuncCall@7474..7501
            Ident@7474..7483
              Ident@7474..7483 "head_call"
            FuncArgs@7483..7501
              LParen@7483..7484 "("
              FuncCall@7484..7500
                Ident@7484..7487
                  Ident@7484..7487 "gen"
                FuncArgs@7487..7500
                  LParen@7487..7488 "("
                  Ident@7488..7493
                    Ident@7488..7493 "param"
                  Comma@7493..7494 ","
                  Ident@7494..7499
                    Ident@7494..7499 "state"
                  RParen@7499..7500 ")"
              RParen@7500..7501 ")"
      End@7501..7504 "end"
  AssignStmt@7504..7530
    BinOp@7504..7516
      Ident@7504..7511
        Ident@7504..7511 "methods"
      Dot@7511..7512 "."
      Ident@7512..7516
        Ident@7512..7516 "head"
    Assign@7516..7517 "="
    FuncCall@7517..7530
      Ident@7517..7524
        Ident@7517..7524 "method0"
      FuncArgs@7524..7530
        LParen@7524..7525 "("
        Ident@7525..7529
          Ident@7525..7529 "head"
        RParen@7529..7530 ")"
  AssignStmt@7530..7556
    BinOp@7530..7542
      Ident@7530..7537
        Ident@7530..7537 "exports"
      Dot@7537..7538 "."
      Ident@7538..7542
        Ident@7538..7542 "head"
    Assign@7542..7543 "="
    FuncCall@7543..7556
      Ident@7543..7550
        Ident@7543..7550 "export0"
      FuncArgs@7550..7556
        LParen@7550..7551 "("
        Ident@7551..7555
          Ident@7551..7555 "head"
        RParen@7555..7556 ")"
  AssignStmt@7556..7580
    BinOp@7556..7567
      Ident@7556..7563
        Ident@7556..7563 "exports"
      Dot@7563..7564 "."
      Ident@7564..7567
        Ident@7564..7567 "car"
    Assign@7567..7568 "="
    BinOp@7568..7580
      Ident@7568..7575
        Ident@7568..7575 "exports"
      Dot@7575..7576 "."
      Ident@7576..7580
        Ident@7576..7580 "head"
  AssignStmt@7580..7604
    BinOp@7580..7591
      Ident@7580..7587
        Ident@7580..7587 "methods"
      Dot@7587..7588 "."
      Ident@7588..7591
        Ident@7588..7591 "car"
    Assign@7591..7592 "="
    BinOp@7592..7604
      Ident@7592..7599
        Ident@7592..7599 "methods"
      Dot@7599..7600 "."
      Ident@7600..7604
        Ident@7600..7604 "head"
  DeclStmt@7604..7737
    Local@7604..7609 "local"
    DeclTarget@7609..7613
      Ident@7609..7613 "tail"
    Assign@7613..7614 "="
    FuncExpr@7614..7737
      Function@7614..7622 "function"
      FuncArgs@7622..7639
        LParen@7622..7623 "("
        Ident@7623..7626 "gen"
        Comma@7626..7627 ","
        Ident@7627..7632 "param"
        Comma@7632..7633 ","
        Ident@7633..7638 "state"
        RParen@7638..7639 ")"
      StmtList@7639..7734
        AssignStmt@7639..7661
          Ident@7639..7644
            Ident@7639..7644 "state"
          Assign@7644..7645 "="
          FuncCall@7645..7661
            Ident@7645..7648
              Ident@7645..7648 "gen"
            FuncArgs@7648..7661
              LParen@7648..7649 "("
              Ident@7649..7654
                Ident@7649..7654 "param"
              Comma@7654..7655 ","
              Ident@7655..7660
                Ident@7655..7660 "state"
              RParen@7660..7661 ")"
        IfStmt@7661..7707
          If@7661..7663 "if"
          BinOp@7663..7673
            Ident@7663..7668
              Ident@7663..7668 "state"
            Eq@7668..7670 "=="
            LiteralExpr@7670..7673
              Nil@7670..7673 "nil"
          Then@7673..7677 "then"
          StmtList@7677..7704
            ReturnStmt@7677..7704
              Return@7677..7683 "return"
              FuncCall@7683..7704
                Ident@7683..7687
                  Ident@7683..7687 "wrap"
                FuncArgs@7687..7704
                  LParen@7687..7688 "("
                  Ident@7688..7695
                    Ident@7688..7695 "nil_gen"
                  Comma@7695..7696 ","
                  LiteralExpr@7696..7699
                    Nil@7696..7699 "nil"
                  Comma@7699..7700 ","
                  LiteralExpr@7700..7703
                    Nil@7700..7703 "nil"
                  RParen@7703..7704 ")"
          End@7704..7707 "end"
        ReturnStmt@7707..7734
          Return@7707..7713 "return"
          FuncCall@7713..7734
            Ident@7713..7717
              Ident@7713..7717 "wrap"
            FuncArgs@7717..7734
              LParen@7717..7718 "("
              Ident@7718..7721
                Ident@7718..7721 "gen"
              Comma@7721..7722 ","
              Ident@7722..7727
                Ident@7722..7727 "param"
              Comma@7727..7728 ","
              Ident@7728..7733
                Ident@7728..7733 "state"
              RParen@7733..7734 ")"
      End@7734..7737 "end"
  AssignStmt@7737..7763
    BinOp@7737..7749
      Ident@7737..7744
        Ident@7737..7744 "methods"
      Dot@7744..7745 "."
      Ident@7745..7749
        Ident@7745..7749 "tail"
    Assign@7749..7750 "="
    FuncCall@7750..7763
      Ident@7750..7757
        Ident@7750..7757 "method0"
      FuncArgs@7757..7763
        LParen@7757..7758 "("
        Ident@7758..7762
          Ident@7758..7762 "tail"
        RParen@7762..7763 ")"
  AssignStmt@7763..7789
    BinOp@7763..7775
      Ident@7763..7770
        Ident@7763..7770 "exports"
      Dot@7770..7771 "."
      Ident@7771..7775
        Ident@7771..7775 "tail"
    Assign@7775..7776 "="
    FuncCall@7776..7789
      Ident@7776..7783
        Ident@7776..7783 "export0"
      FuncArgs@7783..7789
        LParen@7783..7784 "("
        Ident@7784..7788
          Ident@7784..7788 "tail"
        RParen@7788..7789 ")"
  AssignStmt@7789..7813
    BinOp@7789..7800
      Ident@7789..7796
        Ident@7789..7796 "exports"
      Dot@7796..7797 "."
      Ident@7797..7800
        Ident@7797..7800 "cdr"
    Assign@7800..7801 "="
    BinOp@7801..7813
      Ident@7801..7808
        Ident@7801..7808 "exports"
      Dot@7808..7809 "."
      Ident@7809..7813
        Ident@7809..7813 "tail"
  AssignStmt@7813..7837
    BinOp@7813..7824
      Ident@7813..7820
        Ident@7813..7820 "methods"
      Dot@7820..7821 "."
      Ident@7821..7824
        Ident@7821..7824 "cdr"
    Assign@7824..7825 "="
    BinOp@7825..7837
      Ident@7825..7832
        Ident@7825..7832 "methods"
      Dot@7832..7833 "."
      Ident@7833..7837
        Ident@7833..7837 "tail"
  DeclStmt@7837..7932
    Local@7837..7842 "local"
    DeclTarget@7842..7854
      Ident@7842..7854 "take_n_gen_x"
    Assign@7854..7855 "="
    FuncExpr@7855..7932
      Function@7855..7863 "function"
      FuncArgs@7863..7878
        LParen@7863..7864 "("
        Ident@7864..7865 "i"
        Comma@7865..7866 ","
        Ident@7866..7873 "state_x"
        Comma@7873..7874 ","
        TDot@7874..7877 "..."
        RParen@7877..7878 ")"
      StmtList@7878..7929
        IfStmt@7878..7908
          If@7878..7880 "if"
          BinOp@7880..7892
            Ident@7880..7887
              Ident@7880..7887 "state_x"
            Eq@7887..7889 "=="
            LiteralExpr@7889..7892
              Nil@7889..7892 "nil"
          Then@7892..7896 "then"
          StmtList@7896..7905
            ReturnStmt@7896..7905
              Return@7896..7902 "return"
              LiteralExpr@7902..7905
                Nil@7902..7905 "nil"
          End@7905..7908 "end"
        ReturnStmt@7908..7929
          Return@7908..7914 "return"
          ExprList@7914..7929
            TableExpr@7914..7925
              LCurly@7914..7915 "{"
              TableArrayElem@7915..7916
                Ident@7915..7916
                  Ident@7915..7916 "i"
              Comma@7916..7917 ","
              TableArrayElem@7917..7924
                Ident@7917..7924
                  Ident@7917..7924 "state_x"
              RCurly@7924..7925 "}"
            Comma@7925..7926 ","
            VarArgExpr@7926..7929
              TDot@7926..7929 "..."
      End@7929..7932 "end"
  DeclStmt@7932..8119
    Local@7932..7937 "local"
    DeclTarget@7937..7947
      Ident@7937..7947 "take_n_gen"
    Assign@7947..7948 "="
    FuncExpr@7948..8119
      Function@7948..7956 "function"
      FuncArgs@7956..7969
        LParen@7956..7957 "("
        Ident@7957..7962 "param"
        Comma@7962..7963 ","
        Ident@7963..7968 "state"
        RParen@7968..7969 ")"
      StmtList@7969..8116
        DeclStmt@7969..8016
          Local@7969..7974 "local"
          DeclTarget@7974..7975
            Ident@7974..7975 "n"
          Comma@7975..7976 ","
          DeclTarget@7976..7981
            Ident@7976..7981 "gen_x"
          Comma@7981..7982 ","
          DeclTarget@7982..7989
            Ident@7982..7989 "param_x"
          Assign@7989..7990 "="
          ExprList@7990..8016
            Index@7990..7998
              Ident@7990..7995
                Ident@7990..7995 "param"
              LBracket@7995..7996 "["
              LiteralExpr@7996..7997
                Int@7996..7997 "1"
              RBracket@7997..7998 "]"
            Comma@7998..7999 ","
            Index@7999..8007
              Ident@7999..8004
                Ident@7999..8004 "param"
              LBracket@8004..8005 "["
              LiteralExpr@8005..8006
                Int@8005..8006 "2"
              RBracket@8006..8007 "]"
            Comma@8007..8008 ","
            Index@8008..8016
              Ident@8008..8013
                Ident@8008..8013 "param"
              LBracket@8013..8014 "["
              LiteralExpr@8014..8015
                Int@8014..8015 "3"
              RBracket@8015..8016 "]"
        DeclStmt@8016..8048
          Local@8016..8021 "local"
          DeclTarget@8021..8022
            Ident@8021..8022 "i"
          Comma@8022..8023 ","
          DeclTarget@8023..8030
            Ident@8023..8030 "state_x"
          Assign@8030..8031 "="
          ExprList@8031..8048
            Index@8031..8039
              Ident@8031..8036
                Ident@8031..8036 "state"
              LBracket@8036..8037 "["
              LiteralExpr@8037..8038
                Int@8037..8038 "1"
              RBracket@8038..8039 "]"
            Comma@8039..8040 ","
            Index@8040..8048
              Ident@8040..8045
                Ident@8040..8045 "state"
              LBracket@8045..8046 "["
              LiteralExpr@8046..8047
                Int@8046..8047 "2"
              RBracket@8047..8048 "]"
        IfStmt@8048..8070
          If@8048..8050 "if"
          BinOp@8050..8054
            Ident@8050..8051
              Ident@8050..8051 "i"
            GEq@8051..8053 ">="
            Ident@8053..8054
              Ident@8053..8054 "n"
          Then@8054..8058 "then"
          StmtList@8058..8067
            ReturnStmt@8058..8067
              Return@8058..8064 "return"
              LiteralExpr@8064..8067
                Nil@8064..8067 "nil"
          End@8067..8070 "end"
        ReturnStmt@8070..8116
          Return@8070..8076 "return"
          FuncCall@8076..8116
            Ident@8076..8088
              Ident@8076..8088 "take_n_gen_x"
            FuncArgs@8088..8116
              LParen@8088..8089 "("
              BinOp@8089..8092
                Ident@8089..8090
                  Ident@8089..8090 "i"
                Plus@8090..8091 "+"
                LiteralExpr@8091..8092
                  Int@8091..8092 "1"
              Comma@8092..8093 ","
              FuncCall@8093..8115
                Ident@8093..8098
                  Ident@8093..8098 "gen_x"
                FuncArgs@8098..8115
                  LParen@8098..8099 "("
                  Ident@8099..8106
                    Ident@8099..8106 "param_x"
                  Comma@8106..8107 ","
                  Ident@8107..8114
                    Ident@8107..8114 "state_x"
                  RParen@8114..8115 ")"
              RParen@8115..8116 ")"
      End@8116..8119 "end"
  DeclStmt@8119..8254
    Local@8119..8124 "local"
    DeclTarget@8124..8130
      Ident@8124..8130 "take_n"
    Assign@8130..8131 "="
    FuncExpr@8131..8254
      Function@8131..8139 "function"
      FuncArgs@8139..8158
        LParen@8139..8140 "("
        Ident@8140..8141 "n"
        Comma@8141..8142 ","
        Ident@8142..8145 "gen"
        Comma@8145..8146 ","
        Ident@8146..8151 "param"
        Comma@8151..8152 ","
        Ident@8152..8157 "state"
        RParen@8157..8158 ")"
      StmtList@8158..8251
        FuncCall@8158..8205
          Ident@8158..8164
            Ident@8158..8164 "assert"
          FuncArgs@8164..8205
            LParen@8164..8165 "("
            BinOp@8165..8169
              Ident@8165..8166
                Ident@8165..8166 "n"
              GEq@8166..8168 ">="
              LiteralExpr@8168..8169
                Int@8168..8169 "0"
            Comma@8169..8170 ","
            LiteralExpr@8170..8204
              String@8170..8204 "\"invalid first argume ..."
            RParen@8204..8205 ")"
        ReturnStmt@8205..8251
          Return@8205..8211 "return"
          FuncCall@8211..8251
            Ident@8211..8215
              Ident@8211..8215 "wrap"
            FuncArgs@8215..8251
              LParen@8215..8216 "("
              Ident@8216..8226
                Ident@8216..8226 "take_n_gen"
              Comma@8226..8227 ","
              TableExpr@8227..8240
                LCurly@8227..8228 "{"
                TableArrayElem@8228..8229
                  Ident@8228..8229
                    Ident@8228..8229 "n"
                Comma@8229..8230 ","
                TableArrayElem@8230..8233
                  Ident@8230..8233
                    Ident@8230..8233 "gen"
                Comma@8233..8234 ","
                TableArrayElem@8234..8239
                  Ident@8234..8239
                    Ident@8234..8239 "param"
                RCurly@8239..8240 "}"
              Comma@8240..8241 ","
              TableExpr@8241..8250
                LCurly@8241..8242 "{"
                TableArrayElem@8242..8243
                  LiteralExpr@8242..8243
                    Int@8242..8243 "0"
                Comma@8243..8244 ","
                TableArrayElem@8244..8249
                  Ident@8244..8249
                    Ident@8244..8249 "state"
                RCurly@8249..8250 "}"
              RParen@8250..8251 ")"
      End@8251..8254 "end"
  AssignStmt@8254..8284
    BinOp@8254..8268
      Ident@8254..8261
        Ident@8254..8261 "methods"
      Dot@8261..8262 "."
      Ident@8262..8268
        Ident@8262..8268 "take_n"
    Assign@8268..8269 "="
    FuncCall@8269..8284
      Ident@8269..8276
        Ident@8269..8276 "method1"
      FuncArgs@8276..8284
        LParen@8276..8277 "("
        Ident@8277..8283
          Ident@8277..8283 "take_n"
        RParen@8283..8284 ")"
  AssignStmt@8284..8314
    BinOp@8284..8298
      Ident@8284..8291
        Ident@8284..8291 "exports"
      Dot@8291..8292 "."
      Ident@8292..8298
        Ident@8292..8298 "take_n"
    Assign@8298..8299 "="
    FuncCall@8299..8314
      Ident@8299..8306
        Ident@8299..8306 "export1"
      FuncArgs@8306..8314
        LParen@8306..8307 "("
        Ident@8307..8313
          Ident@8307..8313 "take_n"
        RParen@8313..8314 ")"
  DeclStmt@8314..8424
    Local@8314..8319 "local"
    DeclTarget@8319..8335
      Ident@8319..8335 "take_while_gen_x"
    Assign@8335..8336 "="
    FuncExpr@8336..8424
      Function@8336..8344 "function"
      FuncArgs@8344..8361
        LParen@8344..8345 "("
        Ident@8345..8348 "fun"
        Comma@8348..8349 ","
        Ident@8349..8356 "state_x"
        Comma@8356..8357 ","
        TDot@8357..8360 "..."
        RParen@8360..8361 ")"
      StmtList@8361..8421
        IfStmt@8361..8404
          If@8361..8363 "if"
          BinOp@8363..8388
            BinOp@8363..8375
              Ident@8363..8370
                Ident@8363..8370 "state_x"
              Eq@8370..8372 "=="
              LiteralExpr@8372..8375
                Nil@8372..8375 "nil"
            Or@8375..8377 "or"
            PrefixOp@8377..8388
              Not@8377..8380 "not"
              FuncCall@8380..8388
                Ident@8380..8383
                  Ident@8380..8383 "fun"
                FuncArgs@8383..8388
                  LParen@8383..8384 "("
                  VarArgExpr@8384..8387
                    TDot@8384..8387 "..."
                  RParen@8387..8388 ")"
          Then@8388..8392 "then"
          StmtList@8392..8401
            ReturnStmt@8392..8401
              Return@8392..8398 "return"
              LiteralExpr@8398..8401
                Nil@8398..8401 "nil"
          End@8401..8404 "end"
        ReturnStmt@8404..8421
          Return@8404..8410 "return"
          ExprList@8410..8421
            Ident@8410..8417
              Ident@8410..8417 "state_x"
            Comma@8417..8418 ","
            VarArgExpr@8418..8421
              TDot@8418..8421 "..."
      End@8421..8424 "end"
  DeclStmt@8424..8569
    Local@8424..8429 "local"
    DeclTarget@8429..8443
      Ident@8429..8443 "take_while_gen"
    Assign@8443..8444 "="
    FuncExpr@8444..8569
      Function@8444..8452 "function"
      FuncArgs@8452..8467
        LParen@8452..8453 "("
        Ident@8453..8458 "param"
        Comma@8458..8459 ","
        Ident@8459..8466 "state_x"
        RParen@8466..8467 ")"
      StmtList@8467..8566
        DeclStmt@8467..8516
          Local@8467..8472 "local"
          DeclTarget@8472..8475
            Ident@8472..8475 "fun"
          Comma@8475..8476 ","
          DeclTarget@8476..8481
            Ident@8476..8481 "gen_x"
          Comma@8481..8482 ","
          DeclTarget@8482..8489
            Ident@8482..8489 "param_x"
          Assign@8489..8490 "="
          ExprList@8490..8516
            Index@8490..8498
              Ident@8490..8495
                Ident@8490..8495 "param"
              LBracket@8495..8496 "["
              LiteralExpr@8496..8497
                Int@8496..8497 "1"
              RBracket@8497..8498 "]"
            Comma@8498..8499 ","
            Index@8499..8507
              Ident@8499..8504
                Ident@8499..8504 "param"
              LBracket@8504..8505 "["
              LiteralExpr@8505..8506
                Int@8505..8506 "2"
              RBracket@8506..8507 "]"
            Comma@8507..8508 ","
            Index@8508..8516
              Ident@8508..8513
                Ident@8508..8513 "param"
              LBracket@8513..8514 "["
              LiteralExpr@8514..8515
                Int@8514..8515 "3"
              RBracket@8515..8516 "]"
        ReturnStmt@8516..8566
          Return@8516..8522 "return"
          FuncCall@8522..8566
            Ident@8522..8538
              Ident@8522..8538 "take_while_gen_x"
            FuncArgs@8538..8566
              LParen@8538..8539 "("
              Ident@8539..8542
                Ident@8539..8542 "fun"
              Comma@8542..8543 ","
              FuncCall@8543..8565
                Ident@8543..8548
                  Ident@8543..8548 "gen_x"
                FuncArgs@8548..8565
                  LParen@8548..8549 "("
                  Ident@8549..8556
                    Ident@8549..8556 "param_x"
                  Comma@8556..8557 ","
                  Ident@8557..8564
                    Ident@8557..8564 "state_x"
                  RParen@8564..8565 ")"
              RParen@8565..8566 ")"
      End@8566..8569 "end"
  DeclStmt@8569..8733
    Local@8569..8574 "local"
    DeclTarget@8574..8584
      Ident@8574..8584 "take_while"
    Assign@8584..8585 "="
    FuncExpr@8585..8733
      Function@8585..8593 "function"
      FuncArgs@8593..8614
        LParen@8593..8594 "("
        Ident@8594..8597 "fun"
        Comma@8597..8598 ","
        Ident@8598..8601 "gen"
        Comma@8601..8602 ","
        Ident@8602..8607 "param"
        Comma@8607..8608 ","
        Ident@8608..8613 "state"
        RParen@8613..8614 ")"
      StmtList@8614..8730
        FuncCall@8614..8682
          Ident@8614..8620
            Ident@8614..8620 "assert"
          FuncArgs@8620..8682
            LParen@8620..8621 "("
            BinOp@8621..8642
              FuncCall@8621..8630
                Ident@8621..8625
                  Ident@8621..8625 "type"
                FuncArgs@8625..8630
                  LParen@8625..8626 "("
                  Ident@8626..8629
                    Ident@8626..8629 "fun"
                  RParen@8629..8630 ")"
              Eq@8630..8632 "=="
              LiteralExpr@8632..8642
                String@8632..8642 "\"function\""
            Comma@8642..8643 ","
            LiteralExpr@8643..8681
              String@8643..8681 "\"invalid first argume ..."
            RParen@8681..8682 ")"
        ReturnStmt@8682..8730
          Return@8682..8688 "return"
          FuncCall@8688..8730
            Ident@8688..8692
              Ident@8688..8692 "wrap"
            FuncArgs@8692..8730
              LParen@8692..8693 "("
              Ident@8693..8707
                Ident@8693..8707 "take_while_gen"
              Comma@8707..8708 ","
              TableExpr@8708..8723
                LCurly@8708..8709 "{"
                TableArrayElem@8709..8712
                  Ident@8709..8712
                    Ident@8709..8712 "fun"
                Comma@8712..8713 ","
                TableArrayElem@8713..8716
                  Ident@8713..8716
                    Ident@8713..8716 "gen"
                Comma@8716..8717 ","
                TableArrayElem@8717..8722
                  Ident@8717..8722
                    Ident@8717..8722 "param"
                RCurly@8722..8723 "}"
              Comma@8723..8724 ","
              Ident@8724..8729
                Ident@8724..8729 "state"
              RParen@8729..8730 ")"
      End@8730..8733 "end"
  AssignStmt@8733..8771
    BinOp@8733..8751
      Ident@8733..8740
        Ident@8733..8740 "methods"
      Dot@8740..8741 "."
      Ident@8741..8751
        Ident@8741..8751 "take_while"
    Assign@8751..8752 "="
    FuncCall@8752..8771
      Ident@8752..8759
        Ident@8752..8759 "method1"
      FuncArgs@8759..8771
        LParen@8759..8760 "("
        Ident@8760..8770
          Ident@8760..8770 "take_while"
        RParen@8770..8771 ")"
  AssignStmt@8771..8809
    BinOp@8771..8789
      Ident@8771..8778
        Ident@8771..8778 "exports"
      Dot@8778..8779 "."
      Ident@8779..8789
        Ident@8779..8789 "take_while"
    Assign@8789..8790 "="
    FuncCall@8790..8809
      Ident@8790..8797
        Ident@8790..8797 "export1"
      FuncArgs@8797..8809
        LParen@8797..8798 "("
        Ident@8798..8808
          Ident@8798..8808 "take_while"
        RParen@8808..8809 ")"
  DeclStmt@8809..8973
    Local@8809..8814 "local"
    DeclTarget@8814..8818
      Ident@8814..8818 "take"
    Assign@8818..8819 "="
    FuncExpr@8819..8973
      Function@8819..8827 "function"
      FuncArgs@8827..8853
        LParen@8827..8828 "("
        Ident@8828..8836 "n_or_fun"
        Comma@8836..8837 ","
        Ident@8837..8840 "gen"
        Comma@8840..8841 ","
        Ident@8841..8846 "param"
        Comma@8846..8847 ","
        Ident@8847..8852 "state"
        RParen@8852..8853 ")"
      StmtList@8853..8970
        IfStmt@8853..8970
          If@8853..8855 "if"
          BinOp@8855..8879
            FuncCall@8855..8869
              Ident@8855..8859
                Ident@8855..8859 "type"
              FuncArgs@8859..8869
                LParen@8859..8860 "("
                Ident@8860..8868
                  Ident@8860..8868 "n_or_fun"
                RParen@8868..8869 ")"
            Eq@8869..8871 "=="
            LiteralExpr@8871..8879
              String@8871..8879 "\"number\""
          Then@8879..8883 "then"
          StmtList@8883..8921
            ReturnStmt@8883..8921
              Return@8883..8889 "return"
              FuncCall@8889..8921
                Ident@8889..8895
                  Ident@8889..8895 "take_n"
                FuncArgs@8895..8921
                  LParen@8895..8896 "("
                  Ident@8896..8904
                    Ident@8896..8904 "n_or_fun"
                  Comma@8904..8905 ","
                  Ident@8905..8908
                    Ident@8905..8908 "gen"
                  Comma@8908..8909 ","
                  Ident@8909..8914
                    Ident@8909..8914 "param"
                  Comma@8914..8915 ","
                  Ident@8915..8920
                    Ident@8915..8920 "state"
                  RParen@8920..8921 ")"
          ElseChain@8921..8970
            Else@8921..8925 "else"
            StmtList@8925..8967
              ReturnStmt@8925..8967
                Return@8925..8931 "return"
                FuncCall@8931..8967
                  Ident@8931..8941
                    Ident@8931..8941 "take_while"
                  FuncArgs@8941..8967
                    LParen@8941..8942 "("
                    Ident@8942..8950
                      Ident@8942..8950 "n_or_fun"
                    Comma@8950..8951 ","
                    Ident@8951..8954
                      Ident@8951..8954 "gen"
                    Comma@8954..8955 ","
                    Ident@8955..8960
                      Ident@8955..8960 "param"
                    Comma@8960..8961 ","
                    Ident@8961..8966
                      Ident@8961..8966 "state"
                    RParen@8966..8967 ")"
            End@8967..8970 "end"
      End@8970..8973 "end"
  AssignStmt@8973..8999
    BinOp@8973..8985
      Ident@8973..8980
        Ident@8973..8980 "methods"
      Dot@8980..8981 "."
      Ident@8981..8985
        Ident@8981..8985 "take"
    Assign@8985..8986 "="
    FuncCall@8986..8999
      Ident@8986..8993
        Ident@8986..8993 "method1"
      FuncArgs@8993..8999
        LParen@8993..8994 "("
        Ident@8994..8998
          Ident@8994..8998 "take"
        RParen@8998..8999 ")"
  AssignStmt@8999..9025
    BinOp@8999..9011
      Ident@8999..9006
        Ident@8999..9006 "exports"
      Dot@9006..9007 "."
      Ident@9007..9011
        Ident@9007..9011 "take"
    Assign@9011..9012 "="
    FuncCall@9012..9025
      Ident@9012..9019
        Ident@9012..9019 "export1"
      FuncArgs@9019..9025
        LParen@9019..9020 "("
        Ident@9020..9024
          Ident@9020..9024 "take"
        RParen@9024..9025 ")"
  DeclStmt@9025..9230
    Local@9025..9030 "local"
    DeclTarget@9030..9036
      Ident@9030..9036 "drop_n"
    Assign@9036..9037 "="
    FuncExpr@9037..9230
      Function@9037..9045 "function"
      FuncArgs@9045..9064
        LParen@9045..9046 "("
        Ident@9046..9047 "n"
        Comma@9047..9048 ","
        Ident@9048..9051 "gen"
        Comma@9051..9052 ","
        Ident@9052..9057 "param"
        Comma@9057..9058 ","
        Ident@9058..9063 "state"
        RParen@9063..9064 ")"
      StmtList@9064..9227
        FuncCall@9064..9111
          Ident@9064..9070
            Ident@9064..9070 "assert"
          FuncArgs@9070..9111
            LParen@9070..9071 "("
            BinOp@9071..9075
              Ident@9071..9072
                Ident@9071..9072 "n"
              GEq@9072..9074 ">="
              LiteralExpr@9074..9075
                Int@9074..9075 "0"
            Comma@9075..9076 ","
            LiteralExpr@9076..9110
              String@9076..9110 "\"invalid first argume ..."
            RParen@9110..9111 ")"
        DeclStmt@9111..9117
          Local@9111..9116 "local"
          DeclTarget@9116..9117
            Ident@9116..9117 "i"
        ForNumStmt@9117..9200
          For@9117..9120 "for"
          Ident@9120..9121 "i"
          Assign@9121..9122 "="
          LiteralExpr@9122..9123
            Int@9122..9123 "1"
          Comma@9123..9124 ","
          Ident@9124..9125
            Ident@9124..9125 "n"
          Comma@9125..9126 ","
          LiteralExpr@9126..9127
            Int@9126..9127 "1"
          BlockStmt@9127..9200
            Do@9127..9129 "do"
            StmtList@9129..9197
              AssignStmt@9129..9151
                Ident@9129..9134
                  Ident@9129..9134 "state"
                Assign@9134..9135 "="
                FuncCall@9135..9151
                  Ident@9135..9138
                    Ident@9135..9138 "gen"
                  FuncArgs@9138..9151
                    LParen@9138..9139 "("
                    Ident@9139..9144
                      Ident@9139..9144 "param"
                    Comma@9144..9145 ","
                    Ident@9145..9150
                      Ident@9145..9150 "state"
                    RParen@9150..9151 ")"
              IfStmt@9151..9197
                If@9151..9153 "if"
                BinOp@9153..9163
                  Ident@9153..9158
                    Ident@9153..9158 "state"
                  Eq@9158..9160 "=="
                  LiteralExpr@9160..9163
                    Nil@9160..9163 "nil"
                Then@9163..9167 "then"
                StmtList@9167..9194
                  ReturnStmt@9167..9194
                    Return@9167..9173 "return"
                    FuncCall@9173..9194
                      Ident@9173..9177
                        Ident@9173..9177 "wrap"
                      FuncArgs@9177..9194
                        LParen@9177..9178 "("
                        Ident@9178..9185
                          Ident@9178..9185 "nil_gen"
                        Comma@9185..9186 ","
                        LiteralExpr@9186..9189
                          Nil@9186..9189 "nil"
                        Comma@9189..9190 ","
                        LiteralExpr@9190..9193
                          Nil@9190..9193 "nil"
                        RParen@9193..9194 ")"
                End@9194..9197 "end"
            End@9197..9200 "end"
        ReturnStmt@9200..9227
          Return@9200..9206 "return"
          FuncCall@9206..9227
            Ident@9206..9210
              Ident@9206..9210 "wrap"
            FuncArgs@9210..9227
              LParen@9210..9211 "("
              Ident@9211..9214
                Ident@9211..9214 "gen"
              Comma@9214..9215 ","
              Ident@9215..9220
                Ident@9215..9220 "param"
              Comma@9220..9221 ","
              Ident@9221..9226
                Ident@9221..9226 "state"
              RParen@9226..9227 ")"
      End@9227..9230 "end"
  AssignStmt@9230..9260
    BinOp@9230..9244
      Ident@9230..9237
        Ident@9230..9237 "methods"
      Dot@9237..9238 "."
      Ident@9238..9244
        Ident@9238..9244 "drop_n"
    Assign@9244..9245 "="
    FuncCall@9245..9260
      Ident@9245..9252
        Ident@9245..9252 "method1"
      FuncArgs@9252..9260
        LParen@9252..9253 "("
        Ident@9253..9259
          Ident@9253..9259 "drop_n"
        RParen@9259..9260 ")"
  AssignStmt@9260..9290
    BinOp@9260..9274
      Ident@9260..9267
        Ident@9260..9267 "exports"
      Dot@9267..9268 "."
      Ident@9268..9274
        Ident@9268..9274 "drop_n"
    Assign@9274..9275 "="
    FuncCall@9275..9290
      Ident@9275..9282
        Ident@9275..9282 "export1"
      FuncArgs@9282..9290
        LParen@9282..9283 "("
        Ident@9283..9289
          Ident@9283..9289 "drop_n"
        RParen@9289..9290 ")"
  DeclStmt@9290..9411
    Local@9290..9295 "local"
    DeclTarget@9295..9307
      Ident@9295..9307 "drop_while_x"
    Assign@9307..9308 "="
    FuncExpr@9308..9411
      Function@9308..9316 "function"
      FuncArgs@9316..9333
        LParen@9316..9317 "("
        Ident@9317..9320 "fun"
        Comma@9320..9321 ","
        Ident@9321..9328 "state_x"
        Comma@9328..9329 ","
        TDot@9329..9332 "..."
        RParen@9332..9333 ")"
      StmtList@9333..9408
        IfStmt@9333..9386
          If@9333..9335 "if"
          BinOp@9335..9360
            BinOp@9335..9347
              Ident@9335..9342
                Ident@9335..9342 "state_x"
              Eq@9342..9344 "=="
              LiteralExpr@9344..9347
                Nil@9344..9347 "nil"
            Or@9347..9349 "or"
            PrefixOp@9349..9360
              Not@9349..9352 "not"
              FuncCall@9352..9360
                Ident@9352..9355
                  Ident@9352..9355 "fun"
                FuncArgs@9355..9360
                  LParen@9355..9356 "("
                  VarArgExpr@9356..9359
                    TDot@9356..9359 "..."
                  RParen@9359..9360 ")"
          Then@9360..9364 "then"
          StmtList@9364..9383
            ReturnStmt@9364..9383
              Return@9364..9370 "return"
              ExprList@9370..9383
                Ident@9370..9377
                  Ident@9370..9377 "state_x"
                Comma@9377..9378 ","
                LiteralExpr@9378..9383
                  False@9378..9383 "false"
          End@9383..9386 "end"
        ReturnStmt@9386..9408
          Return@9386..9392 "return"
          ExprList@9392..9408
            Ident@9392..9399
              Ident@9392..9399 "state_x"
            Comma@9399..9400 ","
            LiteralExpr@9400..9404
              True@9400..9404 "true"
            Comma@9404..9405 ","
            VarArgExpr@9405..9408
              TDot@9405..9408 "..."
      End@9408..9411 "end"
  DeclStmt@9411..9742
    Local@9411..9416 "local"
    DeclTarget@9416..9426
      Ident@9416..9426 "drop_while"
    Assign@9426..9427 "="
    FuncExpr@9427..9742
      Function@9427..9435 "function"
      FuncArgs@9435..9462
        LParen@9435..9436 "("
        Ident@9436..9439 "fun"
        Comma@9439..9440 ","
        Ident@9440..9445 "gen_x"
        Comma@9445..9446 ","
        Ident@9446..9453 "param_x"
        Comma@9453..9454 ","
        Ident@9454..9461 "state_x"
        RParen@9461..9462 ")"
      StmtList@9462..9739
        FuncCall@9462..9530
          Ident@9462..9468
            Ident@9462..9468 "assert"
          FuncArgs@9468..9530
            LParen@9468..9469 "("
            BinOp@9469..9490
              FuncCall@9469..9478
                Ident@9469..9473
                  Ident@9469..9473 "type"
                FuncArgs@9473..9478
                  LParen@9473..9474 "("
                  Ident@9474..9477
                    Ident@9474..9477 "fun"
                  RParen@9477..9478 ")"
              Eq@9478..9480 "=="
              LiteralExpr@9480..9490
                String@9480..9490 "\"function\""
            Comma@9490..9491 ","
            LiteralExpr@9491..9529
              String@9491..9529 "\"invalid first argume ..."
            RParen@9529..9530 ")"
        DeclStmt@9530..9552
          Local@9530..9535 "local"
          DeclTarget@9535..9539
            Ident@9535..9539 "cont"
          Comma@9539..9540 ","
          DeclTarget@9540..9552
            Ident@9540..9552 "state_x_prev"
        RepeatStmt@9552..9653
          Repeat@9552..9558 "repeat"
          StmtList@9558..9641
            AssignStmt@9558..9588
              Ident@9558..9570
                Ident@9558..9570 "state_x_prev"
              Assign@9570..9571 "="
              FuncCall@9571..9588
                Ident@9571..9579
                  Ident@9571..9579 "deepcopy"
                FuncArgs@9579..9588
                  LParen@9579..9580 "("
                  Ident@9580..9587
                    Ident@9580..9587 "state_x"
                  RParen@9587..9588 ")"
            AssignStmt@9588..9641
              Ident@9588..9595
                Ident@9588..9595 "state_x"
              Comma@9595..9596 ","
              Ident@9596..9600
                Ident@9596..9600 "cont"
              Assign@9600..9601 "="
              FuncCall@9601..9641
                Ident@9601..9613
                  Ident@9601..9613 "drop_while_x"
                FuncArgs@9613..9641
                  LParen@9613..9614 "("
                  Ident@9614..9617
                    Ident@9614..9617 "fun"
                  Comma@9617..9618 ","
                  FuncCall@9618..9640
                    Ident@9618..9623
                      Ident@9618..9623 "gen_x"
                    FuncArgs@9623..9640
                      LParen@9623..9624 "("
                      Ident@9624..9631
                        Ident@9624..9631 "param_x"
                      Comma@9631..9632 ","
                      Ident@9632..9639
                        Ident@9632..9639 "state_x"
                      RParen@9639..9640 ")"
                  RParen@9640..9641 ")"
          Until@9641..9646 "until"
          PrefixOp@9646..9653
            Not@9646..9649 "not"
            Ident@9649..9653
              Ident@9649..9653 "cont"
        IfStmt@9653..9701
          If@9653..9655 "if"
          BinOp@9655..9667
            Ident@9655..9662
              Ident@9655..9662 "state_x"
            Eq@9662..9664 "=="
            LiteralExpr@9664..9667
              Nil@9664..9667 "nil"
          Then@9667..9671 "then"
          StmtList@9671..9698
            ReturnStmt@9671..9698
              Return@9671..9677 "return"
              FuncCall@9677..9698
                Ident@9677..9681
                  Ident@9677..9681 "wrap"
                FuncArgs@9681..9698
                  LParen@9681..9682 "("
                  Ident@9682..9689
                    Ident@9682..9689 "nil_gen"
                  Comma@9689..9690 ","
                  LiteralExpr@9690..9693
                    Nil@9690..9693 "nil"
                  Comma@9693..9694 ","
                  LiteralExpr@9694..9697
                    Nil@9694..9697 "nil"
                  RParen@9697..9698 ")"
          End@9698..9701 "end"
        ReturnStmt@9701..9739
          Return@9701..9707 "return"
          FuncCall@9707..9739
            Ident@9707..9711
              Ident@9707..9711 "wrap"
            FuncArgs@9711..9739
              LParen@9711..9712 "("
              Ident@9712..9717
                Ident@9712..9717 "gen_x"
              Comma@9717..9718 ","
              Ident@9718..9725
                Ident@9718..9725 "param_x"
              Comma@9725..9726 ","
              Ident@9726..9738
                Ident@9726..9738 "state_x_prev"
              RParen@9738..9739 ")"
      End@9739..9742 "end"
  AssignStmt@9742..9780
    BinOp@9742..9760
      Ident@9742..9749
        Ident@9742..9749 "methods"
      Dot@9749..9750 "."
      Ident@9750..9760
        Ident@9750..9760 "drop_while"
    Assign@9760..9761 "="
    FuncCall@9761..9780
      Ident@9761..9768
        Ident@9761..9768 "method1"
      FuncArgs@9768..9780
        LParen@9768..9769 "("
        Ident@9769..9779
          Ident@9769..9779 "drop_while"
        RParen@9779..9780 ")"
  AssignStmt@9780..9818
    BinOp@9780..9798
      Ident@9780..9787
        Ident@9780..9787 "exports"
      Dot@9787..9788 "."
      Ident@9788..9798
        Ident@9788..9798 "drop_while"
    Assign@9798..9799 "="
    FuncCall@9799..9818
      Ident@9799..9806
        Ident@9799..9806 "export1"
      FuncArgs@9806..9818
        LParen@9806..9807 "("
        Ident@9807..9817
          Ident@9807..9817 "drop_while"
        RParen@9817..9818 ")"
  DeclStmt@9818..10000
    Local@9818..9823 "local"
    DeclTarget@9823..9827
      Ident@9823..9827 "drop"
    Assign@9827..9828 "="
    FuncExpr@9828..10000
      Function@9828..9836 "function"
      FuncArgs@9836..9868
        LParen@9836..9837 "("
        Ident@9837..9845 "n_or_fun"
        Comma@9845..9846 ","
        Ident@9846..9851 "gen_x"
        Comma@9851..9852 ","
        Ident@9852..9859 "param_x"
        Comma@9859..9860 ","
        Ident@9860..9867 "state_x"
        RParen@9867..9868 ")"
      StmtList@9868..9997
        IfStmt@9868..9997
          If@9868..9870 "if"
          BinOp@9870..9894
            FuncCall@9870..9884
              Ident@9870..9874
                Ident@9870..9874 "type"
              FuncArgs@9874..9884
                LParen@9874..9875 "("
                Ident@9875..9883
                  Ident@9875..9883 "n_or_fun"
                RParen@9883..9884 ")"
            Eq@9884..9886 "=="
            LiteralExpr@9886..9894
              String@9886..9894 "\"number\""
          Then@9894..9898 "then"
          StmtList@9898..9942
            ReturnStmt@9898..9942
              Return@9898..9904 "return"
              FuncCall@9904..9942
                Ident@9904..9910
                  Ident@9904..9910 "drop_n"
                FuncArgs@9910..9942
                  LParen@9910..9911 "("
                  Ident@9911..9919
                    Ident@9911..9919 "n_or_fun"
                  Comma@9919..9920 ","
                  Ident@9920..9925
                    Ident@9920..9925 "gen_x"
                  Comma@9925..9926 ","
                  Ident@9926..9933
                    Ident@9926..9933 "param_x"
                  Comma@9933..9934 ","
                  Ident@9934..9941
                    Ident@9934..9941 "state_x"
                  RParen@9941..9942 ")"
          ElseChain@9942..9997
            Else@9942..9946 "else"
            StmtList@9946..9994
              ReturnStmt@9946..9994
                Return@9946..9952 "return"
                FuncCall@9952..9994
                  Ident@9952..9962
                    Ident@9952..9962 "drop_while"
                  FuncArgs@9962..9994
                    LParen@9962..9963 "("
                    Ident@9963..9971
                      Ident@9963..9971 "n_or_fun"
                    Comma@9971..9972 ","
                    Ident@9972..9977
                      Ident@9972..9977 "gen_x"
                    Comma@9977..9978 ","
                    Ident@9978..9985
                      Ident@9978..9985 "param_x"
                    Comma@9985..9986 ","
                    Ident@9986..9993
                      Ident@9986..9993 "state_x"
                    RParen@9993..9994 ")"
            End@9994..9997 "end"
      End@9997..10000 "end"
  AssignStmt@10000..10026
    BinOp@10000..10012
      Ident@10000..10007
        Ident@10000..10007 "methods"
      Dot@10007..10008 "."
      Ident@10008..10012
        Ident@10008..10012 "drop"
    Assign@10012..10013 "="
    FuncCall@10013..10026
      Ident@10013..10020
        Ident@10013..10020 "method1"
      FuncArgs@10020..10026
        LParen@10020..10021 "("
        Ident@10021..10025
          Ident@10021..10025 "drop"
        RParen@10025..10026 ")"
  AssignStmt@10026..10052
    BinOp@10026..10038
      Ident@10026..10033
        Ident@10026..10033 "exports"
      Dot@10033..10034 "."
      Ident@10034..10038
        Ident@10034..10038 "drop"
    Assign@10038..10039 "="
    FuncCall@10039..10052
      Ident@10039..10046
        Ident@10039..10046 "export1"
      FuncArgs@10046..10052
        LParen@10046..10047 "("
        Ident@10047..10051
          Ident@10047..10051 "drop"
        RParen@10051..10052 ")"
  DeclStmt@10052..10185
    Local@10052..10057 "local"
    DeclTarget@10057..10062
      Ident@10057..10062 "split"
    Assign@10062..10063 "="
    FuncExpr@10063..10185
      Function@10063..10071 "function"
      FuncArgs@10071..10103
        LParen@10071..10072 "("
        Ident@10072..10080 "n_or_fun"
        Comma@10080..10081 ","
        Ident@10081..10086 "gen_x"
        Comma@10086..10087 ","
        Ident@10087..10094 "param_x"
        Comma@10094..10095 ","
        Ident@10095..10102 "state_x"
        RParen@10102..10103 ")"
      StmtList@10103..10182
        ReturnStmt@10103..10182
          Return@10103..10109 "return"
          ExprList@10109..10182
            FuncCall@10109..10145
              Ident@10109..10113
                Ident@10109..10113 "take"
              FuncArgs@10113..10145
                LParen@10113..10114 "("
                Ident@10114..10122
                  Ident@10114..10122 "n_or_fun"
                Comma@10122..10123 ","
                Ident@10123..10128
                  Ident@10123..10128 "gen_x"
                Comma@10128..10129 ","
                Ident@10129..10136
                  Ident@10129..10136 "param_x"
                Comma@10136..10137 ","
                Ident@10137..10144
                  Ident@10137..10144 "state_x"
                RParen@10144..10145 ")"
            Comma@10145..10146 ","
            FuncCall@10146..10182
              Ident@10146..10150
                Ident@10146..10150 "drop"
              FuncArgs@10150..10182
                LParen@10150..10151 "("
                Ident@10151..10159
                  Ident@10151..10159 "n_or_fun"
                Comma@10159..10160 ","
                Ident@10160..10165
                  Ident@10160..10165 "gen_x"
                Comma@10165..10166 ","
                Ident@10166..10173
                  Ident@10166..10173 "param_x"
                Comma@10173..10174 ","
                Ident@10174..10181
                  Ident@10174..10181 "state_x"
                RParen@10181..10182 ")"
      End@10182..10185 "end"
  AssignStmt@10185..10213
    BinOp@10185..10198
      Ident@10185..10192
        Ident@10185..10192 "methods"
      Dot@10192..10193 "."
      Ident@10193..10198
        Ident@10193..10198 "split"
    Assign@10198..10199 "="
    FuncCall@10199..10213
      Ident@10199..10206
        Ident@10199..10206 "method1"
      FuncArgs@10206..10213
        LParen@10206..10207 "("
        Ident@10207..10212
          Ident@10207..10212 "split"
        RParen@10212..10213 ")"
  AssignStmt@10213..10241
    BinOp@10213..10226
      Ident@10213..10220
        Ident@10213..10220 "exports"
      Dot@10220..10221 "."
      Ident@10221..10226
        Ident@10221..10226 "split"
    Assign@10226..10227 "="
    FuncCall@10227..10241
      Ident@10227..10234
        Ident@10227..10234 "export1"
      FuncArgs@10234..10241
        LParen@10234..10235 "("
        Ident@10235..10240
          Ident@10235..10240 "split"
        RParen@10240..10241 ")"
  AssignStmt@10241..10271
    BinOp@10241..10257
      Ident@10241..10248
        Ident@10241..10248 "methods"
      Dot@10248..10249 "."
      Ident@10249..10257
        Ident@10249..10257 "split_at"
    Assign@10257..10258 "="
    BinOp@10258..10271
      Ident@10258..10265
        Ident@10258..10265 "methods"
      Dot@10265..10266 "."
      Ident@10266..10271
        Ident@10266..10271 "split"
  AssignStmt@10271..10301
    BinOp@10271..10287
      Ident@10271..10278
        Ident@10271..10278 "exports"
      Dot@10278..10279 "."
      Ident@10279..10287
        Ident@10279..10287 "split_at"
    Assign@10287..10288 "="
    BinOp@10288..10301
      Ident@10288..10295
        Ident@10288..10295 "exports"
      Dot@10295..10296 "."
      Ident@10296..10301
        Ident@10296..10301 "split"
  AssignStmt@10301..10327
    BinOp@10301..10313
      Ident@10301..10308
        Ident@10301..10308 "methods"
      Dot@10308..10309 "."
      Ident@10309..10313
        Ident@10309..10313 "span"
    Assign@10313..10314 "="
    BinOp@10314..10327
      Ident@10314..10321
        Ident@10314..10321 "methods"
      Dot@10321..10322 "."
      Ident@10322..10327
        Ident@10322..10327 "split"
  AssignStmt@10327..10353
    BinOp@10327..10339
      Ident@10327..10334
        Ident@10327..10334 "exports"
      Dot@10334..10335 "."
      Ident@10335..10339
        Ident@10335..10339 "span"
    Assign@10339..10340 "="
    BinOp@10340..10353
      Ident@10340..10347
        Ident@10340..10347 "exports"
      Dot@10347..10348 "."
      Ident@10348..10353
        Ident@10348..10353 "split"
  DeclStmt@10353..10465
    Local@10353..10358 "local"
    DeclTarget@10358..10363
      Ident@10358..10363 "index"
    Assign@10363..10364 "="
    FuncExpr@10364..10465
      Function@10364..10372 "function"
      FuncArgs@10372..10391
        LParen@10372..10373 "("
        Ident@10373..10374 "x"
        Comma@10374..10375 ","
        Ident@10375..10378 "gen"
        Comma@10378..10379 ","
        Ident@10379..10384 "param"
        Comma@10384..10385 ","
        Ident@10385..10390 "state"
        RParen@10390..10391 ")"
      StmtList@10391..10462
        DeclStmt@10391..10399
          Local@10391..10396 "local"
          DeclTarget@10396..10397
            Ident@10396..10397 "i"
          Assign@10397..10398 "="
          LiteralExpr@10398..10399
            Int@10398..10399 "1"
        ForGenStmt@10399..10453
          For@10399..10402 "for"
          Ident@10402..10404 "_k"
          Comma@10404..10405 ","
          Ident@10405..10406 "r"
          In@10406..10408 "in"
          ExprList@10408..10423
            Ident@10408..10411
              Ident@10408..10411 "gen"
            Comma@10411..10412 ","
            Ident@10412..10417
              Ident@10412..10417 "param"
            Comma@10417..10418 ","
            Ident@10418..10423
              Ident@10418..10423 "state"
          BlockStmt@10423..10453
            Do@10423..10425 "do"
            StmtList@10425..10450
              IfStmt@10425..10445
                If@10425..10427 "if"
                BinOp@10427..10431
                  Ident@10427..10428
                    Ident@10427..10428 "r"
                  Eq@10428..10430 "=="
                  Ident@10430..10431
                    Ident@10430..10431 "x"
                Then@10431..10435 "then"
                StmtList@10435..10442
                  ReturnStmt@10435..10442
                    Return@10435..10441 "return"
                    Ident@10441..10442
                      Ident@10441..10442 "i"
                End@10442..10445 "end"
              AssignStmt@10445..10450
                Ident@10445..10446
                  Ident@10445..10446 "i"
                Assign@10446..10447 "="
                BinOp@10447..10450
                  Ident@10447..10448
                    Ident@10447..10448 "i"
                  Plus@10448..10449 "+"
                  LiteralExpr@10449..10450
                    Int@10449..10450 "1"
            End@10450..10453 "end"
        ReturnStmt@10453..10462
          Return@10453..10459 "return"
          LiteralExpr@10459..10462
            Nil@10459..10462 "nil"
      End@10462..10465 "end"
  AssignStmt@10465..10493
    BinOp@10465..10478
      Ident@10465..10472
        Ident@10465..10472 "methods"
      Dot@10472..10473 "."
      Ident@10473..10478
        Ident@10473..10478 "index"
    Assign@10478..10479 "="
    FuncCall@10479..10493
      Ident@10479..10486
        Ident@10479..10486 "method1"
      FuncArgs@10486..10493
        LParen@10486..10487 "("
        Ident@10487..10492
          Ident@10487..10492 "index"
        RParen@10492..10493 ")"
  AssignStmt@10493..10521
    BinOp@10493..10506
      Ident@10493..10500
        Ident@10493..10500 "exports"
      Dot@10500..10501 "."
      Ident@10501..10506
        Ident@10501..10506 "index"
    Assign@10506..10507 "="
    FuncCall@10507..10521
      Ident@10507..10514
        Ident@10507..10514 "export1"
      FuncArgs@10514..10521
        LParen@10514..10515 "("
        Ident@10515..10520
          Ident@10515..10520 "index"
        RParen@10520..10521 ")"
  AssignStmt@10521..10551
    BinOp@10521..10537
      Ident@10521..10528
        Ident@10521..10528 "methods"
      Dot@10528..10529 "."
      Ident@10529..10537
        Ident@10529..10537 "index_of"
    Assign@10537..10538 "="
    BinOp@10538..10551
      Ident@10538..10545
        Ident@10538..10545 "methods"
      Dot@10545..10546 "."
      Ident@10546..10551
        Ident@10546..10551 "index"
  AssignStmt@10551..10581
    BinOp@10551..10567
      Ident@10551..10558
        Ident@10551..10558 "exports"
      Dot@10558..10559 "."
      Ident@10559..10567
        Ident@10559..10567 "index_of"
    Assign@10567..10568 "="
    BinOp@10568..10581
      Ident@10568..10575
        Ident@10568..10575 "exports"
      Dot@10575..10576 "."
      Ident@10576..10581
        Ident@10576..10581 "index"
  AssignStmt@10581..10613
    BinOp@10581..10599
      Ident@10581..10588
        Ident@10581..10588 "methods"
      Dot@10588..10589 "."
      Ident@10589..10599
        Ident@10589..10599 "elem_index"
    Assign@10599..10600 "="
    BinOp@10600..10613
      Ident@10600..10607
        Ident@10600..10607 "methods"
      Dot@10607..10608 "."
      Ident@10608..10613
        Ident@10608..10613 "index"
  AssignStmt@10613..10645
    BinOp@10613..10631
      Ident@10613..10620
        Ident@10613..10620 "exports"
      Dot@10620..10621 "."
      Ident@10621..10631
        Ident@10621..10631 "elem_index"
    Assign@10631..10632 "="
    BinOp@10632..10645
      Ident@10632..10639
        Ident@10632..10639 "exports"
      Dot@10639..10640 "."
      Ident@10640..10645
        Ident@10640..10645 "index"
  DeclStmt@10645..10884
    Local@10645..10650 "local"
    DeclTarget@10650..10661
      Ident@10650..10661 "indexes_gen"
    Assign@10661..10662 "="
    FuncExpr@10662..10884
      Function@10662..10670 "function"
      FuncArgs@10670..10683
        LParen@10670..10671 "("
        Ident@10671..10676 "param"
        Comma@10676..10677 ","
        Ident@10677..10682 "state"
        RParen@10682..10683 ")"
      StmtList@10683..10881
        DeclStmt@10683..10730
          Local@10683..10688 "local"
          DeclTarget@10688..10689
            Ident@10688..10689 "x"
          Comma@10689..10690 ","
          DeclTarget@10690..10695
            Ident@10690..10695 "gen_x"
          Comma@10695..10696 ","
          DeclTarget@10696..10703
            Ident@10696..10703 "param_x"
          Assign@10703..10704 "="
          ExprList@10704..10730
            Index@10704..10712
              Ident@10704..10709
                Ident@10704..10709 "param"
              LBracket@10709..10710 "["
              LiteralExpr@10710..10711
                Int@10710..10711 "1"
              RBracket@10711..10712 "]"
            Comma@10712..10713 ","
            Index@10713..10721
              Ident@10713..10718
                Ident@10713..10718 "param"
              LBracket@10718..10719 "["
              LiteralExpr@10719..10720
                Int@10719..10720 "2"
              RBracket@10720..10721 "]"
            Comma@10721..10722 ","
            Index@10722..10730
              Ident@10722..10727
                Ident@10722..10727 "param"
              LBracket@10727..10728 "["
              LiteralExpr@10728..10729
                Int@10728..10729 "3"
              RBracket@10729..10730 "]"
        DeclStmt@10730..10762
          Local@10730..10735 "local"
          DeclTarget@10735..10736
            Ident@10735..10736 "i"
          Comma@10736..10737 ","
          DeclTarget@10737..10744
            Ident@10737..10744 "state_x"
          Assign@10744..10745 "="
          ExprList@10745..10762
            Index@10745..10753
              Ident@10745..10750
                Ident@10745..10750 "state"
              LBracket@10750..10751 "["
              LiteralExpr@10751..10752
                Int@10751..10752 "1"
              RBracket@10752..10753 "]"
            Comma@10753..10754 ","
            Index@10754..10762
              Ident@10754..10759
                Ident@10754..10759 "state"
              LBracket@10759..10760 "["
              LiteralExpr@10760..10761
                Int@10760..10761 "2"
              RBracket@10761..10762 "]"
        DeclStmt@10762..10768
          Local@10762..10767 "local"
          DeclTarget@10767..10768
            Ident@10767..10768 "r"
        WhileStmt@10768..10881
          While@10768..10773 "while"
          LiteralExpr@10773..10777
            True@10773..10777 "true"
          BlockStmt@10777..10881
            Do@10777..10779 "do"
            StmtList@10779..10878
              AssignStmt@10779..10811
                Ident@10779..10786
                  Ident@10779..10786 "state_x"
                Comma@10786..10787 ","
                Ident@10787..10788
                  Ident@10787..10788 "r"
                Assign@10788..10789 "="
                FuncCall@10789..10811
                  Ident@10789..10794
                    Ident@10789..10794 "gen_x"
                  FuncArgs@10794..10811
                    LParen@10794..10795 "("
                    Ident@10795..10802
                      Ident@10795..10802 "param_x"
                    Comma@10802..10803 ","
                    Ident@10803..10810
                      Ident@10803..10810 "state_x"
                    RParen@10810..10811 ")"
              IfStmt@10811..10841
                If@10811..10813 "if"
                BinOp@10813..10825
                  Ident@10813..10820
                    Ident@10813..10820 "state_x"
                  Eq@10820..10822 "=="
                  LiteralExpr@10822..10825
                    Nil@10822..10825 "nil"
                Then@10825..10829 "then"
                StmtList@10829..10838
                  ReturnStmt@10829..10838
                    Return@10829..10835 "return"
                    LiteralExpr@10835..10838
                      Nil@10835..10838 "nil"
                End@10838..10841 "end"
              AssignStmt@10841..10846
                Ident@10841..10842
                  Ident@10841..10842 "i"
                Assign@10842..10843 "="
                BinOp@10843..10846
                  Ident@10843..10844
                    Ident@10843..10844 "i"
                  Plus@10844..10845 "+"
                  LiteralExpr@10845..10846
                    Int@10845..10846 "1"
              IfStmt@10846..10878
                If@10846..10848 "if"
                BinOp@10848..10852
                  Ident@10848..10849
                    Ident@10848..10849 "r"
                  Eq@10849..10851 "=="
                  Ident@10851..10852
                    Ident@10851..10852 "x"
                Then@10852..10856 "then"
                StmtList@10856..10875
                  ReturnStmt@10856..10875
                    Return@10856..10862 "return"
                    ExprList@10862..10875
                      TableExpr@10862..10873
                        LCurly@10862..10863 "{"
                        TableArrayElem@10863..10864
                          Ident@10863..10864
                            Ident@10863..10864 "i"
                        Comma@10864..10865 ","
                        TableArrayElem@10865..10872
                          Ident@10865..10872
                            Ident@10865..10872 "state_x"
                        RCurly@10872..10873 "}"
                      Comma@10873..10874 ","
                      Ident@10874..10875
                        Ident@10874..10875 "i"
                End@10875..10878 "end"
            End@10878..10881 "end"
      End@10881..10884 "end"
  DeclStmt@10884..10974
    Local@10884..10889 "local"
    DeclTarget@10889..10896
      Ident@10889..10896 "indexes"
    Assign@10896..10897 "="
    FuncExpr@10897..10974
      Function@10897..10905 "function"
      FuncArgs@10905..10924
        LParen@10905..10906 "("
        Ident@10906..10907 "x"
        Comma@10907..10908 ","
        Ident@10908..10911 "gen"
        Comma@10911..10912 ","
        Ident@10912..10917 "param"
        Comma@10917..10918 ","
        Ident@10918..10923 "state"
        RParen@10923..10924 ")"
      StmtList@10924..10971
        ReturnStmt@10924..10971
          Return@10924..10930 "return"
          FuncCall@10930..10971
            Ident@10930..10934
              Ident@10930..10934 "wrap"
            FuncArgs@10934..10971
              LParen@10934..10935 "("
              Ident@10935..10946
                Ident@10935..10946 "indexes_gen"
              Comma@10946..10947 ","
              TableExpr@10947..10960
                LCurly@10947..10948 "{"
                TableArrayElem@10948..10949
                  Ident@10948..10949
                    Ident@10948..10949 "x"
                Comma@10949..10950 ","
                TableArrayElem@10950..10953
                  Ident@10950..10953
                    Ident@10950..10953 "gen"
                Comma@10953..10954 ","
                TableArrayElem@10954..10959
                  Ident@10954..10959
                    Ident@10954..10959 "param"
                RCurly@10959..10960 "}"
              Comma@10960..10961 ","
              TableExpr@10961..10970
                LCurly@10961..10962 "{"
                TableArrayElem@10962..10963
                  LiteralExpr@10962..10963
                    Int@10962..10963 "0"
                Comma@10963..10964 ","
                TableArrayElem@10964..10969
                  Ident@10964..10969
                    Ident@10964..10969 "state"
                RCurly@10969..10970 "}"
              RParen@10970..10971 ")"
      End@10971..10974 "end"
  AssignStmt@10974..11006
    BinOp@10974..10989
      Ident@10974..10981
        Ident@10974..10981 "methods"
      Dot@10981..10982 "."
      Ident@10982..10989
        Ident@10982..10989 "indexes"
    Assign@10989..10990 "="
    FuncCall@10990..11006
      Ident@10990..10997
        Ident@10990..10997 "method1"
      FuncArgs@10997..11006
        LParen@10997..10998 "("
        Ident@10998..11005
          Ident@10998..11005 "indexes"
        RParen@11005..11006 ")"
  AssignStmt@11006..11038
    BinOp@11006..11021
      Ident@11006..11013
        Ident@11006..11013 "exports"
      Dot@11013..11014 "."
      Ident@11014..11021
        Ident@11014..11021 "indexes"
    Assign@11021..11022 "="
    FuncCall@11022..11038
      Ident@11022..11029
        Ident@11022..11029 "export1"
      FuncArgs@11029..11038
        LParen@11029..11030 "("
        Ident@11030..11037
          Ident@11030..11037 "indexes"
        RParen@11037..11038 ")"
  AssignStmt@11038..11074
    BinOp@11038..11058
      Ident@11038..11045
        Ident@11038..11045 "methods"
      Dot@11045..11046 "."
      Ident@11046..11058
        Ident@11046..11058 "elem_indexes"
    Assign@11058..11059 "="
    BinOp@11059..11074
      Ident@11059..11066
        Ident@11059..11066 "methods"
      Dot@11066..11067 "."
      Ident@11067..11074
        Ident@11067..11074 "indexes"
  AssignStmt@11074..11110
    BinOp@11074..11094
      Ident@11074..11081
        Ident@11074..11081 "exports"
      Dot@11081..11082 "."
      Ident@11082..11094
        Ident@11082..11094 "elem_indexes"
    Assign@11094..11095 "="
    BinOp@11095..11110
      Ident@11095..11102
        Ident@11095..11102 "exports"
      Dot@11102..11103 "."
      Ident@11103..11110
        Ident@11103..11110 "indexes"
  AssignStmt@11110..11141
    BinOp@11110..11125
      Ident@11110..11117
        Ident@11110..11117 "methods"
      Dot@11117..11118 "."
      Ident@11118..11125
        Ident@11118..11125 "indices"
    Assign@11125..11126 "="
    BinOp@11126..11141
      Ident@11126..11133
        Ident@11126..11133 "methods"
      Dot@11133..11134 "."
      Ident@11134..11141
        Ident@11134..11141 "indexes"
  AssignStmt@11141..11172
    BinOp@11141..11156
      Ident@11141..11148
        Ident@11141..11148 "exports"
      Dot@11148..11149 "."
      Ident@11149..11156
        Ident@11149..11156 "indices"
    Assign@11156..11157 "="
    BinOp@11157..11172
      Ident@11157..11164
        Ident@11157..11164 "exports"
      Dot@11164..11165 "."
      Ident@11165..11172
        Ident@11165..11172 "indexes"
  AssignStmt@11172..11208
    BinOp@11172..11192
      Ident@11172..11179
        Ident@11172..11179 "methods"
      Dot@11179..11180 "."
      Ident@11180..11192
        Ident@11180..11192 "elem_indices"
    Assign@11192..11193 "="
    BinOp@11193..11208
      Ident@11193..11200
        Ident@11193..11200 "methods"
      Dot@11200..11201 "."
      Ident@11201..11208
        Ident@11201..11208 "indexes"
  AssignStmt@11208..11244
    BinOp@11208..11228
      Ident@11208..11215
        Ident@11208..11215 "exports"
      Dot@11215..11216 "."
      Ident@11216..11228
        Ident@11216..11228 "elem_indices"
    Assign@11228..11229 "="
    BinOp@11229..11244
      Ident@11229..11236
        Ident@11229..11236 "exports"
      Dot@11236..11237 "."
      Ident@11237..11244
        Ident@11237..11244 "indexes"
  DeclStmt@11244..11397
    Local@11244..11249 "local"
    DeclTarget@11249..11260
      Ident@11249..11260 "filter1_gen"
    Assign@11260..11261 "="
    FuncExpr@11261..11397
      Function@11261..11269 "function"
      FuncArgs@11269..11298
        LParen@11269..11270 "("
        Ident@11270..11273 "fun"
        Comma@11273..11274 ","
        Ident@11274..11279 "gen_x"
        Comma@11279..11280 ","
        Ident@11280..11287 "param_x"
        Comma@11287..11288 ","
        Ident@11288..11295 "state_x"
        Comma@11295..11296 ","
        Ident@11296..11297 "a"
        RParen@11297..11298 ")"
      StmtList@11298..11394
        WhileStmt@11298..11379
          While@11298..11303 "while"
          LiteralExpr@11303..11307
            True@11303..11307 "true"
          BlockStmt@11307..11379
            Do@11307..11309 "do"
            StmtList@11309..11376
              IfStmt@11309..11344
                If@11309..11311 "if"
                BinOp@11311..11331
                  BinOp@11311..11323
                    Ident@11311..11318
                      Ident@11311..11318 "state_x"
                    Eq@11318..11320 "=="
                    LiteralExpr@11320..11323
                      Nil@11320..11323 "nil"
                  Or@11323..11325 "or"
                  FuncCall@11325..11331
                    Ident@11325..11328
                      Ident@11325..11328 "fun"
                    FuncArgs@11328..11331
                      LParen@11328..11329 "("
                      Ident@11329..11330
                        Ident@11329..11330 "a"
                      RParen@11330..11331 ")"
                Then@11331..11335 "then"
                StmtList@11335..11341
                  BreakStmt@11335..11340
                    Break@11335..11340 "break"
                  Semicolon@11340..11341
                    Semicolon@11340..11341 ";"
                End@11341..11344 "end"
              AssignStmt@11344..11376
                Ident@11344..11351
                  Ident@11344..11351 "state_x"
                Comma@11351..11352 ","
                Ident@11352..11353
                  Ident@11352..11353 "a"
                Assign@11353..11354 "="
                FuncCall@11354..11376
                  Ident@11354..11359
                    Ident@11354..11359 "gen_x"
                  FuncArgs@11359..11376
                    LParen@11359..11360 "("
                    Ident@11360..11367
                      Ident@11360..11367 "param_x"
                    Comma@11367..11368 ","
                    Ident@11368..11375
                      Ident@11368..11375 "state_x"
                    RParen@11375..11376 ")"
            End@11376..11379 "end"
        ReturnStmt@11379..11394
          Return@11379..11385 "return"
          ExprList@11385..11394
            Ident@11385..11392
              Ident@11385..11392 "state_x"
            Comma@11392..11393 ","
            Ident@11393..11394
              Ident@11393..11394 "a"
      End@11394..11397 "end"
  DeclStmt@11397..11413
    Local@11397..11402 "local"
    DeclTarget@11402..11413
      Ident@11402..11413 "filterm_gen"
  DeclStmt@11413..11534
    Local@11413..11418 "local"
    DeclTarget@11418..11436
      Ident@11418..11436 "filterm_gen_shrink"
    Assign@11436..11437 "="
    FuncExpr@11437..11534
      Function@11437..11445 "function"
      FuncArgs@11445..11472
        LParen@11445..11446 "("
        Ident@11446..11449 "fun"
        Comma@11449..11450 ","
        Ident@11450..11455 "gen_x"
        Comma@11455..11456 ","
        Ident@11456..11463 "param_x"
        Comma@11463..11464 ","
        Ident@11464..11471 "state_x"
        RParen@11471..11472 ")"
      StmtList@11472..11531
        ReturnStmt@11472..11531
          Return@11472..11478 "return"
          FuncCall@11478..11531
            Ident@11478..11489
              Ident@11478..11489 "filterm_gen"
            FuncArgs@11489..11531
              LParen@11489..11490 "("
              Ident@11490..11493
                Ident@11490..11493 "fun"
              Comma@11493..11494 ","
              Ident@11494..11499
                Ident@11494..11499 "gen_x"
              Comma@11499..11500 ","
              Ident@11500..11507
                Ident@11500..11507 "param_x"
              Comma@11507..11508 ","
              FuncCall@11508..11530
                Ident@11508..11513
                  Ident@11508..11513 "gen_x"
                FuncArgs@11513..11530
                  LParen@11513..11514 "("
                  Ident@11514..11521
                    Ident@11514..11521 "param_x"
                  Comma@11521..11522 ","
                  Ident@11522..11529
                    Ident@11522..11529 "state_x"
                  RParen@11529..11530 ")"
              RParen@11530..11531 ")"
      End@11531..11534 "end"
  AssignStmt@11534..11703
    Ident@11534..11545
      Ident@11534..11545 "filterm_gen"
    Assign@11545..11546 "="
    FuncExpr@11546..11703
      Function@11546..11554 "function"
      FuncArgs@11554..11585
        LParen@11554..11555 "("
        Ident@11555..11558 "fun"
        Comma@11558..11559 ","
        Ident@11559..11564 "gen_x"
        Comma@11564..11565 ","
        Ident@11565..11572 "param_x"
        Comma@11572..11573 ","
        Ident@11573..11580 "state_x"
        Comma@11580..11581 ","
        TDot@11581..11584 "..."
        RParen@11584..11585 ")"
      StmtList@11585..11700
        IfStmt@11585..11615
          If@11585..11587 "if"
          BinOp@11587..11599
            Ident@11587..11594
              Ident@11587..11594 "state_x"
            Eq@11594..11596 "=="
            LiteralExpr@11596..11599
              Nil@11596..11599 "nil"
          Then@11599..11603 "then"
          StmtList@11603..11612
            ReturnStmt@11603..11612
              Return@11603..11609 "return"
              LiteralExpr@11609..11612
                Nil@11609..11612 "nil"
          End@11612..11615 "end"
        IfStmt@11615..11649
          If@11615..11617 "if"
          FuncCall@11617..11625
            Ident@11617..11620
              Ident@11617..11620 "fun"
            FuncArgs@11620..11625
              LParen@11620..11621 "("
              VarArgExpr@11621..11624
                TDot@11621..11624 "..."
              RParen@11624..11625 ")"
          Then@11625..11629 "then"
          StmtList@11629..11646
            ReturnStmt@11629..11646
              Return@11629..11635 "return"
              ExprList@11635..11646
                Ident@11635..11642
                  Ident@11635..11642 "state_x"
                Comma@11642..11643 ","
                VarArgExpr@11643..11646
                  TDot@11643..11646 "..."
          End@11646..11649 "end"
        ReturnStmt@11649..11700
          Return@11649..11655 "return"
          FuncCall@11655..11700
            Ident@11655..11673
              Ident@11655..11673 "filterm_gen_shrink"
            FuncArgs@11673..11700
              LParen@11673..11674 "("
              Ident@11674..11677
                Ident@11674..11677 "fun"
              Comma@11677..11678 ","
              Ident@11678..11683
                Ident@11678..11683 "gen_x"
              Comma@11683..11684 ","
              Ident@11684..11691
                Ident@11684..11691 "param_x"
              Comma@11691..11692 ","
              Ident@11692..11699
                Ident@11692..11699 "state_x"
              RParen@11699..11700 ")"
      End@11700..11703 "end"
  DeclStmt@11703..11890
    Local@11703..11708 "local"
    DeclTarget@11708..11721
      Ident@11708..11721 "filter_detect"
    Assign@11721..11722 "="
    FuncExpr@11722..11890
      Function@11722..11730 "function"
      FuncArgs@11730..11761
        LParen@11730..11731 "("
        Ident@11731..11734 "fun"
        Comma@11734..11735 ","
        Ident@11735..11740 "gen_x"
        Comma@11740..11741 ","
        Ident@11741..11748 "param_x"
        Comma@11748..11749 ","
        Ident@11749..11756 "state_x"
        Comma@11756..11757 ","
        TDot@11757..11760 "..."
        RParen@11760..11761 ")"
      StmtList@11761..11887
        IfStmt@11761..11887
          If@11761..11763 "if"
          BinOp@11763..11780
            FuncCall@11763..11778
              Ident@11763..11769
                Ident@11763..11769 "select"
              FuncArgs@11769..11778
                LParen@11769..11770 "("
                LiteralExpr@11770..11773
                  String@11770..11773 "'#'"
                Comma@11773..11774 ","
                VarArgExpr@11774..11777
                  TDot@11774..11777 "..."
                RParen@11777..11778 ")"
            LAngle@11778..11779 "<"
            LiteralExpr@11779..11780
              Int@11779..11780 "2"
          Then@11780..11784 "then"
          StmtList@11784..11832
            ReturnStmt@11784..11832
              Return@11784..11790 "return"
              FuncCall@11790..11832
                Ident@11790..11801
                  Ident@11790..11801 "filter1_gen"
                FuncArgs@11801..11832
                  LParen@11801..11802 "("
                  Ident@11802..11805
                    Ident@11802..11805 "fun"
                  Comma@11805..11806 ","
                  Ident@11806..11811
                    Ident@11806..11811 "gen_x"
                  Comma@11811..11812 ","
                  Ident@11812..11819
                    Ident@11812..11819 "param_x"
                  Comma@11819..11820 ","
                  Ident@11820..11827
                    Ident@11820..11827 "state_x"
                  Comma@11827..11828 ","
                  VarArgExpr@11828..11831
                    TDot@11828..11831 "..."
                  RParen@11831..11832 ")"
          ElseChain@11832..11887
            Else@11832..11836 "else"
            StmtList@11836..11884
              ReturnStmt@11836..11884
                Return@11836..11842 "return"
                FuncCall@11842..11884
                  Ident@11842..11853
                    Ident@11842..11853 "filterm_gen"
                  FuncArgs@11853..11884
                    LParen@11853..11854 "("
                    Ident@11854..11857
                      Ident@11854..11857 "fun"
                    Comma@11857..11858 ","
                    Ident@11858..11863
                      Ident@11858..11863 "gen_x"
                    Comma@11863..11864 ","
                    Ident@11864..11871
                      Ident@11864..11871 "param_x"
                    Comma@11871..11872 ","
                    Ident@11872..11879
                      Ident@11872..11879 "state_x"
                    Comma@11879..11880 ","
                    VarArgExpr@11880..11883
                      TDot@11880..11883 "..."
                    RParen@11883..11884 ")"
            End@11884..11887 "end"
      End@11887..11890 "end"
  DeclStmt@11890..12042
    Local@11890..11895 "local"
    DeclTarget@11895..11905
      Ident@11895..11905 "filter_gen"
    Assign@11905..11906 "="
    FuncExpr@11906..12042
      Function@11906..11914 "function"
      FuncArgs@11914..11929
        LParen@11914..11915 "("
        Ident@11915..11920 "param"
        Comma@11920..11921 ","
        Ident@11921..11928 "state_x"
        RParen@11928..11929 ")"
      StmtList@11929..12039
        DeclStmt@11929..11978
          Local@11929..11934 "local"
          DeclTarget@11934..11937
            Ident@11934..11937 "fun"
          Comma@11937..11938 ","
          DeclTarget@11938..11943
            Ident@11938..11943 "gen_x"
          Comma@11943..11944 ","
          DeclTarget@11944..11951
            Ident@11944..11951 "param_x"
          Assign@11951..11952 "="
          ExprList@11952..11978
            Index@11952..11960
              Ident@11952..11957
                Ident@11952..11957 "param"
              LBracket@11957..11958 "["
              LiteralExpr@11958..11959
                Int@11958..11959 "1"
              RBracket@11959..11960 "]"
            Comma@11960..11961 ","
            Index@11961..11969
              Ident@11961..11966
                Ident@11961..11966 "param"
              LBracket@11966..11967 "["
              LiteralExpr@11967..11968
                Int@11967..11968 "2"
              RBracket@11968..11969 "]"
            Comma@11969..11970 ","
            Index@11970..11978
              Ident@11970..11975
                Ident@11970..11975 "param"
              LBracket@11975..11976 "["
              LiteralExpr@11976..11977
                Int@11976..11977 "3"
              RBracket@11977..11978 "]"
        ReturnStmt@11978..12039
          Return@11978..11984 "return"
          FuncCall@11984..12039
            Ident@11984..11997
              Ident@11984..11997 "filter_detect"
            FuncArgs@11997..12039
              LParen@11997..11998 "("
              Ident@11998..12001
                Ident@11998..12001 "fun"
              Comma@12001..12002 ","
              Ident@12002..12007
                Ident@12002..12007 "gen_x"
              Comma@12007..12008 ","
              Ident@12008..12015
                Ident@12008..12015 "param_x"
              Comma@12015..12016 ","
              FuncCall@12016..12038
                Ident@12016..12021
                  Ident@12016..12021 "gen_x"
                FuncArgs@12021..12038
                  LParen@12021..12022 "("
                  Ident@12022..12029
                    Ident@12022..12029 "param_x"
                  Comma@12029..12030 ","
                  Ident@12030..12037
                    Ident@12030..12037 "state_x"
                  RParen@12037..12038 ")"
              RParen@12038..12039 ")"
      End@12039..12042 "end"
  DeclStmt@12042..12130
    Local@12042..12047 "local"
    DeclTarget@12047..12053
      Ident@12047..12053 "filter"
    Assign@12053..12054 "="
    FuncExpr@12054..12130
      Function@12054..12062 "function"
      FuncArgs@12062..12083
        LParen@12062..12063 "("
        Ident@12063..12066 "fun"
        Comma@12066..12067 ","
        Ident@12067..12070 "gen"
        Comma@12070..12071 ","
        Ident@12071..12076 "param"
        Comma@12076..12077 ","
        Ident@12077..12082 "state"
        RParen@12082..12083 ")"
      StmtList@12083..12127
        ReturnStmt@12083..12127
          Return@12083..12089 "return"
          FuncCall@12089..12127
            Ident@12089..12093
              Ident@12089..12093 "wrap"
            FuncArgs@12093..12127
              LParen@12093..12094 "("
              Ident@12094..12104
                Ident@12094..12104 "filter_gen"
              Comma@12104..12105 ","
              TableExpr@12105..12120
                LCurly@12105..12106 "{"
                TableArrayElem@12106..12109
                  Ident@12106..12109
                    Ident@12106..12109 "fun"
                Comma@12109..12110 ","
                TableArrayElem@12110..12113
                  Ident@12110..12113
                    Ident@12110..12113 "gen"
                Comma@12113..12114 ","
                TableArrayElem@12114..12119
                  Ident@12114..12119
                    Ident@12114..12119 "param"
                RCurly@12119..12120 "}"
              Comma@12120..12121 ","
              Ident@12121..12126
                Ident@12121..12126 "state"
              RParen@12126..12127 ")"
      End@12127..12130 "end"
  AssignStmt@12130..12160
    BinOp@12130..12144
      Ident@12130..12137
        Ident@12130..12137 "methods"
      Dot@12137..12138 "."
      Ident@12138..12144
        Ident@12138..12144 "filter"
    Assign@12144..12145 "="
    FuncCall@12145..12160
      Ident@12145..12152
        Ident@12145..12152 "method1"
      FuncArgs@12152..12160
        LParen@12152..12153 "("
        Ident@12153..12159
          Ident@12153..12159 "filter"
        RParen@12159..12160 ")"
  AssignStmt@12160..12190
    BinOp@12160..12174
      Ident@12160..12167
        Ident@12160..12167 "exports"
      Dot@12167..12168 "."
      Ident@12168..12174
        Ident@12168..12174 "filter"
    Assign@12174..12175 "="
    FuncCall@12175..12190
      Ident@12175..12182
        Ident@12175..12182 "export1"
      FuncArgs@12182..12190
        LParen@12182..12183 "("
        Ident@12183..12189
          Ident@12183..12189 "filter"
        RParen@12189..12190 ")"
  AssignStmt@12190..12222
    BinOp@12190..12207
      Ident@12190..12197
        Ident@12190..12197 "methods"
      Dot@12197..12198 "."
      Ident@12198..12207
        Ident@12198..12207 "remove_if"
    Assign@12207..12208 "="
    BinOp@12208..12222
      Ident@12208..12215
        Ident@12208..12215 "methods"
      Dot@12215..12216 "."
      Ident@12216..12222
        Ident@12216..12222 "filter"
  AssignStmt@12222..12254
    BinOp@12222..12239
      Ident@12222..12229
        Ident@12222..12229 "exports"
      Dot@12229..12230 "."
      Ident@12230..12239
        Ident@12230..12239 "remove_if"
    Assign@12239..12240 "="
    BinOp@12240..12254
      Ident@12240..12247
        Ident@12240..12247 "exports"
      Dot@12247..12248 "."
      Ident@12248..12254
        Ident@12248..12254 "filter"
  DeclStmt@12254..12456
    Local@12254..12259 "local"
    DeclTarget@12259..12263
      Ident@12259..12263 "grep"
    Assign@12263..12264 "="
    FuncExpr@12264..12456
      Function@12264..12272 "function"
      FuncArgs@12272..12303
        LParen@12272..12273 "("
        Ident@12273..12286 "fun_or_regexp"
        Comma@12286..12287 ","
        Ident@12287..12290 "gen"
        Comma@12290..12291 ","
        Ident@12291..12296 "param"
        Comma@12296..12297 ","
        Ident@12297..12302 "state"
        RParen@12302..12303 ")"
      StmtList@12303..12453
        DeclStmt@12303..12325
          Local@12303..12308 "local"
          DeclTarget@12308..12311
            Ident@12308..12311 "fun"
          Assign@12311..12312 "="
          Ident@12312..12325
            Ident@12312..12325 "fun_or_regexp"
        IfStmt@12325..12420
          If@12325..12327 "if"
          BinOp@12327..12356
            FuncCall@12327..12346
              Ident@12327..12331
                Ident@12327..12331 "type"
              FuncArgs@12331..12346
                LParen@12331..12332 "("
                Ident@12332..12345
                  Ident@12332..12345 "fun_or_regexp"
                RParen@12345..12346 ")"
            Eq@12346..12348 "=="
            LiteralExpr@12348..12356
              String@12348..12356 "\"string\""
          Then@12356..12360 "then"
          StmtList@12360..12417
            AssignStmt@12360..12417
              Ident@12360..12363
                Ident@12360..12363 "fun"
              Assign@12363..12364 "="
              FuncExpr@12364..12417
                Function@12364..12372 "function"
                FuncArgs@12372..12375
                  LParen@12372..12373 "("
                  Ident@12373..12374 "x"
                  RParen@12374..12375 ")"
                StmtList@12375..12414
                  ReturnStmt@12375..12414
                    Return@12375..12381 "return"
                    BinOp@12381..12414
                      FuncCall@12381..12409
                        BinOp@12381..12392
                          Ident@12381..12387
                            Ident@12381..12387 "string"
                          Dot@12387..12388 "."
                          Ident@12388..12392
                            Ident@12388..12392 "find"
                        FuncArgs@12392..12409
                          LParen@12392..12393 "("
                          Ident@12393..12394
                            Ident@12393..12394 "x"
                          Comma@12394..12395 ","
                          Ident@12395..12408
                            Ident@12395..12408 "fun_or_regexp"
                          RParen@12408..12409 ")"
                      NotEq@12409..12411 "~="
                      LiteralExpr@12411..12414
                        Nil@12411..12414 "nil"
                End@12414..12417 "end"
          End@12417..12420 "end"
        ReturnStmt@12420..12453
          Return@12420..12426 "return"
          FuncCall@12426..12453
            Ident@12426..12432
              Ident@12426..12432 "filter"
            FuncArgs@12432..12453
              LParen@12432..12433 "("
              Ident@12433..12436
                Ident@12433..12436 "fun"
              Comma@12436..12437 ","
              Ident@12437..12440
                Ident@12437..12440 "gen"
              Comma@12440..12441 ","
              Ident@12441..12446
                Ident@12441..12446 "param"
              Comma@12446..12447 ","
              Ident@12447..12452
                Ident@12447..12452 "state"
              RParen@12452..12453 ")"
      End@12453..12456 "end"
  AssignStmt@12456..12482
    BinOp@12456..12468
      Ident@12456..12463
        Ident@12456..12463 "methods"
      Dot@12463..12464 "."
      Ident@12464..12468
        Ident@12464..12468 "grep"
    Assign@12468..12469 "="
    FuncCall@12469..12482
      Ident@12469..12476
        Ident@12469..12476 "method1"
      FuncArgs@12476..12482
        LParen@12476..12477 "("
        Ident@12477..12481
          Ident@12477..12481 "grep"
        RParen@12481..12482 ")"
  AssignStmt@12482..12508
    BinOp@12482..12494
      Ident@12482..12489
        Ident@12482..12489 "exports"
      Dot@12489..12490 "."
      Ident@12490..12494
        Ident@12490..12494 "grep"
    Assign@12494..12495 "="
    FuncCall@12495..12508
      Ident@12495..12502
        Ident@12495..12502 "export1"
      FuncArgs@12502..12508
        LParen@12502..12503 "("
        Ident@12503..12507
          Ident@12503..12507 "grep"
        RParen@12507..12508 ")"
  DeclStmt@12508..12666
    Local@12508..12513 "local"
    DeclTarget@12513..12522
      Ident@12513..12522 "partition"
    Assign@12522..12523 "="
    FuncExpr@12523..12666
      Function@12523..12531 "function"
      FuncArgs@12531..12552
        LParen@12531..12532 "("
        Ident@12532..12535 "fun"
        Comma@12535..12536 ","
        Ident@12536..12539 "gen"
        Comma@12539..12540 ","
        Ident@12540..12545 "param"
        Comma@12545..12546 ","
        Ident@12546..12551 "state"
        RParen@12551..12552 ")"
      StmtList@12552..12663
        DeclStmt@12552..12598
          Local@12552..12557 "local"
          DeclTarget@12557..12564
            Ident@12557..12564 "neg_fun"
          Assign@12564..12565 "="
          FuncExpr@12565..12598
            Function@12565..12573 "function"
            FuncArgs@12573..12578
              LParen@12573..12574 "("
              TDot@12574..12577 "..."
              RParen@12577..12578 ")"
            StmtList@12578..12595
              ReturnStmt@12578..12595
                Return@12578..12584 "return"
                PrefixOp@12584..12595
                  Not@12584..12587 "not"
                  FuncCall@12587..12595
                    Ident@12587..12590
                      Ident@12587..12590 "fun"
                    FuncArgs@12590..12595
                      LParen@12590..12591 "("
                      VarArgExpr@12591..12594
                        TDot@12591..12594 "..."
                      RParen@12594..12595 ")"
            End@12595..12598 "end"
        ReturnStmt@12598..12663
          Return@12598..12604 "return"
          ExprList@12604..12663
            FuncCall@12604..12631
              Ident@12604..12610
                Ident@12604..12610 "filter"
              FuncArgs@12610..12631
                LParen@12610..12611 "("
                Ident@12611..12614
                  Ident@12611..12614 "fun"
                Comma@12614..12615 ","
                Ident@12615..12618
                  Ident@12615..12618 "gen"
                Comma@12618..12619 ","
                Ident@12619..12624
                  Ident@12619..12624 "param"
                Comma@12624..12625 ","
                Ident@12625..12630
                  Ident@12625..12630 "state"
                RParen@12630..12631 ")"
            Comma@12631..12632 ","
            FuncCall@12632..12663
              Ident@12632..12638
                Ident@12632..12638 "filter"
              FuncArgs@12638..12663
                LParen@12638..12639 "("
                Ident@12639..12646
                  Ident@12639..12646 "neg_fun"
                Comma@12646..12647 ","
                Ident@12647..12650
                  Ident@12647..12650 "gen"
                Comma@12650..12651 ","
                Ident@12651..12656
                  Ident@12651..12656 "param"
                Comma@12656..12657 ","
                Ident@12657..12662
                  Ident@12657..12662 "state"
                RParen@12662..12663 ")"
      End@12663..12666 "end"
  AssignStmt@12666..12702
    BinOp@12666..12683
      Ident@12666..12673
        Ident@12666..12673 "methods"
      Dot@12673..12674 "."
      Ident@12674..12683
        Ident@12674..12683 "partition"
    Assign@12683..12684 "="
    FuncCall@12684..12702
      Ident@12684..12691
        Ident@12684..12691 "method1"
      FuncArgs@12691..12702
        LParen@12691..12692 "("
        Ident@12692..12701
          Ident@12692..12701 "partition"
        RParen@12701..12702 ")"
  AssignStmt@12702..12738
    BinOp@12702..12719
      Ident@12702..12709
        Ident@12702..12709 "exports"
      Dot@12709..12710 "."
      Ident@12710..12719
        Ident@12710..12719 "partition"
    Assign@12719..12720 "="
    FuncCall@12720..12738
      Ident@12720..12727
        Ident@12720..12727 "export1"
      FuncArgs@12727..12738
        LParen@12727..12728 "("
        Ident@12728..12737
          Ident@12728..12737 "partition"
        RParen@12737..12738 ")"
  DeclStmt@12738..12846
    Local@12738..12743 "local"
    DeclTarget@12743..12753
      Ident@12743..12753 "foldl_call"
    Assign@12753..12754 "="
    FuncExpr@12754..12846
      Function@12754..12762 "function"
      FuncArgs@12762..12783
        LParen@12762..12763 "("
        Ident@12763..12766 "fun"
        Comma@12766..12767 ","
        Ident@12767..12772 "start"
        Comma@12772..12773 ","
        Ident@12773..12778 "state"
        Comma@12778..12779 ","
        TDot@12779..12782 "..."
        RParen@12782..12783 ")"
      StmtList@12783..12843
        IfStmt@12783..12817
          If@12783..12785 "if"
          BinOp@12785..12795
            Ident@12785..12790
              Ident@12785..12790 "state"
            Eq@12790..12792 "=="
            LiteralExpr@12792..12795
              Nil@12792..12795 "nil"
          Then@12795..12799 "then"
          StmtList@12799..12814
            ReturnStmt@12799..12814
              Return@12799..12805 "return"
              ExprList@12805..12814
                LiteralExpr@12805..12808
                  Nil@12805..12808 "nil"
                Comma@12808..12809 ","
                Ident@12809..12814
                  Ident@12809..12814 "start"
          End@12814..12817 "end"
        ReturnStmt@12817..12843
          Return@12817..12823 "return"
          ExprList@12823..12843
            Ident@12823..12828
              Ident@12823..12828 "state"
            Comma@12828..12829 ","
            FuncCall@12829..12843
              Ident@12829..12832
                Ident@12829..12832 "fun"
              FuncArgs@12832..12843
                LParen@12832..12833 "("
                Ident@12833..12838
                  Ident@12833..12838 "start"
                Comma@12838..12839 ","
                VarArgExpr@12839..12842
                  TDot@12839..12842 "..."
                RParen@12842..12843 ")"
      End@12843..12846 "end"
  DeclStmt@12846..13011
    Local@12846..12851 "local"
    DeclTarget@12851..12856
      Ident@12851..12856 "foldl"
    Assign@12856..12857 "="
    FuncExpr@12857..13011
      Function@12857..12865 "function"
      FuncArgs@12865..12898
        LParen@12865..12866 "("
        Ident@12866..12869 "fun"
        Comma@12869..12870 ","
        Ident@12870..12875 "start"
        Comma@12875..12876 ","
        Ident@12876..12881 "gen_x"
        Comma@12881..12882 ","
        Ident@12882..12889 "param_x"
        Comma@12889..12890 ","
        Ident@12890..12897 "state_x"
        RParen@12897..12898 ")"
      StmtList@12898..13008
        WhileStmt@12898..12997
          While@12898..12903 "while"
          LiteralExpr@12903..12907
            True@12903..12907 "true"
          BlockStmt@12907..12997
            Do@12907..12909 "do"
            StmtList@12909..12994
              AssignStmt@12909..12967
                Ident@12909..12916
                  Ident@12909..12916 "state_x"
                Comma@12916..12917 ","
                Ident@12917..12922
                  Ident@12917..12922 "start"
                Assign@12922..12923 "="
                FuncCall@12923..12967
                  Ident@12923..12933
                    Ident@12923..12933 "foldl_call"
                  FuncArgs@12933..12967
                    LParen@12933..12934 "("
                    Ident@12934..12937
                      Ident@12934..12937 "fun"
                    Comma@12937..12938 ","
                    Ident@12938..12943
                      Ident@12938..12943 "start"
                    Comma@12943..12944 ","
                    FuncCall@12944..12966
                      Ident@12944..12949
                        Ident@12944..12949 "gen_x"
                      FuncArgs@12949..12966
                        LParen@12949..12950 "("
                        Ident@12950..12957
                          Ident@12950..12957 "param_x"
                        Comma@12957..12958 ","
                        Ident@12958..12965
                          Ident@12958..12965 "state_x"
                        RParen@12965..12966 ")"
                    RParen@12966..12967 ")"
              IfStmt@12967..12994
                If@12967..12969 "if"
                BinOp@12969..12981
                  Ident@12969..12976
                    Ident@12969..12976 "state_x"
                  Eq@12976..12978 "=="
                  LiteralExpr@12978..12981
                    Nil@12978..12981 "nil"
                Then@12981..12985 "then"
                StmtList@12985..12991
                  BreakStmt@12985..12990
                    Break@12985..12990 "break"
                  Semicolon@12990..12991
                    Semicolon@12990..12991 ";"
                End@12991..12994 "end"
            End@12994..12997 "end"
        ReturnStmt@12997..13008
          Return@12997..13003 "return"
          Ident@13003..13008
            Ident@13003..13008 "start"
      End@13008..13011 "end"
  AssignStmt@13011..13039
    BinOp@13011..13024
      Ident@13011..13018
        Ident@13011..13018 "methods"
      Dot@13018..13019 "."
      Ident@13019..13024
        Ident@13019..13024 "foldl"
    Assign@13024..13025 "="
    FuncCall@13025..13039
      Ident@13025..13032
        Ident@13025..13032 "method2"
      FuncArgs@13032..13039
        LParen@13032..13033 "("
        Ident@13033..13038
          Ident@13033..13038 "foldl"
        RParen@13038..13039 ")"
  AssignStmt@13039..13067
    BinOp@13039..13052
      Ident@13039..13046
        Ident@13039..13046 "exports"
      Dot@13046..13047 "."
      Ident@13047..13052
        Ident@13047..13052 "foldl"
    Assign@13052..13053 "="
    FuncCall@13053..13067
      Ident@13053..13060
        Ident@13053..13060 "export2"
      FuncArgs@13060..13067
        LParen@13060..13061 "("
        Ident@13061..13066
          Ident@13061..13066 "foldl"
        RParen@13066..13067 ")"
  AssignStmt@13067..13095
    BinOp@13067..13081
      Ident@13067..13074
        Ident@13067..13074 "methods"
      Dot@13074..13075 "."
      Ident@13075..13081
        Ident@13075..13081 "reduce"
    Assign@13081..13082 "="
    BinOp@13082..13095
      Ident@13082..13089
        Ident@13082..13089 "methods"
      Dot@13089..13090 "."
      Ident@13090..13095
        Ident@13090..13095 "foldl"
  AssignStmt@13095..13123
    BinOp@13095..13109
      Ident@13095..13102
        Ident@13095..13102 "exports"
      Dot@13102..13103 "."
      Ident@13103..13109
        Ident@13103..13109 "reduce"
    Assign@13109..13110 "="
    BinOp@13110..13123
      Ident@13110..13117
        Ident@13110..13117 "exports"
      Dot@13117..13118 "."
      Ident@13118..13123
        Ident@13118..13123 "foldl"
  DeclStmt@13123..13289
    Local@13123..13128 "local"
    DeclTarget@13128..13134
      Ident@13128..13134 "length"
    Assign@13134..13135 "="
    FuncExpr@13135..13289
      Function@13135..13143 "function"
      FuncArgs@13143..13160
        LParen@13143..13144 "("
        Ident@13144..13147 "gen"
        Comma@13147..13148 ","
        Ident@13148..13153 "param"
        Comma@13153..13154 ","
        Ident@13154..13159 "state"
        RParen@13159..13160 ")"
      StmtList@13160..13286
        IfStmt@13160..13213
          If@13160..13162 "if"
          BinOp@13162..13194
            BinOp@13162..13177
              Ident@13162..13165
                Ident@13162..13165 "gen"
              Eq@13165..13167 "=="
              Ident@13167..13177
                Ident@13167..13177 "ipairs_gen"
            Or@13177..13179 "or"
            BinOp@13179..13194
              Ident@13179..13182
                Ident@13179..13182 "gen"
              Eq@13182..13184 "=="
              Ident@13184..13194
                Ident@13184..13194 "string_gen"
          Then@13194..13198 "then"
          StmtList@13198..13210
            ReturnStmt@13198..13210
              Return@13198..13204 "return"
              PrefixOp@13204..13210
                Hash@13204..13205 "#"
                Ident@13205..13210
                  Ident@13205..13210 "param"
          End@13210..13213 "end"
        DeclStmt@13213..13223
          Local@13213..13218 "local"
          DeclTarget@13218..13221
            Ident@13218..13221 "len"
          Assign@13221..13222 "="
          LiteralExpr@13222..13223
            Int@13222..13223 "0"
        RepeatStmt@13223..13275
          Repeat@13223..13229 "repeat"
          StmtList@13229..13260
            AssignStmt@13229..13251
              Ident@13229..13234
                Ident@13229..13234 "state"
              Assign@13234..13235 "="
              FuncCall@13235..13251
                Ident@13235..13238
                  Ident@13235..13238 "gen"
                FuncArgs@13238..13251
                  LParen@13238..13239 "("
                  Ident@13239..13244
                    Ident@13239..13244 "param"
                  Comma@13244..13245 ","
                  Ident@13245..13250
                    Ident@13245..13250 "state"
                  RParen@13250..13251 ")"
            AssignStmt@13251..13260
              Ident@13251..13254
                Ident@13251..13254 "len"
              Assign@13254..13255 "="
              BinOp@13255..13260
                Ident@13255..13258
                  Ident@13255..13258 "len"
                Plus@13258..13259 "+"
                LiteralExpr@13259..13260
                  Int@13259..13260 "1"
          Until@13260..13265 "until"
          BinOp@13265..13275
            Ident@13265..13270
              Ident@13265..13270 "state"
            Eq@13270..13272 "=="
            LiteralExpr@13272..13275
              Nil@13272..13275 "nil"
        ReturnStmt@13275..13286
          Return@13275..13281 "return"
          BinOp@13281..13286
            Ident@13281..13284
              Ident@13281..13284 "len"
            Minus@13284..13285 "-"
            LiteralExpr@13285..13286
              Int@13285..13286 "1"
      End@13286..13289 "end"
  AssignStmt@13289..13319
    BinOp@13289..13303
      Ident@13289..13296
        Ident@13289..13296 "methods"
      Dot@13296..13297 "."
      Ident@13297..13303
        Ident@13297..13303 "length"
    Assign@13303..13304 "="
    FuncCall@13304..13319
      Ident@13304..13311
        Ident@13304..13311 "method0"
      FuncArgs@13311..13319
        LParen@13311..13312 "("
        Ident@13312..13318
          Ident@13312..13318 "length"
        RParen@13318..13319 ")"
  AssignStmt@13319..13349
    BinOp@13319..13333
      Ident@13319..13326
        Ident@13319..13326 "exports"
      Dot@13326..13327 "."
      Ident@13327..13333
        Ident@13327..13333 "length"
    Assign@13333..13334 "="
    FuncCall@13334..13349
      Ident@13334..13341
        Ident@13334..13341 "export0"
      FuncArgs@13341..13349
        LParen@13341..13342 "("
        Ident@13342..13348
          Ident@13342..13348 "length"
        RParen@13348..13349 ")"
  DeclStmt@13349..13427
    Local@13349..13354 "local"
    DeclTarget@13354..13361
      Ident@13354..13361 "is_null"
    Assign@13361..13362 "="
    FuncExpr@13362..13427
      Function@13362..13370 "function"
      FuncArgs@13370..13387
        LParen@13370..13371 "("
        Ident@13371..13374 "gen"
        Comma@13374..13375 ","
        Ident@13375..13380 "param"
        Comma@13380..13381 ","
        Ident@13381..13386 "state"
        RParen@13386..13387 ")"
      StmtList@13387..13424
        ReturnStmt@13387..13424
          Return@13387..13393 "return"
          BinOp@13393..13424
            FuncCall@13393..13419
              Ident@13393..13396
                Ident@13393..13396 "gen"
              FuncArgs@13396..13419
                LParen@13396..13397 "("
                Ident@13397..13402
                  Ident@13397..13402 "param"
                Comma@13402..13403 ","
                FuncCall@13403..13418
                  Ident@13403..13411
                    Ident@13403..13411 "deepcopy"
                  FuncArgs@13411..13418
                    LParen@13411..13412 "("
                    Ident@13412..13417
                      Ident@13412..13417 "state"
                    RParen@13417..13418 ")"
                RParen@13418..13419 ")"
            Eq@13419..13421 "=="
            LiteralExpr@13421..13424
              Nil@13421..13424 "nil"
      End@13424..13427 "end"
  AssignStmt@13427..13459
    BinOp@13427..13442
      Ident@13427..13434
        Ident@13427..13434 "methods"
      Dot@13434..13435 "."
      Ident@13435..13442
        Ident@13435..13442 "is_null"
    Assign@13442..13443 "="
    FuncCall@13443..13459
      Ident@13443..13450
        Ident@13443..13450 "method0"
      FuncArgs@13450..13459
        LParen@13450..13451 "("
        Ident@13451..13458
          Ident@13451..13458 "is_null"
        RParen@13458..13459 ")"
  AssignStmt@13459..13491
    BinOp@13459..13474
      Ident@13459..13466
        Ident@13459..13466 "exports"
      Dot@13466..13467 "."
      Ident@13467..13474
        Ident@13467..13474 "is_null"
    Assign@13474..13475 "="
    FuncCall@13475..13491
      Ident@13475..13482
        Ident@13475..13482 "export0"
      FuncArgs@13482..13491
        LParen@13482..13483 "("
        Ident@13483..13490
          Ident@13483..13490 "is_null"
        RParen@13490..13491 ")"
  DeclStmt@13491..13782
    Local@13491..13496 "local"
    DeclTarget@13496..13508
      Ident@13496..13508 "is_prefix_of"
    Assign@13508..13509 "="
    FuncExpr@13509..13782
      Function@13509..13517 "function"
      FuncArgs@13517..13532
        LParen@13517..13518 "("
        Ident@13518..13524 "iter_x"
        Comma@13524..13525 ","
        Ident@13525..13531 "iter_y"
        RParen@13531..13532 ")"
      StmtList@13532..13779
        DeclStmt@13532..13571
          Local@13532..13537 "local"
          DeclTarget@13537..13542
            Ident@13537..13542 "gen_x"
          Comma@13542..13543 ","
          DeclTarget@13543..13550
            Ident@13543..13550 "param_x"
          Comma@13550..13551 ","
          DeclTarget@13551..13558
            Ident@13551..13558 "state_x"
          Assign@13558..13559 "="
          FuncCall@13559..13571
            Ident@13559..13563
              Ident@13559..13563 "iter"
            FuncArgs@13563..13571
              LParen@13563..13564 "("
              Ident@13564..13570
                Ident@13564..13570 "iter_x"
              RParen@13570..13571 ")"
        DeclStmt@13571..13610
          Local@13571..13576 "local"
          DeclTarget@13576..13581
            Ident@13576..13581 "gen_y"
          Comma@13581..13582 ","
          DeclTarget@13582..13589
            Ident@13582..13589 "param_y"
          Comma@13589..13590 ","
          DeclTarget@13590..13597
            Ident@13590..13597 "state_y"
          Assign@13597..13598 "="
          FuncCall@13598..13610
            Ident@13598..13602
              Ident@13598..13602 "iter"
            FuncArgs@13602..13610
              LParen@13602..13603 "("
              Ident@13603..13609
                Ident@13603..13609 "iter_y"
              RParen@13609..13610 ")"
        DeclStmt@13610..13622
          Local@13610..13615 "local"
          DeclTarget@13615..13618
            Ident@13615..13618 "r_x"
          Comma@13618..13619 ","
          DeclTarget@13619..13622
            Ident@13619..13622 "r_y"
        ForNumStmt@13622..13779
          For@13622..13625 "for"
          Ident@13625..13626 "i"
          Assign@13626..13627 "="
          LiteralExpr@13627..13628
            Int@13627..13628 "1"
          Comma@13628..13629 ","
          LiteralExpr@13629..13631
            Int@13629..13631 "10"
          Comma@13631..13632 ","
          LiteralExpr@13632..13633
            Int@13632..13633 "1"
          BlockStmt@13633..13779
            Do@13633..13635 "do"
            StmtList@13635..13776
              AssignStmt@13635..13669
                Ident@13635..13642
                  Ident@13635..13642 "state_x"
                Comma@13642..13643 ","
                Ident@13643..13646
                  Ident@13643..13646 "r_x"
                Assign@13646..13647 "="
                FuncCall@13647..13669
                  Ident@13647..13652
                    Ident@13647..13652 "gen_x"
                  FuncArgs@13652..13669
                    LParen@13652..13653 "("
                    Ident@13653..13660
                      Ident@13653..13660 "param_x"
                    Comma@13660..13661 ","
                    Ident@13661..13668
                      Ident@13661..13668 "state_x"
                    RParen@13668..13669 ")"
              AssignStmt@13669..13703
                Ident@13669..13676
                  Ident@13669..13676 "state_y"
                Comma@13676..13677 ","
                Ident@13677..13680
                  Ident@13677..13680 "r_y"
                Assign@13680..13681 "="
                FuncCall@13681..13703
                  Ident@13681..13686
                    Ident@13681..13686 "gen_y"
                  FuncArgs@13686..13703
                    LParen@13686..13687 "("
                    Ident@13687..13694
                      Ident@13687..13694 "param_y"
                    Comma@13694..13695 ","
                    Ident@13695..13702
                      Ident@13695..13702 "state_y"
                    RParen@13702..13703 ")"
              IfStmt@13703..13734
                If@13703..13705 "if"
                BinOp@13705..13717
                  Ident@13705..13712
                    Ident@13705..13712 "state_x"
                  Eq@13712..13714 "=="
                  LiteralExpr@13714..13717
                    Nil@13714..13717 "nil"
                Then@13717..13721 "then"
                StmtList@13721..13731
                  ReturnStmt@13721..13731
                    Return@13721..13727 "return"
                    LiteralExpr@13727..13731
                      True@13727..13731 "true"
                End@13731..13734 "end"
              IfStmt@13734..13776
                If@13734..13736 "if"
                BinOp@13736..13758
                  BinOp@13736..13748
                    Ident@13736..13743
                      Ident@13736..13743 "state_y"
                    Eq@13743..13745 "=="
                    LiteralExpr@13745..13748
                      Nil@13745..13748 "nil"
                  Or@13748..13750 "or"
                  BinOp@13750..13758
                    Ident@13750..13753
                      Ident@13750..13753 "r_x"
                    NotEq@13753..13755 "~="
                    Ident@13755..13758
                      Ident@13755..13758 "r_y"
                Then@13758..13762 "then"
                StmtList@13762..13773
                  ReturnStmt@13762..13773
                    Return@13762..13768 "return"
                    LiteralExpr@13768..13773
                      False@13768..13773 "false"
                End@13773..13776 "end"
            End@13776..13779 "end"
      End@13779..13782 "end"
  AssignStmt@13782..13815
    BinOp@13782..13802
      Ident@13782..13789
        Ident@13782..13789 "methods"
      Dot@13789..13790 "."
      Ident@13790..13802
        Ident@13790..13802 "is_prefix_of"
    Assign@13802..13803 "="
    Ident@13803..13815
      Ident@13803..13815 "is_prefix_of"
  AssignStmt@13815..13848
    BinOp@13815..13835
      Ident@13815..13822
        Ident@13815..13822 "exports"
      Dot@13822..13823 "."
      Ident@13823..13835
        Ident@13823..13835 "is_prefix_of"
    Assign@13835..13836 "="
    Ident@13836..13848
      Ident@13836..13848 "is_prefix_of"
  DeclStmt@13848..14003
    Local@13848..13853 "local"
    DeclTarget@13853..13856
      Ident@13853..13856 "all"
    Assign@13856..13857 "="
    FuncExpr@13857..14003
      Function@13857..13865 "function"
      FuncArgs@13865..13892
        LParen@13865..13866 "("
        Ident@13866..13869 "fun"
        Comma@13869..13870 ","
        Ident@13870..13875 "gen_x"
        Comma@13875..13876 ","
        Ident@13876..13883 "param_x"
        Comma@13883..13884 ","
        Ident@13884..13891 "state_x"
        RParen@13891..13892 ")"
      StmtList@13892..14000
        DeclStmt@13892..13898
          Local@13892..13897 "local"
          DeclTarget@13897..13898
            Ident@13897..13898 "r"
        RepeatStmt@13898..13982
          Repeat@13898..13904 "repeat"
          StmtList@13904..13959
            AssignStmt@13904..13959
              Ident@13904..13911
                Ident@13904..13911 "state_x"
              Comma@13911..13912 ","
              Ident@13912..13913
                Ident@13912..13913 "r"
              Assign@13913..13914 "="
              FuncCall@13914..13959
                Ident@13914..13931
                  Ident@13914..13931 "call_if_not_empty"
                FuncArgs@13931..13959
                  LParen@13931..13932 "("
                  Ident@13932..13935
                    Ident@13932..13935 "fun"
                  Comma@13935..13936 ","
                  FuncCall@13936..13958
                    Ident@13936..13941
                      Ident@13936..13941 "gen_x"
                    FuncArgs@13941..13958
                      LParen@13941..13942 "("
                      Ident@13942..13949
                        Ident@13942..13949 "param_x"
                      Comma@13949..13950 ","
                      Ident@13950..13957
                        Ident@13950..13957 "state_x"
                      RParen@13957..13958 ")"
                  RParen@13958..13959 ")"
          Until@13959..13964 "until"
          BinOp@13964..13982
            BinOp@13964..13976
              Ident@13964..13971
                Ident@13964..13971 "state_x"
              Eq@13971..13973 "=="
              LiteralExpr@13973..13976
                Nil@13973..13976 "nil"
            Or@13976..13978 "or"
            PrefixOp@13978..13982
              Not@13978..13981 "not"
              Ident@13981..13982
                Ident@13981..13982 "r"
        ReturnStmt@13982..14000
          Return@13982..13988 "return"
          BinOp@13988..14000
            Ident@13988..13995
              Ident@13988..13995 "state_x"
            Eq@13995..13997 "=="
            LiteralExpr@13997..14000
              Nil@13997..14000 "nil"
      End@14000..14003 "end"
  AssignStmt@14003..14027
    BinOp@14003..14014
      Ident@14003..14010
        Ident@14003..14010 "methods"
      Dot@14010..14011 "."
      Ident@14011..14014
        Ident@14011..14014 "all"
    Assign@14014..14015 "="
    FuncCall@14015..14027
      Ident@14015..14022
        Ident@14015..14022 "method1"
      FuncArgs@14022..14027
        LParen@14022..14023 "("
        Ident@14023..14026
          Ident@14023..14026 "all"
        RParen@14026..14027 ")"
  AssignStmt@14027..14051
    BinOp@14027..14038
      Ident@14027..14034
        Ident@14027..14034 "exports"
      Dot@14034..14035 "."
      Ident@14035..14038
        Ident@14035..14038 "all"
    Assign@14038..14039 "="
    FuncCall@14039..14051
      Ident@14039..14046
        Ident@14039..14046 "export1"
      FuncArgs@14046..14051
        LParen@14046..14047 "("
        Ident@14047..14050
          Ident@14047..14050 "all"
        RParen@14050..14051 ")"
  AssignStmt@14051..14076
    BinOp@14051..14064
      Ident@14051..14058
        Ident@14051..14058 "methods"
      Dot@14058..14059 "."
      Ident@14059..14064
        Ident@14059..14064 "every"
    Assign@14064..14065 "="
    BinOp@14065..14076
      Ident@14065..14072
        Ident@14065..14072 "methods"
      Dot@14072..14073 "."
      Ident@14073..14076
        Ident@14073..14076 "all"
  AssignStmt@14076..14101
    BinOp@14076..14089
      Ident@14076..14083
        Ident@14076..14083 "exports"
      Dot@14083..14084 "."
      Ident@14084..14089
        Ident@14084..14089 "every"
    Assign@14089..14090 "="
    BinOp@14090..14101
      Ident@14090..14097
        Ident@14090..14097 "exports"
      Dot@14097..14098 "."
      Ident@14098..14101
        Ident@14098..14101 "all"
  DeclStmt@14101..14248
    Local@14101..14106 "local"
    DeclTarget@14106..14109
      Ident@14106..14109 "any"
    Assign@14109..14110 "="
    FuncExpr@14110..14248
      Function@14110..14118 "function"
      FuncArgs@14118..14145
        LParen@14118..14119 "("
        Ident@14119..14122 "fun"
        Comma@14122..14123 ","
        Ident@14123..14128 "gen_x"
        Comma@14128..14129 ","
        Ident@14129..14136 "param_x"
        Comma@14136..14137 ","
        Ident@14137..14144 "state_x"
        RParen@14144..14145 ")"
      StmtList@14145..14245
        DeclStmt@14145..14151
          Local@14145..14150 "local"
          DeclTarget@14150..14151
            Ident@14150..14151 "r"
        RepeatStmt@14151..14232
          Repeat@14151..14157 "repeat"
          StmtList@14157..14212
            AssignStmt@14157..14212
              Ident@14157..14164
                Ident@14157..14164 "state_x"
              Comma@14164..14165 ","
              Ident@14165..14166
                Ident@14165..14166 "r"
              Assign@14166..14167 "="
              FuncCall@14167..14212
                Ident@14167..14184
                  Ident@14167..14184 "call_if_not_empty"
                FuncArgs@14184..14212
                  LParen@14184..14185 "("
                  Ident@14185..14188
                    Ident@14185..14188 "fun"
                  Comma@14188..14189 ","
                  FuncCall@14189..14211
                    Ident@14189..14194
                      Ident@14189..14194 "gen_x"
                    FuncArgs@14194..14211
                      LParen@14194..14195 "("
                      Ident@14195..14202
                        Ident@14195..14202 "param_x"
                      Comma@14202..14203 ","
                      Ident@14203..14210
                        Ident@14203..14210 "state_x"
                      RParen@14210..14211 ")"
                  RParen@14211..14212 ")"
          Until@14212..14217 "until"
          BinOp@14217..14232
            BinOp@14217..14229
              Ident@14217..14224
                Ident@14217..14224 "state_x"
              Eq@14224..14226 "=="
              LiteralExpr@14226..14229
                Nil@14226..14229 "nil"
            Or@14229..14231 "or"
            Ident@14231..14232
              Ident@14231..14232 "r"
        ReturnStmt@14232..14245
          Return@14232..14238 "return"
          PrefixOp@14238..14245
            Not@14238..14241 "not"
            PrefixOp@14241..14245
              Not@14241..14244 "not"
              Ident@14244..14245
                Ident@14244..14245 "r"
      End@14245..14248 "end"
  AssignStmt@14248..14272
    BinOp@14248..14259
      Ident@14248..14255
        Ident@14248..14255 "methods"
      Dot@14255..14256 "."
      Ident@14256..14259
        Ident@14256..14259 "any"
    Assign@14259..14260 "="
    FuncCall@14260..14272
      Ident@14260..14267
        Ident@14260..14267 "method1"
      FuncArgs@14267..14272
        LParen@14267..14268 "("
        Ident@14268..14271
          Ident@14268..14271 "any"
        RParen@14271..14272 ")"
  AssignStmt@14272..14296
    BinOp@14272..14283
      Ident@14272..14279
        Ident@14272..14279 "exports"
      Dot@14279..14280 "."
      Ident@14280..14283
        Ident@14280..14283 "any"
    Assign@14283..14284 "="
    FuncCall@14284..14296
      Ident@14284..14291
        Ident@14284..14291 "export1"
      FuncArgs@14291..14296
        LParen@14291..14292 "("
        Ident@14292..14295
          Ident@14292..14295 "any"
        RParen@14295..14296 ")"
  AssignStmt@14296..14320
    BinOp@14296..14308
      Ident@14296..14303
        Ident@14296..14303 "methods"
      Dot@14303..14304 "."
      Ident@14304..14308
        Ident@14304..14308 "some"
    Assign@14308..14309 "="
    BinOp@14309..14320
      Ident@14309..14316
        Ident@14309..14316 "methods"
      Dot@14316..14317 "."
      Ident@14317..14320
        Ident@14317..14320 "any"
  AssignStmt@14320..14344
    BinOp@14320..14332
      Ident@14320..14327
        Ident@14320..14327 "exports"
      Dot@14327..14328 "."
      Ident@14328..14332
        Ident@14328..14332 "some"
    Assign@14332..14333 "="
    BinOp@14333..14344
      Ident@14333..14340
        Ident@14333..14340 "exports"
      Dot@14340..14341 "."
      Ident@14341..14344
        Ident@14341..14344 "any"
  DeclStmt@14344..14454
    Local@14344..14349 "local"
    DeclTarget@14349..14352
      Ident@14349..14352 "sum"
    Assign@14352..14353 "="
    FuncExpr@14353..14454
      Function@14353..14361 "function"
      FuncArgs@14361..14378
        LParen@14361..14362 "("
        Ident@14362..14365 "gen"
        Comma@14365..14366 ","
        Ident@14366..14371 "param"
        Comma@14371..14372 ","
        Ident@14372..14377 "state"
        RParen@14377..14378 ")"
      StmtList@14378..14451
        DeclStmt@14378..14386
          Local@14378..14383 "local"
          DeclTarget@14383..14384
            Ident@14383..14384 "s"
          Assign@14384..14385 "="
          LiteralExpr@14385..14386
            Int@14385..14386 "0"
        DeclStmt@14386..14394
          Local@14386..14391 "local"
          DeclTarget@14391..14392
            Ident@14391..14392 "r"
          Assign@14392..14393 "="
          LiteralExpr@14393..14394
            Int@14393..14394 "0"
        RepeatStmt@14394..14444
          Repeat@14394..14400 "repeat"
          StmtList@14400..14429
            AssignStmt@14400..14405
              Ident@14400..14401
                Ident@14400..14401 "s"
              Assign@14401..14402 "="
              BinOp@14402..14405
                Ident@14402..14403
                  Ident@14402..14403 "s"
                Plus@14403..14404 "+"
                Ident@14404..14405
                  Ident@14404..14405 "r"
            AssignStmt@14405..14429
              Ident@14405..14410
                Ident@14405..14410 "state"
              Comma@14410..14411 ","
              Ident@14411..14412
                Ident@14411..14412 "r"
              Assign@14412..14413 "="
              FuncCall@14413..14429
                Ident@14413..14416
                  Ident@14413..14416 "gen"
                FuncArgs@14416..14429
                  LParen@14416..14417 "("
                  Ident@14417..14422
                    Ident@14417..14422 "param"
                  Comma@14422..14423 ","
                  Ident@14423..14428
                    Ident@14423..14428 "state"
                  RParen@14428..14429 ")"
          Until@14429..14434 "until"
          BinOp@14434..14444
            Ident@14434..14439
              Ident@14434..14439 "state"
            Eq@14439..14441 "=="
            LiteralExpr@14441..14444
              Nil@14441..14444 "nil"
        ReturnStmt@14444..14451
          Return@14444..14450 "return"
          Ident@14450..14451
            Ident@14450..14451 "s"
      End@14451..14454 "end"
  AssignStmt@14454..14478
    BinOp@14454..14465
      Ident@14454..14461
        Ident@14454..14461 "methods"
      Dot@14461..14462 "."
      Ident@14462..14465
        Ident@14462..14465 "sum"
    Assign@14465..14466 "="
    FuncCall@14466..14478
      Ident@14466..14473
        Ident@14466..14473 "method0"
      FuncArgs@14473..14478
        LParen@14473..14474 "("
        Ident@14474..14477
          Ident@14474..14477 "sum"
        RParen@14477..14478 ")"
  AssignStmt@14478..14502
    BinOp@14478..14489
      Ident@14478..14485
        Ident@14478..14485 "exports"
      Dot@14485..14486 "."
      Ident@14486..14489
        Ident@14486..14489 "sum"
    Assign@14489..14490 "="
    FuncCall@14490..14502
      Ident@14490..14497
        Ident@14490..14497 "export0"
      FuncArgs@14497..14502
        LParen@14497..14498 "("
        Ident@14498..14501
          Ident@14498..14501 "sum"
        RParen@14501..14502 ")"
  DeclStmt@14502..14616
    Local@14502..14507 "local"
    DeclTarget@14507..14514
      Ident@14507..14514 "product"
    Assign@14514..14515 "="
    FuncExpr@14515..14616
      Function@14515..14523 "function"
      FuncArgs@14523..14540
        LParen@14523..14524 "("
        Ident@14524..14527 "gen"
        Comma@14527..14528 ","
        Ident@14528..14533 "param"
        Comma@14533..14534 ","
        Ident@14534..14539 "state"
        RParen@14539..14540 ")"
      StmtList@14540..14613
        DeclStmt@14540..14548
          Local@14540..14545 "local"
          DeclTarget@14545..14546
            Ident@14545..14546 "p"
          Assign@14546..14547 "="
          LiteralExpr@14547..14548
            Int@14547..14548 "1"
        DeclStmt@14548..14556
          Local@14548..14553 "local"
          DeclTarget@14553..14554
            Ident@14553..14554 "r"
          Assign@14554..14555 "="
          LiteralExpr@14555..14556
            Int@14555..14556 "1"
        RepeatStmt@14556..14606
          Repeat@14556..14562 "repeat"
          StmtList@14562..14591
            AssignStmt@14562..14567
              Ident@14562..14563
                Ident@14562..14563 "p"
              Assign@14563..14564 "="
              BinOp@14564..14567
                Ident@14564..14565
                  Ident@14564..14565 "p"
                Star@14565..14566 "*"
                Ident@14566..14567
                  Ident@14566..14567 "r"
            AssignStmt@14567..14591
              Ident@14567..14572
                Ident@14567..14572 "state"
              Comma@14572..14573 ","
              Ident@14573..14574
                Ident@14573..14574 "r"
              Assign@14574..14575 "="
              FuncCall@14575..14591
                Ident@14575..14578
                  Ident@14575..14578 "gen"
                FuncArgs@14578..14591
                  LParen@14578..14579 "("
                  Ident@14579..14584
                    Ident@14579..14584 "param"
                  Comma@14584..14585 ","
                  Ident@14585..14590
                    Ident@14585..14590 "state"
                  RParen@14590..14591 ")"
          Until@14591..14596 "until"
          BinOp@14596..14606
            Ident@14596..14601
              Ident@14596..14601 "state"
            Eq@14601..14603 "=="
            LiteralExpr@14603..14606
              Nil@14603..14606 "nil"
        ReturnStmt@14606..14613
          Return@14606..14612 "return"
          Ident@14612..14613
            Ident@14612..14613 "p"
      End@14613..14616 "end"
  AssignStmt@14616..14648
    BinOp@14616..14631
      Ident@14616..14623
        Ident@14616..14623 "methods"
      Dot@14623..14624 "."
      Ident@14624..14631
        Ident@14624..14631 "product"
    Assign@14631..14632 "="
    FuncCall@14632..14648
      Ident@14632..14639
        Ident@14632..14639 "method0"
      FuncArgs@14639..14648
        LParen@14639..14640 "("
        Ident@14640..14647
          Ident@14640..14647 "product"
        RParen@14647..14648 ")"
  AssignStmt@14648..14680
    BinOp@14648..14663
      Ident@14648..14655
        Ident@14648..14655 "exports"
      Dot@14655..14656 "."
      Ident@14656..14663
        Ident@14656..14663 "product"
    Assign@14663..14664 "="
    FuncCall@14664..14680
      Ident@14664..14671
        Ident@14664..14671 "export0"
      FuncArgs@14671..14680
        LParen@14671..14672 "("
        Ident@14672..14679
          Ident@14672..14679 "product"
        RParen@14679..14680 ")"
  DeclStmt@14680..14739
    Local@14680..14685 "local"
    DeclTarget@14685..14692
      Ident@14685..14692 "min_cmp"
    Assign@14692..14693 "="
    FuncExpr@14693..14739
      Function@14693..14701 "function"
      FuncArgs@14701..14706
        LParen@14701..14702 "("
        Ident@14702..14703 "m"
        Comma@14703..14704 ","
        Ident@14704..14705 "n"
        RParen@14705..14706 ")"
      StmtList@14706..14736
        IfStmt@14706..14736
          If@14706..14708 "if"
          BinOp@14708..14711
            Ident@14708..14709
              Ident@14708..14709 "n"
            LAngle@14709..14710 "<"
            Ident@14710..14711
              Ident@14710..14711 "m"
          Then@14711..14715 "then"
          StmtList@14715..14722
            ReturnStmt@14715..14722
              Return@14715..14721 "return"
              Ident@14721..14722
                Ident@14721..14722 "n"
          ElseChain@14722..14736
            Else@14722..14726 "else"
            StmtList@14726..14733
              ReturnStmt@14726..14733
                Return@14726..14732 "return"
                Ident@14732..14733
                  Ident@14732..14733 "m"
            End@14733..14736 "end"
      End@14736..14739 "end"
  DeclStmt@14739..14798
    Local@14739..14744 "local"
    DeclTarget@14744..14751
      Ident@14744..14751 "max_cmp"
    Assign@14751..14752 "="
    FuncExpr@14752..14798
      Function@14752..14760 "function"
      FuncArgs@14760..14765
        LParen@14760..14761 "("
        Ident@14761..14762 "m"
        Comma@14762..14763 ","
        Ident@14763..14764 "n"
        RParen@14764..14765 ")"
      StmtList@14765..14795
        IfStmt@14765..14795
          If@14765..14767 "if"
          BinOp@14767..14770
            Ident@14767..14768
              Ident@14767..14768 "n"
            RAngle@14768..14769 ">"
            Ident@14769..14770
              Ident@14769..14770 "m"
          Then@14770..14774 "then"
          StmtList@14774..14781
            ReturnStmt@14774..14781
              Return@14774..14780 "return"
              Ident@14780..14781
                Ident@14780..14781 "n"
          ElseChain@14781..14795
            Else@14781..14785 "else"
            StmtList@14785..14792
              ReturnStmt@14785..14792
                Return@14785..14791 "return"
                Ident@14791..14792
                  Ident@14791..14792 "m"
            End@14792..14795 "end"
      End@14795..14798 "end"
  DeclStmt@14798..15020
    Local@14798..14803 "local"
    DeclTarget@14803..14806
      Ident@14803..14806 "min"
    Assign@14806..14807 "="
    FuncExpr@14807..15020
      Function@14807..14815 "function"
      FuncArgs@14815..14832
        LParen@14815..14816 "("
        Ident@14816..14819 "gen"
        Comma@14819..14820 ","
        Ident@14820..14825 "param"
        Comma@14825..14826 ","
        Ident@14826..14831 "state"
        RParen@14831..14832 ")"
      StmtList@14832..15017
        DeclStmt@14832..14861
          Local@14832..14837 "local"
          DeclTarget@14837..14842
            Ident@14837..14842 "state"
          Comma@14842..14843 ","
          DeclTarget@14843..14844
            Ident@14843..14844 "m"
          Assign@14844..14845 "="
          FuncCall@14845..14861
            Ident@14845..14848
              Ident@14845..14848 "gen"
            FuncArgs@14848..14861
              LParen@14848..14849 "("
              Ident@14849..14854
                Ident@14849..14854 "param"
              Comma@14854..14855 ","
              Ident@14855..14860
                Ident@14855..14860 "state"
              RParen@14860..14861 ")"
        IfStmt@14861..14911
          If@14861..14863 "if"
          BinOp@14863..14873
            Ident@14863..14868
              Ident@14863..14868 "state"
            Eq@14868..14870 "=="
            LiteralExpr@14870..14873
              Nil@14870..14873 "nil"
          Then@14873..14877 "then"
          StmtList@14877..14908
            FuncCall@14877..14908
              Ident@14877..14882
                Ident@14877..14882 "error"
              FuncArgs@14882..14908
                LParen@14882..14883 "("
                LiteralExpr@14883..14907
                  String@14883..14907 "\"min: iterator is empty\""
                RParen@14907..14908 ")"
          End@14908..14911 "end"
        DeclStmt@14911..14919
          Local@14911..14916 "local"
          DeclTarget@14916..14919
            Ident@14916..14919 "cmp"
        IfStmt@14919..14972
          If@14919..14921 "if"
          BinOp@14921..14938
            FuncCall@14921..14928
              Ident@14921..14925
                Ident@14921..14925 "type"
              FuncArgs@14925..14928
                LParen@14925..14926 "("
                Ident@14926..14927
                  Ident@14926..14927 "m"
                RParen@14927..14928 ")"
            Eq@14928..14930 "=="
            LiteralExpr@14930..14938
              String@14930..14938 "\"number\""
          Then@14938..14942 "then"
          StmtList@14942..14954
            AssignStmt@14942..14954
              Ident@14942..14945
                Ident@14942..14945 "cmp"
              Assign@14945..14946 "="
              BinOp@14946..14954
                Ident@14946..14950
                  Ident@14946..14950 "math"
                Dot@14950..14951 "."
                Ident@14951..14954
                  Ident@14951..14954 "min"
          ElseChain@14954..14972
            Else@14954..14958 "else"
            StmtList@14958..14969
              AssignStmt@14958..14969
                Ident@14958..14961
                  Ident@14958..14961 "cmp"
                Assign@14961..14962 "="
                Ident@14962..14969
                  Ident@14962..14969 "min_cmp"
            End@14969..14972 "end"
        ForGenStmt@14972..15010
          For@14972..14975 "for"
          Ident@14975..14976 "_"
          Comma@14976..14977 ","
          Ident@14977..14978 "r"
          In@14978..14980 "in"
          ExprList@14980..14995
            Ident@14980..14983
              Ident@14980..14983 "gen"
            Comma@14983..14984 ","
            Ident@14984..14989
              Ident@14984..14989 "param"
            Comma@14989..14990 ","
            Ident@14990..14995
              Ident@14990..14995 "state"
          BlockStmt@14995..15010
            Do@14995..14997 "do"
            StmtList@14997..15007
              AssignStmt@14997..15007
                Ident@14997..14998
                  Ident@14997..14998 "m"
                Assign@14998..14999 "="
                FuncCall@14999..15007
                  Ident@14999..15002
                    Ident@14999..15002 "cmp"
                  FuncArgs@15002..15007
                    LParen@15002..15003 "("
                    Ident@15003..15004
                      Ident@15003..15004 "m"
                    Comma@15004..15005 ","
                    Ident@15005..15006
                      Ident@15005..15006 "r"
                    RParen@15006..15007 ")"
            End@15007..15010 "end"
        ReturnStmt@15010..15017
          Return@15010..15016 "return"
          Ident@15016..15017
            Ident@15016..15017 "m"
      End@15017..15020 "end"
  AssignStmt@15020..15044
    BinOp@15020..15031
      Ident@15020..15027
        Ident@15020..15027 "methods"
      Dot@15027..15028 "."
      Ident@15028..15031
        Ident@15028..15031 "min"
    Assign@15031..15032 "="
    FuncCall@15032..15044
      Ident@15032..15039
        Ident@15032..15039 "method0"
      FuncArgs@15039..15044
        LParen@15039..15040 "("
        Ident@15040..15043
          Ident@15040..15043 "min"
        RParen@15043..15044 ")"
  AssignStmt@15044..15068
    BinOp@15044..15055
      Ident@15044..15051
        Ident@15044..15051 "exports"
      Dot@15051..15052 "."
      Ident@15052..15055
        Ident@15052..15055 "min"
    Assign@15055..15056 "="
    FuncCall@15056..15068
      Ident@15056..15063
        Ident@15056..15063 "export0"
      FuncArgs@15063..15068
        LParen@15063..15064 "("
        Ident@15064..15067
          Ident@15064..15067 "min"
        RParen@15067..15068 ")"
  AssignStmt@15068..15095
    BinOp@15068..15083
      Ident@15068..15075
        Ident@15068..15075 "methods"
      Dot@15075..15076 "."
      Ident@15076..15083
        Ident@15076..15083 "minimum"
    Assign@15083..15084 "="
    BinOp@15084..15095
      Ident@15084..15091
        Ident@15084..15091 "methods"
      Dot@15091..15092 "."
      Ident@15092..15095
        Ident@15092..15095 "min"
  AssignStmt@15095..15122
    BinOp@15095..15110
      Ident@15095..15102
        Ident@15095..15102 "exports"
      Dot@15102..15103 "."
      Ident@15103..15110
        Ident@15103..15110 "minimum"
    Assign@15110..15111 "="
    BinOp@15111..15122
      Ident@15111..15118
        Ident@15111..15118 "exports"
      Dot@15118..15119 "."
      Ident@15119..15122
        Ident@15119..15122 "min"
  DeclStmt@15122..15312
    Local@15122..15127 "local"
    DeclTarget@15127..15133
      Ident@15127..15133 "min_by"
    Assign@15133..15134 "="
    FuncExpr@15134..15312
      Function@15134..15142 "function"
      FuncArgs@15142..15169
        LParen@15142..15143 "("
        Ident@15143..15146 "cmp"
        Comma@15146..15147 ","
        Ident@15147..15152 "gen_x"
        Comma@15152..15153 ","
        Ident@15153..15160 "param_x"
        Comma@15160..15161 ","
        Ident@15161..15168 "state_x"
        RParen@15168..15169 ")"
      StmtList@15169..15309
        DeclStmt@15169..15206
          Local@15169..15174 "local"
          DeclTarget@15174..15181
            Ident@15174..15181 "state_x"
          Comma@15181..15182 ","
          DeclTarget@15182..15183
            Ident@15182..15183 "m"
          Assign@15183..15184 "="
          FuncCall@15184..15206
            Ident@15184..15189
              Ident@15184..15189 "gen_x"
            FuncArgs@15189..15206
              LParen@15189..15190 "("
              Ident@15190..15197
                Ident@15190..15197 "param_x"
              Comma@15197..15198 ","
              Ident@15198..15205
                Ident@15198..15205 "state_x"
              RParen@15205..15206 ")"
        IfStmt@15206..15258
          If@15206..15208 "if"
          BinOp@15208..15220
            Ident@15208..15215
              Ident@15208..15215 "state_x"
            Eq@15215..15217 "=="
            LiteralExpr@15217..15220
              Nil@15217..15220 "nil"
          Then@15220..15224 "then"
          StmtList@15224..15255
            FuncCall@15224..15255
              Ident@15224..15229
                Ident@15224..15229 "error"
              FuncArgs@15229..15255
                LParen@15229..15230 "("
                LiteralExpr@15230..15254
                  String@15230..15254 "\"min: iterator is empty\""
                RParen@15254..15255 ")"
          End@15255..15258 "end"
        ForGenStmt@15258..15302
          For@15258..15261 "for"
          Ident@15261..15262 "_"
          Comma@15262..15263 ","
          Ident@15263..15264 "r"
          In@15264..15266 "in"
          ExprList@15266..15287
            Ident@15266..15271
              Ident@15266..15271 "gen_x"
            Comma@15271..15272 ","
            Ident@15272..15279
              Ident@15272..15279 "param_x"
            Comma@15279..15280 ","
            Ident@15280..15287
              Ident@15280..15287 "state_x"
          BlockStmt@15287..15302
            Do@15287..15289 "do"
            StmtList@15289..15299
              AssignStmt@15289..15299
                Ident@15289..15290
                  Ident@15289..15290 "m"
                Assign@15290..15291 "="
                FuncCall@15291..15299
                  Ident@15291..15294
                    Ident@15291..15294 "cmp"
                  FuncArgs@15294..15299
                    LParen@15294..15295 "("
                    Ident@15295..15296
                      Ident@15295..15296 "m"
                    Comma@15296..15297 ","
                    Ident@15297..15298
                      Ident@15297..15298 "r"
                    RParen@15298..15299 ")"
            End@15299..15302 "end"
        ReturnStmt@15302..15309
          Return@15302..15308 "return"
          Ident@15308..15309
            Ident@15308..15309 "m"
      End@15309..15312 "end"
  AssignStmt@15312..15342
    BinOp@15312..15326
      Ident@15312..15319
        Ident@15312..15319 "methods"
      Dot@15319..15320 "."
      Ident@15320..15326
        Ident@15320..15326 "min_by"
    Assign@15326..15327 "="
    FuncCall@15327..15342
      Ident@15327..15334
        Ident@15327..15334 "method1"
      FuncArgs@15334..15342
        LParen@15334..15335 "("
        Ident@15335..15341
          Ident@15335..15341 "min_by"
        RParen@15341..15342 ")"
  AssignStmt@15342..15372
    BinOp@15342..15356
      Ident@15342..15349
        Ident@15342..15349 "exports"
      Dot@15349..15350 "."
      Ident@15350..15356
        Ident@15350..15356 "min_by"
    Assign@15356..15357 "="
    FuncCall@15357..15372
      Ident@15357..15364
        Ident@15357..15364 "export1"
      FuncArgs@15364..15372
        LParen@15364..15365 "("
        Ident@15365..15371
          Ident@15365..15371 "min_by"
        RParen@15371..15372 ")"
  AssignStmt@15372..15405
    BinOp@15372..15390
      Ident@15372..15379
        Ident@15372..15379 "methods"
      Dot@15379..15380 "."
      Ident@15380..15390
        Ident@15380..15390 "minimum_by"
    Assign@15390..15391 "="
    BinOp@15391..15405
      Ident@15391..15398
        Ident@15391..15398 "methods"
      Dot@15398..15399 "."
      Ident@15399..15405
        Ident@15399..15405 "min_by"
  AssignStmt@15405..15438
    BinOp@15405..15423
      Ident@15405..15412
        Ident@15405..15412 "exports"
      Dot@15412..15413 "."
      Ident@15413..15423
        Ident@15413..15423 "minimum_by"
    Assign@15423..15424 "="
    BinOp@15424..15438
      Ident@15424..15431
        Ident@15424..15431 "exports"
      Dot@15431..15432 "."
      Ident@15432..15438
        Ident@15432..15438 "min_by"
  DeclStmt@15438..15682
    Local@15438..15443 "local"
    DeclTarget@15443..15446
      Ident@15443..15446 "max"
    Assign@15446..15447 "="
    FuncExpr@15447..15682
      Function@15447..15455 "function"
      FuncArgs@15455..15478
        LParen@15455..15456 "("
        Ident@15456..15461 "gen_x"
        Comma@15461..15462 ","
        Ident@15462..15469 "param_x"
        Comma@15469..15470 ","
        Ident@15470..15477 "state_x"
        RParen@15477..15478 ")"
      StmtList@15478..15679
        DeclStmt@15478..15515
          Local@15478..15483 "local"
          DeclTarget@15483..15490
            Ident@15483..15490 "state_x"
          Comma@15490..15491 ","
          DeclTarget@15491..15492
            Ident@15491..15492 "m"
          Assign@15492..15493 "="
          FuncCall@15493..15515
            Ident@15493..15498
              Ident@15493..15498 "gen_x"
            FuncArgs@15498..15515
              LParen@15498..15499 "("
              Ident@15499..15506
                Ident@15499..15506 "param_x"
              Comma@15506..15507 ","
              Ident@15507..15514
                Ident@15507..15514 "state_x"
              RParen@15514..15515 ")"
        IfStmt@15515..15567
          If@15515..15517 "if"
          BinOp@15517..15529
            Ident@15517..15524
              Ident@15517..15524 "state_x"
            Eq@15524..15526 "=="
            LiteralExpr@15526..15529
              Nil@15526..15529 "nil"
          Then@15529..15533 "then"
          StmtList@15533..15564
            FuncCall@15533..15564
              Ident@15533..15538
                Ident@15533..15538 "error"
              FuncArgs@15538..15564
                LParen@15538..15539 "("
                LiteralExpr@15539..15563
                  String@15539..15563 "\"max: iterator is empty\""
                RParen@15563..15564 ")"
          End@15564..15567 "end"
        DeclStmt@15567..15575
          Local@15567..15572 "local"
          DeclTarget@15572..15575
            Ident@15572..15575 "cmp"
        IfStmt@15575..15628
          If@15575..15577 "if"
          BinOp@15577..15594
            FuncCall@15577..15584
              Ident@15577..15581
                Ident@15577..15581 "type"
              FuncArgs@15581..15584
                LParen@15581..15582 "("
                Ident@15582..15583
                  Ident@15582..15583 "m"
                RParen@15583..15584 ")"
            Eq@15584..15586 "=="
            LiteralExpr@15586..15594
              String@15586..15594 "\"number\""
          Then@15594..15598 "then"
          StmtList@15598..15610
            AssignStmt@15598..15610
              Ident@15598..15601
                Ident@15598..15601 "cmp"
              Assign@15601..15602 "="
              BinOp@15602..15610
                Ident@15602..15606
                  Ident@15602..15606 "math"
                Dot@15606..15607 "."
                Ident@15607..15610
                  Ident@15607..15610 "max"
          ElseChain@15610..15628
            Else@15610..15614 "else"
            StmtList@15614..15625
              AssignStmt@15614..15625
                Ident@15614..15617
                  Ident@15614..15617 "cmp"
                Assign@15617..15618 "="
                Ident@15618..15625
                  Ident@15618..15625 "max_cmp"
            End@15625..15628 "end"
        ForGenStmt@15628..15672
          For@15628..15631 "for"
          Ident@15631..15632 "_"
          Comma@15632..15633 ","
          Ident@15633..15634 "r"
          In@15634..15636 "in"
          ExprList@15636..15657
            Ident@15636..15641
              Ident@15636..15641 "gen_x"
            Comma@15641..15642 ","
            Ident@15642..15649
              Ident@15642..15649 "param_x"
            Comma@15649..15650 ","
            Ident@15650..15657
              Ident@15650..15657 "state_x"
          BlockStmt@15657..15672
            Do@15657..15659 "do"
            StmtList@15659..15669
              AssignStmt@15659..15669
                Ident@15659..15660
                  Ident@15659..15660 "m"
                Assign@15660..15661 "="
                FuncCall@15661..15669
                  Ident@15661..15664
                    Ident@15661..15664 "cmp"
                  FuncArgs@15664..15669
                    LParen@15664..15665 "("
                    Ident@15665..15666
                      Ident@15665..15666 "m"
                    Comma@15666..15667 ","
                    Ident@15667..15668
                      Ident@15667..15668 "r"
                    RParen@15668..15669 ")"
            End@15669..15672 "end"
        ReturnStmt@15672..15679
          Return@15672..15678 "return"
          Ident@15678..15679
            Ident@15678..15679 "m"
      End@15679..15682 "end"
  AssignStmt@15682..15706
    BinOp@15682..15693
      Ident@15682..15689
        Ident@15682..15689 "methods"
      Dot@15689..15690 "."
      Ident@15690..15693
        Ident@15690..15693 "max"
    Assign@15693..15694 "="
    FuncCall@15694..15706
      Ident@15694..15701
        Ident@15694..15701 "method0"
      FuncArgs@15701..15706
        LParen@15701..15702 "("
        Ident@15702..15705
          Ident@15702..15705 "max"
        RParen@15705..15706 ")"
  AssignStmt@15706..15730
    BinOp@15706..15717
      Ident@15706..15713
        Ident@15706..15713 "exports"
      Dot@15713..15714 "."
      Ident@15714..15717
        Ident@15714..15717 "max"
    Assign@15717..15718 "="
    FuncCall@15718..15730
      Ident@15718..15725
        Ident@15718..15725 "export0"
      FuncArgs@15725..15730
        LParen@15725..15726 "("
        Ident@15726..15729
          Ident@15726..15729 "max"
        RParen@15729..15730 ")"
  AssignStmt@15730..15757
    BinOp@15730..15745
      Ident@15730..15737
        Ident@15730..15737 "methods"
      Dot@15737..15738 "."
      Ident@15738..15745
        Ident@15738..15745 "maximum"
    Assign@15745..15746 "="
    BinOp@15746..15757
      Ident@15746..15753
        Ident@15746..15753 "methods"
      Dot@15753..15754 "."
      Ident@15754..15757
        Ident@15754..15757 "max"
  AssignStmt@15757..15784
    BinOp@15757..15772
      Ident@15757..15764
        Ident@15757..15764 "exports"
      Dot@15764..15765 "."
      Ident@15765..15772
        Ident@15765..15772 "maximum"
    Assign@15772..15773 "="
    BinOp@15773..15784
      Ident@15773..15780
        Ident@15773..15780 "exports"
      Dot@15780..15781 "."
      Ident@15781..15784
        Ident@15781..15784 "max"
  DeclStmt@15784..15974
    Local@15784..15789 "local"
    DeclTarget@15789..15795
      Ident@15789..15795 "max_by"
    Assign@15795..15796 "="
    FuncExpr@15796..15974
      Function@15796..15804 "function"
      FuncArgs@15804..15831
        LParen@15804..15805 "("
        Ident@15805..15808 "cmp"
        Comma@15808..15809 ","
        Ident@15809..15814 "gen_x"
        Comma@15814..15815 ","
        Ident@15815..15822 "param_x"
        Comma@15822..15823 ","
        Ident@15823..15830 "state_x"
        RParen@15830..15831 ")"
      StmtList@15831..15971
        DeclStmt@15831..15868
          Local@15831..15836 "local"
          DeclTarget@15836..15843
            Ident@15836..15843 "state_x"
          Comma@15843..15844 ","
          DeclTarget@15844..15845
            Ident@15844..15845 "m"
          Assign@15845..15846 "="
          FuncCall@15846..15868
            Ident@15846..15851
              Ident@15846..15851 "gen_x"
            FuncArgs@15851..15868
              LParen@15851..15852 "("
              Ident@15852..15859
                Ident@15852..15859 "param_x"
              Comma@15859..15860 ","
              Ident@15860..15867
                Ident@15860..15867 "state_x"
              RParen@15867..15868 ")"
        IfStmt@15868..15920
          If@15868..15870 "if"
          BinOp@15870..15882
            Ident@15870..15877
              Ident@15870..15877 "state_x"
            Eq@15877..15879 "=="
            LiteralExpr@15879..15882
              Nil@15879..15882 "nil"
          Then@15882..15886 "then"
          StmtList@15886..15917
            FuncCall@15886..15917
              Ident@15886..15891
                Ident@15886..15891 "error"
              FuncArgs@15891..15917
                LParen@15891..15892 "("
                LiteralExpr@15892..15916
                  String@15892..15916 "\"max: iterator is empty\""
                RParen@15916..15917 ")"
          End@15917..15920 "end"
        ForGenStmt@15920..15964
          For@15920..15923 "for"
          Ident@15923..15924 "_"
          Comma@15924..15925 ","
          Ident@15925..15926 "r"
          In@15926..15928 "in"
          ExprList@15928..15949
            Ident@15928..15933
              Ident@15928..15933 "gen_x"
            Comma@15933..15934 ","
            Ident@15934..15941
              Ident@15934..15941 "param_x"
            Comma@15941..15942 ","
            Ident@15942..15949
              Ident@15942..15949 "state_x"
          BlockStmt@15949..15964
            Do@15949..15951 "do"
            StmtList@15951..15961
              AssignStmt@15951..15961
                Ident@15951..15952
                  Ident@15951..15952 "m"
                Assign@15952..15953 "="
                FuncCall@15953..15961
                  Ident@15953..15956
                    Ident@15953..15956 "cmp"
                  FuncArgs@15956..15961
                    LParen@15956..15957 "("
                    Ident@15957..15958
                      Ident@15957..15958 "m"
                    Comma@15958..15959 ","
                    Ident@15959..15960
                      Ident@15959..15960 "r"
                    RParen@15960..15961 ")"
            End@15961..15964 "end"
        ReturnStmt@15964..15971
          Return@15964..15970 "return"
          Ident@15970..15971
            Ident@15970..15971 "m"
      End@15971..15974 "end"
  AssignStmt@15974..16004
    BinOp@15974..15988
      Ident@15974..15981
        Ident@15974..15981 "methods"
      Dot@15981..15982 "."
      Ident@15982..15988
        Ident@15982..15988 "max_by"
    Assign@15988..15989 "="
    FuncCall@15989..16004
      Ident@15989..15996
        Ident@15989..15996 "method1"
      FuncArgs@15996..16004
        LParen@15996..15997 "("
        Ident@15997..16003
          Ident@15997..16003 "max_by"
        RParen@16003..16004 ")"
  AssignStmt@16004..16034
    BinOp@16004..16018
      Ident@16004..16011
        Ident@16004..16011 "exports"
      Dot@16011..16012 "."
      Ident@16012..16018
        Ident@16012..16018 "max_by"
    Assign@16018..16019 "="
    FuncCall@16019..16034
      Ident@16019..16026
        Ident@16019..16026 "export1"
      FuncArgs@16026..16034
        LParen@16026..16027 "("
        Ident@16027..16033
          Ident@16027..16033 "max_by"
        RParen@16033..16034 ")"
  AssignStmt@16034..16071
    BinOp@16034..16052
      Ident@16034..16041
        Ident@16034..16041 "methods"
      Dot@16041..16042 "."
      Ident@16042..16052
        Ident@16042..16052 "maximum_by"
    Assign@16052..16053 "="
    BinOp@16053..16071
      Ident@16053..16060
        Ident@16053..16060 "methods"
      Dot@16060..16061 "."
      Ident@16061..16071
        Ident@16061..16071 "maximum_by"
  AssignStmt@16071..16108
    BinOp@16071..16089
      Ident@16071..16078
        Ident@16071..16078 "exports"
      Dot@16078..16079 "."
      Ident@16079..16089
        Ident@16079..16089 "maximum_by"
    Assign@16089..16090 "="
    BinOp@16090..16108
      Ident@16090..16097
        Ident@16090..16097 "exports"
      Dot@16097..16098 "."
      Ident@16098..16108
        Ident@16098..16108 "maximum_by"
  DeclStmt@16108..16278
    Local@16108..16113 "local"
    DeclTarget@16113..16120
      Ident@16113..16120 "totable"
    Assign@16120..16121 "="
    FuncExpr@16121..16278
      Function@16121..16129 "function"
      FuncArgs@16129..16152
        LParen@16129..16130 "("
        Ident@16130..16135 "gen_x"
        Comma@16135..16136 ","
        Ident@16136..16143 "param_x"
        Comma@16143..16144 ","
        Ident@16144..16151 "state_x"
        RParen@16151..16152 ")"
      StmtList@16152..16275
        DeclStmt@16152..16171
          Local@16152..16157 "local"
          DeclTarget@16157..16160
            Ident@16157..16160 "tab"
          Comma@16160..16161 ","
          DeclTarget@16161..16164
            Ident@16161..16164 "key"
          Comma@16164..16165 ","
          DeclTarget@16165..16168
            Ident@16165..16168 "val"
          Assign@16168..16169 "="
          TableExpr@16169..16171
            LCurly@16169..16170 "{"
            RCurly@16170..16171 "}"
        WhileStmt@16171..16266
          While@16171..16176 "while"
          LiteralExpr@16176..16180
            True@16176..16180 "true"
          BlockStmt@16180..16266
            Do@16180..16182 "do"
            StmtList@16182..16263
              AssignStmt@16182..16216
                Ident@16182..16189
                  Ident@16182..16189 "state_x"
                Comma@16189..16190 ","
                Ident@16190..16193
                  Ident@16190..16193 "val"
                Assign@16193..16194 "="
                FuncCall@16194..16216
                  Ident@16194..16199
                    Ident@16194..16199 "gen_x"
                  FuncArgs@16199..16216
                    LParen@16199..16200 "("
                    Ident@16200..16207
                      Ident@16200..16207 "param_x"
                    Comma@16207..16208 ","
                    Ident@16208..16215
                      Ident@16208..16215 "state_x"
                    RParen@16215..16216 ")"
              IfStmt@16216..16242
                If@16216..16218 "if"
                BinOp@16218..16230
                  Ident@16218..16225
                    Ident@16218..16225 "state_x"
                  Eq@16225..16227 "=="
                  LiteralExpr@16227..16230
                    Nil@16227..16230 "nil"
                Then@16230..16234 "then"
                StmtList@16234..16239
                  BreakStmt@16234..16239
                    Break@16234..16239 "break"
                End@16239..16242 "end"
              FuncCall@16242..16263
                BinOp@16242..16254
                  Ident@16242..16247
                    Ident@16242..16247 "table"
                  Dot@16247..16248 "."
                  Ident@16248..16254
                    Ident@16248..16254 "insert"
                FuncArgs@16254..16263
                  LParen@16254..16255 "("
                  Ident@16255..16258
                    Ident@16255..16258 "tab"
                  Comma@16258..16259 ","
                  Ident@16259..16262
                    Ident@16259..16262 "val"
                  RParen@16262..16263 ")"
            End@16263..16266 "end"
        ReturnStmt@16266..16275
          Return@16266..16272 "return"
          Ident@16272..16275
            Ident@16272..16275 "tab"
      End@16275..16278 "end"
  AssignStmt@16278..16310
    BinOp@16278..16293
      Ident@16278..16285
        Ident@16278..16285 "methods"
      Dot@16285..16286 "."
      Ident@16286..16293
        Ident@16286..16293 "totable"
    Assign@16293..16294 "="
    FuncCall@16294..16310
      Ident@16294..16301
        Ident@16294..16301 "method0"
      FuncArgs@16301..16310
        LParen@16301..16302 "("
        Ident@16302..16309
          Ident@16302..16309 "totable"
        RParen@16309..16310 ")"
  AssignStmt@16310..16342
    BinOp@16310..16325
      Ident@16310..16317
        Ident@16310..16317 "exports"
      Dot@16317..16318 "."
      Ident@16318..16325
        Ident@16318..16325 "totable"
    Assign@16325..16326 "="
    FuncCall@16326..16342
      Ident@16326..16333
        Ident@16326..16333 "export0"
      FuncArgs@16333..16342
        LParen@16333..16334 "("
        Ident@16334..16341
          Ident@16334..16341 "totable"
        RParen@16341..16342 ")"
  DeclStmt@16342..16505
    Local@16342..16347 "local"
    DeclTarget@16347..16352
      Ident@16347..16352 "tomap"
    Assign@16352..16353 "="
    FuncExpr@16353..16505
      Function@16353..16361 "function"
      FuncArgs@16361..16384
        LParen@16361..16362 "("
        Ident@16362..16367 "gen_x"
        Comma@16367..16368 ","
        Ident@16368..16375 "param_x"
        Comma@16375..16376 ","
        Ident@16376..16383 "state_x"
        RParen@16383..16384 ")"
      StmtList@16384..16502
        DeclStmt@16384..16403
          Local@16384..16389 "local"
          DeclTarget@16389..16392
            Ident@16389..16392 "tab"
          Comma@16392..16393 ","
          DeclTarget@16393..16396
            Ident@16393..16396 "key"
          Comma@16396..16397 ","
          DeclTarget@16397..16400
            Ident@16397..16400 "val"
          Assign@16400..16401 "="
          TableExpr@16401..16403
            LCurly@16401..16402 "{"
            RCurly@16402..16403 "}"
        WhileStmt@16403..16493
          While@16403..16408 "while"
          LiteralExpr@16408..16412
            True@16408..16412 "true"
          BlockStmt@16412..16493
            Do@16412..16414 "do"
            StmtList@16414..16490
              AssignStmt@16414..16452
                Ident@16414..16421
                  Ident@16414..16421 "state_x"
                Comma@16421..16422 ","
                Ident@16422..16425
                  Ident@16422..16425 "key"
                Comma@16425..16426 ","
                Ident@16426..16429
                  Ident@16426..16429 "val"
                Assign@16429..16430 "="
                FuncCall@16430..16452
                  Ident@16430..16435
                    Ident@16430..16435 "gen_x"
                  FuncArgs@16435..16452
                    LParen@16435..16436 "("
                    Ident@16436..16443
                      Ident@16436..16443 "param_x"
                    Comma@16443..16444 ","
                    Ident@16444..16451
                      Ident@16444..16451 "state_x"
                    RParen@16451..16452 ")"
              IfStmt@16452..16478
                If@16452..16454 "if"
                BinOp@16454..16466
                  Ident@16454..16461
                    Ident@16454..16461 "state_x"
                  Eq@16461..16463 "=="
                  LiteralExpr@16463..16466
                    Nil@16463..16466 "nil"
                Then@16466..16470 "then"
                StmtList@16470..16475
                  BreakStmt@16470..16475
                    Break@16470..16475 "break"
                End@16475..16478 "end"
              AssignStmt@16478..16490
                Index@16478..16486
                  Ident@16478..16481
                    Ident@16478..16481 "tab"
                  LBracket@16481..16482 "["
                  Ident@16482..16485
                    Ident@16482..16485 "key"
                  RBracket@16485..16486 "]"
                Assign@16486..16487 "="
                Ident@16487..16490
                  Ident@16487..16490 "val"
            End@16490..16493 "end"
        ReturnStmt@16493..16502
          Return@16493..16499 "return"
          Ident@16499..16502
            Ident@16499..16502 "tab"
      End@16502..16505 "end"
  AssignStmt@16505..16533
    BinOp@16505..16518
      Ident@16505..16512
        Ident@16505..16512 "methods"
      Dot@16512..16513 "."
      Ident@16513..16518
        Ident@16513..16518 "tomap"
    Assign@16518..16519 "="
    FuncCall@16519..16533
      Ident@16519..16526
        Ident@16519..16526 "method0"
      FuncArgs@16526..16533
        LParen@16526..16527 "("
        Ident@16527..16532
          Ident@16527..16532 "tomap"
        RParen@16532..16533 ")"
  AssignStmt@16533..16561
    BinOp@16533..16546
      Ident@16533..16540
        Ident@16533..16540 "exports"
      Dot@16540..16541 "."
      Ident@16541..16546
        Ident@16541..16546 "tomap"
    Assign@16546..16547 "="
    FuncCall@16547..16561
      Ident@16547..16554
        Ident@16547..16554 "export0"
      FuncArgs@16554..16561
        LParen@16554..16555 "("
        Ident@16555..16560
          Ident@16555..16560 "tomap"
        RParen@16560..16561 ")"
  DeclStmt@16561..16696
    Local@16561..16566 "local"
    DeclTarget@16566..16573
      Ident@16566..16573 "map_gen"
    Assign@16573..16574 "="
    FuncExpr@16574..16696
      Function@16574..16582 "function"
      FuncArgs@16582..16595
        LParen@16582..16583 "("
        Ident@16583..16588 "param"
        Comma@16588..16589 ","
        Ident@16589..16594 "state"
        RParen@16594..16595 ")"
      StmtList@16595..16693
        DeclStmt@16595..16644
          Local@16595..16600 "local"
          DeclTarget@16600..16605
            Ident@16600..16605 "gen_x"
          Comma@16605..16606 ","
          DeclTarget@16606..16613
            Ident@16606..16613 "param_x"
          Comma@16613..16614 ","
          DeclTarget@16614..16617
            Ident@16614..16617 "fun"
          Assign@16617..16618 "="
          ExprList@16618..16644
            Index@16618..16626
              Ident@16618..16623
                Ident@16618..16623 "param"
              LBracket@16623..16624 "["
              LiteralExpr@16624..16625
                Int@16624..16625 "1"
              RBracket@16625..16626 "]"
            Comma@16626..16627 ","
            Index@16627..16635
              Ident@16627..16632
                Ident@16627..16632 "param"
              LBracket@16632..16633 "["
              LiteralExpr@16633..16634
                Int@16633..16634 "2"
              RBracket@16634..16635 "]"
            Comma@16635..16636 ","
            Index@16636..16644
              Ident@16636..16641
                Ident@16636..16641 "param"
              LBracket@16641..16642 "["
              LiteralExpr@16642..16643
                Int@16642..16643 "3"
              RBracket@16643..16644 "]"
        ReturnStmt@16644..16693
          Return@16644..16650 "return"
          FuncCall@16650..16693
            Ident@16650..16667
              Ident@16650..16667 "call_if_not_empty"
            FuncArgs@16667..16693
              LParen@16667..16668 "("
              Ident@16668..16671
                Ident@16668..16671 "fun"
              Comma@16671..16672 ","
              FuncCall@16672..16692
                Ident@16672..16677
                  Ident@16672..16677 "gen_x"
                FuncArgs@16677..16692
                  LParen@16677..16678 "("
                  Ident@16678..16685
                    Ident@16678..16685 "param_x"
                  Comma@16685..16686 ","
                  Ident@16686..16691
                    Ident@16686..16691 "state"
                  RParen@16691..16692 ")"
              RParen@16692..16693 ")"
      End@16693..16696 "end"
  DeclStmt@16696..16778
    Local@16696..16701 "local"
    DeclTarget@16701..16704
      Ident@16701..16704 "map"
    Assign@16704..16705 "="
    FuncExpr@16705..16778
      Function@16705..16713 "function"
      FuncArgs@16713..16734
        LParen@16713..16714 "("
        Ident@16714..16717 "fun"
        Comma@16717..16718 ","
        Ident@16718..16721 "gen"
        Comma@16721..16722 ","
        Ident@16722..16727 "param"
        Comma@16727..16728 ","
        Ident@16728..16733 "state"
        RParen@16733..16734 ")"
      StmtList@16734..16775
        ReturnStmt@16734..16775
          Return@16734..16740 "return"
          FuncCall@16740..16775
            Ident@16740..16744
              Ident@16740..16744 "wrap"
            FuncArgs@16744..16775
              LParen@16744..16745 "("
              Ident@16745..16752
                Ident@16745..16752 "map_gen"
              Comma@16752..16753 ","
              TableExpr@16753..16768
                LCurly@16753..16754 "{"
                TableArrayElem@16754..16757
                  Ident@16754..16757
                    Ident@16754..16757 "gen"
                Comma@16757..16758 ","
                TableArrayElem@16758..16763
                  Ident@16758..16763
                    Ident@16758..16763 "param"
                Comma@16763..16764 ","
                TableArrayElem@16764..16767
                  Ident@16764..16767
                    Ident@16764..16767 "fun"
                RCurly@16767..16768 "}"
              Comma@16768..16769 ","
              Ident@16769..16774
                Ident@16769..16774 "state"
              RParen@16774..16775 ")"
      End@16775..16778 "end"
  AssignStmt@16778..16802
    BinOp@16778..16789
      Ident@16778..16785
        Ident@16778..16785 "methods"
      Dot@16785..16786 "."
      Ident@16786..16789
        Ident@16786..16789 "map"
    Assign@16789..16790 "="
    FuncCall@16790..16802
      Ident@16790..16797
        Ident@16790..16797 "method1"
      FuncArgs@16797..16802
        LParen@16797..16798 "("
        Ident@16798..16801
          Ident@16798..16801 "map"
        RParen@16801..16802 ")"
  AssignStmt@16802..16826
    BinOp@16802..16813
      Ident@16802..16809
        Ident@16802..16809 "exports"
      Dot@16809..16810 "."
      Ident@16810..16813
        Ident@16810..16813 "map"
    Assign@16813..16814 "="
    FuncCall@16814..16826
      Ident@16814..16821
        Ident@16814..16821 "export1"
      FuncArgs@16821..16826
        LParen@16821..16822 "("
        Ident@16822..16825
          Ident@16822..16825 "map"
        RParen@16825..16826 ")"
  DeclStmt@16826..16937
    Local@16826..16831 "local"
    DeclTarget@16831..16849
      Ident@16831..16849 "enumerate_gen_call"
    Assign@16849..16850 "="
    FuncExpr@16850..16937
      Function@16850..16858 "function"
      FuncArgs@16858..16879
        LParen@16858..16859 "("
        Ident@16859..16864 "state"
        Comma@16864..16865 ","
        Ident@16865..16866 "i"
        Comma@16866..16867 ","
        Ident@16867..16874 "state_x"
        Comma@16874..16875 ","
        TDot@16875..16878 "..."
        RParen@16878..16879 ")"
      StmtList@16879..16934
        IfStmt@16879..16909
          If@16879..16881 "if"
          BinOp@16881..16893
            Ident@16881..16888
              Ident@16881..16888 "state_x"
            Eq@16888..16890 "=="
            LiteralExpr@16890..16893
              Nil@16890..16893 "nil"
          Then@16893..16897 "then"
          StmtList@16897..16906
            ReturnStmt@16897..16906
              Return@16897..16903 "return"
              LiteralExpr@16903..16906
                Nil@16903..16906 "nil"
          End@16906..16909 "end"
        ReturnStmt@16909..16934
          Return@16909..16915 "return"
          ExprList@16915..16934
            TableExpr@16915..16928
              LCurly@16915..16916 "{"
              TableArrayElem@16916..16919
                BinOp@16916..16919
                  Ident@16916..16917
                    Ident@16916..16917 "i"
                  Plus@16917..16918 "+"
                  LiteralExpr@16918..16919
                    Int@16918..16919 "1"
              Comma@16919..16920 ","
              TableArrayElem@16920..16927
                Ident@16920..16927
                  Ident@16920..16927 "state_x"
              RCurly@16927..16928 "}"
            Comma@16928..16929 ","
            Ident@16929..16930
              Ident@16929..16930 "i"
            Comma@16930..16931 ","
            VarArgExpr@16931..16934
              TDot@16931..16934 "..."
      End@16934..16937 "end"
  DeclStmt@16937..17104
    Local@16937..16942 "local"
    DeclTarget@16942..16955
      Ident@16942..16955 "enumerate_gen"
    Assign@16955..16956 "="
    FuncExpr@16956..17104
      Function@16956..16964 "function"
      FuncArgs@16964..16977
        LParen@16964..16965 "("
        Ident@16965..16970 "param"
        Comma@16970..16971 ","
        Ident@16971..16976 "state"
        RParen@16976..16977 ")"
      StmtList@16977..17101
        DeclStmt@16977..17013
          Local@16977..16982 "local"
          DeclTarget@16982..16987
            Ident@16982..16987 "gen_x"
          Comma@16987..16988 ","
          DeclTarget@16988..16995
            Ident@16988..16995 "param_x"
          Assign@16995..16996 "="
          ExprList@16996..17013
            Index@16996..17004
              Ident@16996..17001
                Ident@16996..17001 "param"
              LBracket@17001..17002 "["
              LiteralExpr@17002..17003
                Int@17002..17003 "1"
              RBracket@17003..17004 "]"
            Comma@17004..17005 ","
            Index@17005..17013
              Ident@17005..17010
                Ident@17005..17010 "param"
              LBracket@17010..17011 "["
              LiteralExpr@17011..17012
                Int@17011..17012 "2"
              RBracket@17012..17013 "]"
        DeclStmt@17013..17045
          Local@17013..17018 "local"
          DeclTarget@17018..17019
            Ident@17018..17019 "i"
          Comma@17019..17020 ","
          DeclTarget@17020..17027
            Ident@17020..17027 "state_x"
          Assign@17027..17028 "="
          ExprList@17028..17045
            Index@17028..17036
              Ident@17028..17033
                Ident@17028..17033 "state"
              LBracket@17033..17034 "["
              LiteralExpr@17034..17035
                Int@17034..17035 "1"
              RBracket@17035..17036 "]"
            Comma@17036..17037 ","
            Index@17037..17045
              Ident@17037..17042
                Ident@17037..17042 "state"
              LBracket@17042..17043 "["
              LiteralExpr@17043..17044
                Int@17043..17044 "2"
              RBracket@17044..17045 "]"
        ReturnStmt@17045..17101
          Return@17045..17051 "return"
          FuncCall@17051..17101
            Ident@17051..17069
              Ident@17051..17069 "enumerate_gen_call"
            FuncArgs@17069..17101
              LParen@17069..17070 "("
              Ident@17070..17075
                Ident@17070..17075 "state"
              Comma@17075..17076 ","
              Ident@17076..17077
                Ident@17076..17077 "i"
              Comma@17077..17078 ","
              FuncCall@17078..17100
                Ident@17078..17083
                  Ident@17078..17083 "gen_x"
                FuncArgs@17083..17100
                  LParen@17083..17084 "("
                  Ident@17084..17091
                    Ident@17084..17091 "param_x"
                  Comma@17091..17092 ","
                  Ident@17092..17099
                    Ident@17092..17099 "state_x"
                  RParen@17099..17100 ")"
              RParen@17100..17101 ")"
      End@17101..17104 "end"
  DeclStmt@17104..17194
    Local@17104..17109 "local"
    DeclTarget@17109..17118
      Ident@17109..17118 "enumerate"
    Assign@17118..17119 "="
    FuncExpr@17119..17194
      Function@17119..17127 "function"
      FuncArgs@17127..17144
        LParen@17127..17128 "("
        Ident@17128..17131 "gen"
        Comma@17131..17132 ","
        Ident@17132..17137 "param"
        Comma@17137..17138 ","
        Ident@17138..17143 "state"
        RParen@17143..17144 ")"
      StmtList@17144..17191
        ReturnStmt@17144..17191
          Return@17144..17150 "return"
          FuncCall@17150..17191
            Ident@17150..17154
              Ident@17150..17154 "wrap"
            FuncArgs@17154..17191
              LParen@17154..17155 "("
              Ident@17155..17168
                Ident@17155..17168 "enumerate_gen"
              Comma@17168..17169 ","
              TableExpr@17169..17180
                LCurly@17169..17170 "{"
                TableArrayElem@17170..17173
                  Ident@17170..17173
                    Ident@17170..17173 "gen"
                Comma@17173..17174 ","
                TableArrayElem@17174..17179
                  Ident@17174..17179
                    Ident@17174..17179 "param"
                RCurly@17179..17180 "}"
              Comma@17180..17181 ","
              TableExpr@17181..17190
                LCurly@17181..17182 "{"
                TableArrayElem@17182..17183
                  LiteralExpr@17182..17183
                    Int@17182..17183 "1"
                Comma@17183..17184 ","
                TableArrayElem@17184..17189
                  Ident@17184..17189
                    Ident@17184..17189 "state"
                RCurly@17189..17190 "}"
              RParen@17190..17191 ")"
      End@17191..17194 "end"
  AssignStmt@17194..17230
    BinOp@17194..17211
      Ident@17194..17201
        Ident@17194..17201 "methods"
      Dot@17201..17202 "."
      Ident@17202..17211
        Ident@17202..17211 "enumerate"
    Assign@17211..17212 "="
    FuncCall@17212..17230
      Ident@17212..17219
        Ident@17212..17219 "method0"
      FuncArgs@17219..17230
        LParen@17219..17220 "("
        Ident@17220..17229
          Ident@17220..17229 "enumerate"
        RParen@17229..17230 ")"
  AssignStmt@17230..17266
    BinOp@17230..17247
      Ident@17230..17237
        Ident@17230..17237 "exports"
      Dot@17237..17238 "."
      Ident@17238..17247
        Ident@17238..17247 "enumerate"
    Assign@17247..17248 "="
    FuncCall@17248..17266
      Ident@17248..17255
        Ident@17248..17255 "export0"
      FuncArgs@17255..17266
        LParen@17255..17256 "("
        Ident@17256..17265
          Ident@17256..17265 "enumerate"
        RParen@17265..17266 ")"
  DeclStmt@17266..17367
    Local@17266..17271 "local"
    DeclTarget@17271..17287
      Ident@17271..17287 "intersperse_call"
    Assign@17287..17288 "="
    FuncExpr@17288..17367
      Function@17288..17296 "function"
      FuncArgs@17296..17311
        LParen@17296..17297 "("
        Ident@17297..17298 "i"
        Comma@17298..17299 ","
        Ident@17299..17306 "state_x"
        Comma@17306..17307 ","
        TDot@17307..17310 "..."
        RParen@17310..17311 ")"
      StmtList@17311..17364
        IfStmt@17311..17341
          If@17311..17313 "if"
          BinOp@17313..17325
            Ident@17313..17320
              Ident@17313..17320 "state_x"
            Eq@17320..17322 "=="
            LiteralExpr@17322..17325
              Nil@17322..17325 "nil"
          Then@17325..17329 "then"
          StmtList@17329..17338
            ReturnStmt@17329..17338
              Return@17329..17335 "return"
              LiteralExpr@17335..17338
                Nil@17335..17338 "nil"
          End@17338..17341 "end"
        ReturnStmt@17341..17364
          Return@17341..17347 "return"
          ExprList@17347..17364
            TableExpr@17347..17360
              LCurly@17347..17348 "{"
              TableArrayElem@17348..17351
                BinOp@17348..17351
                  Ident@17348..17349
                    Ident@17348..17349 "i"
                  Plus@17349..17350 "+"
                  LiteralExpr@17350..17351
                    Int@17350..17351 "1"
              Comma@17351..17352 ","
              TableArrayElem@17352..17359
                Ident@17352..17359
                  Ident@17352..17359 "state_x"
              RCurly@17359..17360 "}"
            Comma@17360..17361 ","
            VarArgExpr@17361..17364
              TDot@17361..17364 "..."
      End@17364..17367 "end"
  DeclStmt@17367..17579
    Local@17367..17372 "local"
    DeclTarget@17372..17387
      Ident@17372..17387 "intersperse_gen"
    Assign@17387..17388 "="
    FuncExpr@17388..17579
      Function@17388..17396 "function"
      FuncArgs@17396..17409
        LParen@17396..17397 "("
        Ident@17397..17402 "param"
        Comma@17402..17403 ","
        Ident@17403..17408 "state"
        RParen@17408..17409 ")"
      StmtList@17409..17576
        DeclStmt@17409..17456
          Local@17409..17414 "local"
          DeclTarget@17414..17415
            Ident@17414..17415 "x"
          Comma@17415..17416 ","
          DeclTarget@17416..17421
            Ident@17416..17421 "gen_x"
          Comma@17421..17422 ","
          DeclTarget@17422..17429
            Ident@17422..17429 "param_x"
          Assign@17429..17430 "="
          ExprList@17430..17456
            Index@17430..17438
              Ident@17430..17435
                Ident@17430..17435 "param"
              LBracket@17435..17436 "["
              LiteralExpr@17436..17437
                Int@17436..17437 "1"
              RBracket@17437..17438 "]"
            Comma@17438..17439 ","
            Index@17439..17447
              Ident@17439..17444
                Ident@17439..17444 "param"
              LBracket@17444..17445 "["
              LiteralExpr@17445..17446
                Int@17445..17446 "2"
              RBracket@17446..17447 "]"
            Comma@17447..17448 ","
            Index@17448..17456
              Ident@17448..17453
                Ident@17448..17453 "param"
              LBracket@17453..17454 "["
              LiteralExpr@17454..17455
                Int@17454..17455 "3"
              RBracket@17455..17456 "]"
        DeclStmt@17456..17488
          Local@17456..17461 "local"
          DeclTarget@17461..17462
            Ident@17461..17462 "i"
          Comma@17462..17463 ","
          DeclTarget@17463..17470
            Ident@17463..17470 "state_x"
          Assign@17470..17471 "="
          ExprList@17471..17488
            Index@17471..17479
              Ident@17471..17476
                Ident@17471..17476 "state"
              LBracket@17476..17477 "["
              LiteralExpr@17477..17478
                Int@17477..17478 "1"
              RBracket@17478..17479 "]"
            Comma@17479..17480 ","
            Index@17480..17488
              Ident@17480..17485
                Ident@17480..17485 "state"
              LBracket@17485..17486 "["
              LiteralExpr@17486..17487
                Int@17486..17487 "2"
              RBracket@17487..17488 "]"
        IfStmt@17488..17576
          If@17488..17490 "if"
          BinOp@17490..17496
            BinOp@17490..17493
              Ident@17490..17491
                Ident@17490..17491 "i"
              Percent@17491..17492 "%"
              LiteralExpr@17492..17493
                Int@17492..17493 "2"
            Eq@17493..17495 "=="
            LiteralExpr@17495..17496
              Int@17495..17496 "1"
          Then@17496..17500 "then"
          StmtList@17500..17521
            ReturnStmt@17500..17521
              Return@17500..17506 "return"
              ExprList@17506..17521
                TableExpr@17506..17519
                  LCurly@17506..17507 "{"
                  TableArrayElem@17507..17510
                    BinOp@17507..17510
                      Ident@17507..17508
                        Ident@17507..17508 "i"
                      Plus@17508..17509 "+"
                      LiteralExpr@17509..17510
                        Int@17509..17510 "1"
                  Comma@17510..17511 ","
                  TableArrayElem@17511..17518
                    Ident@17511..17518
                      Ident@17511..17518 "state_x"
                  RCurly@17518..17519 "}"
                Comma@17519..17520 ","
                Ident@17520..17521
                  Ident@17520..17521 "x"
          ElseChain@17521..17576
            Else@17521..17525 "else"
            StmtList@17525..17573
              ReturnStmt@17525..17573
                Return@17525..17531 "return"
                FuncCall@17531..17573
                  Ident@17531..17547
                    Ident@17531..17547 "intersperse_call"
                  FuncArgs@17547..17573
                    LParen@17547..17548 "("
                    Ident@17548..17549
                      Ident@17548..17549 "i"
                    Comma@17549..17550 ","
                    FuncCall@17550..17572
                      Ident@17550..17555
                        Ident@17550..17555 "gen_x"
                      FuncArgs@17555..17572
                        LParen@17555..17556 "("
                        Ident@17556..17563
                          Ident@17556..17563 "param_x"
                        Comma@17563..17564 ","
                        Ident@17564..17571
                          Ident@17564..17571 "state_x"
                        RParen@17571..17572 ")"
                    RParen@17572..17573 ")"
            End@17573..17576 "end"
      End@17576..17579 "end"
  DeclStmt@17579..17677
    Local@17579..17584 "local"
    DeclTarget@17584..17595
      Ident@17584..17595 "intersperse"
    Assign@17595..17596 "="
    FuncExpr@17596..17677
      Function@17596..17604 "function"
      FuncArgs@17604..17623
        LParen@17604..17605 "("
        Ident@17605..17606 "x"
        Comma@17606..17607 ","
        Ident@17607..17610 "gen"
        Comma@17610..17611 ","
        Ident@17611..17616 "param"
        Comma@17616..17617 ","
        Ident@17617..17622 "state"
        RParen@17622..17623 ")"
      StmtList@17623..17674
        ReturnStmt@17623..17674
          Return@17623..17629 "return"
          FuncCall@17629..17674
            Ident@17629..17633
              Ident@17629..17633 "wrap"
            FuncArgs@17633..17674
              LParen@17633..17634 "("
              Ident@17634..17649
                Ident@17634..17649 "intersperse_gen"
              Comma@17649..17650 ","
              TableExpr@17650..17663
                LCurly@17650..17651 "{"
                TableArrayElem@17651..17652
                  Ident@17651..17652
                    Ident@17651..17652 "x"
                Comma@17652..17653 ","
                TableArrayElem@17653..17656
                  Ident@17653..17656
                    Ident@17653..17656 "gen"
                Comma@17656..17657 ","
                TableArrayElem@17657..17662
                  Ident@17657..17662
                    Ident@17657..17662 "param"
                RCurly@17662..17663 "}"
              Comma@17663..17664 ","
              TableExpr@17664..17673
                LCurly@17664..17665 "{"
                TableArrayElem@17665..17666
                  LiteralExpr@17665..17666
                    Int@17665..17666 "0"
                Comma@17666..17667 ","
                TableArrayElem@17667..17672
                  Ident@17667..17672
                    Ident@17667..17672 "state"
                RCurly@17672..17673 "}"
              RParen@17673..17674 ")"
      End@17674..17677 "end"
  AssignStmt@17677..17717
    BinOp@17677..17696
      Ident@17677..17684
        Ident@17677..17684 "methods"
      Dot@17684..17685 "."
      Ident@17685..17696
        Ident@17685..17696 "intersperse"
    Assign@17696..17697 "="
    FuncCall@17697..17717
      Ident@17697..17704
        Ident@17697..17704 "method1"
      FuncArgs@17704..17717
        LParen@17704..17705 "("
        Ident@17705..17716
          Ident@17705..17716 "intersperse"
        RParen@17716..17717 ")"
  AssignStmt@17717..17757
    BinOp@17717..17736
      Ident@17717..17724
        Ident@17717..17724 "exports"
      Dot@17724..17725 "."
      Ident@17725..17736
        Ident@17725..17736 "intersperse"
    Assign@17736..17737 "="
    FuncCall@17737..17757
      Ident@17737..17744
        Ident@17737..17744 "export1"
      FuncArgs@17744..17757
        LParen@17744..17745 "("
        Ident@17745..17756
          Ident@17745..17756 "intersperse"
        RParen@17756..17757 ")"
  DeclStmt@17757..18061
    Local@17757..17762 "local"
    FuncStmt@17762..18061
      Function@17762..17770 "function"
      Ident@17770..17779
        Ident@17770..17779 "zip_gen_r"
      FuncArgs@17779..17806
        LParen@17779..17780 "("
        Ident@17780..17785 "param"
        Comma@17785..17786 ","
        Ident@17786..17791 "state"
        Comma@17791..17792 ","
        Ident@17792..17801 "state_new"
        Comma@17801..17802 ","
        TDot@17802..17805 "..."
        RParen@17805..17806 ")"
      StmtList@17806..18058
        IfStmt@17806..17854
          If@17806..17808 "if"
          BinOp@17808..17828
            PrefixOp@17808..17818
              Hash@17808..17809 "#"
              Ident@17809..17818
                Ident@17809..17818 "state_new"
            Eq@17818..17820 "=="
            BinOp@17820..17828
              PrefixOp@17820..17826
                Hash@17820..17821 "#"
                Ident@17821..17826
                  Ident@17821..17826 "param"
              Slash@17826..17827 "/"
              LiteralExpr@17827..17828
                Int@17827..17828 "2"
          Then@17828..17832 "then"
          StmtList@17832..17851
            ReturnStmt@17832..17851
              Return@17832..17838 "return"
              ExprList@17838..17851
                Ident@17838..17847
                  Ident@17838..17847 "state_new"
                Comma@17847..17848 ","
                VarArgExpr@17848..17851
                  TDot@17848..17851 "..."
          End@17851..17854 "end"
        DeclStmt@17854..17873
          Local@17854..17859 "local"
          DeclTarget@17859..17860
            Ident@17859..17860 "i"
          Assign@17860..17861 "="
          BinOp@17861..17873
            PrefixOp@17861..17871
              Hash@17861..17862 "#"
              Ident@17862..17871
                Ident@17862..17871 "state_new"
            Plus@17871..17872 "+"
            LiteralExpr@17872..17873
              Int@17872..17873 "1"
        DeclStmt@17873..17915
          Local@17873..17878 "local"
          DeclTarget@17878..17883
            Ident@17878..17883 "gen_x"
          Comma@17883..17884 ","
          DeclTarget@17884..17891
            Ident@17884..17891 "param_x"
          Assign@17891..17892 "="
          ExprList@17892..17915
            Index@17892..17904
              Ident@17892..17897
                Ident@17892..17897 "param"
              LBracket@17897..17898 "["
              BinOp@17898..17903
                BinOp@17898..17901
                  LiteralExpr@17898..17899
                    Int@17898..17899 "2"
                  Star@17899..17900 "*"
                  Ident@17900..17901
                    Ident@17900..17901 "i"
                Minus@17901..17902 "-"
                LiteralExpr@17902..17903
                  Int@17902..17903 "1"
              RBracket@17903..17904 "]"
            Comma@17904..17905 ","
            Index@17905..17915
              Ident@17905..17910
                Ident@17905..17910 "param"
              LBracket@17910..17911 "["
              BinOp@17911..17914
                LiteralExpr@17911..17912
                  Int@17911..17912 "2"
                Star@17912..17913 "*"
                Ident@17913..17914
                  Ident@17913..17914 "i"
              RBracket@17914..17915 "]"
        DeclStmt@17915..17953
          Local@17915..17920 "local"
          DeclTarget@17920..17927
            Ident@17920..17927 "state_x"
          Comma@17927..17928 ","
          DeclTarget@17928..17929
            Ident@17928..17929 "r"
          Assign@17929..17930 "="
          FuncCall@17930..17953
            Ident@17930..17935
              Ident@17930..17935 "gen_x"
            FuncArgs@17935..17953
              LParen@17935..17936 "("
              Ident@17936..17943
                Ident@17936..17943 "param_x"
              Comma@17943..17944 ","
              Index@17944..17952
                Ident@17944..17949
                  Ident@17944..17949 "state"
                LBracket@17949..17950 "["
                Ident@17950..17951
                  Ident@17950..17951 "i"
                RBracket@17951..17952 "]"
              RParen@17952..17953 ")"
        IfStmt@17953..17983
          If@17953..17955 "if"
          BinOp@17955..17967
            Ident@17955..17962
              Ident@17955..17962 "state_x"
            Eq@17962..17964 "=="
            LiteralExpr@17964..17967
              Nil@17964..17967 "nil"
          Then@17967..17971 "then"
          StmtList@17971..17980
            ReturnStmt@17971..17980
              Return@17971..17977 "return"
              LiteralExpr@17977..17980
                Nil@17977..17980 "nil"
          End@17980..17983 "end"
        FuncCall@17983..18014
          BinOp@17983..17995
            Ident@17983..17988
              Ident@17983..17988 "table"
            Dot@17988..17989 "."
            Ident@17989..17995
              Ident@17989..17995 "insert"
          FuncArgs@17995..18014
            LParen@17995..17996 "("
            Ident@17996..18005
              Ident@17996..18005 "state_new"
            Comma@18005..18006 ","
            Ident@18006..18013
              Ident@18006..18013 "state_x"
            RParen@18013..18014 ")"
        ReturnStmt@18014..18058
          Return@18014..18020 "return"
          FuncCall@18020..18058
            Ident@18020..18029
              Ident@18020..18029 "zip_gen_r"
            FuncArgs@18029..18058
              LParen@18029..18030 "("
              Ident@18030..18035
                Ident@18030..18035 "param"
              Comma@18035..18036 ","
              Ident@18036..18041
                Ident@18036..18041 "state"
              Comma@18041..18042 ","
              Ident@18042..18051
                Ident@18042..18051 "state_new"
              Comma@18051..18052 ","
              Ident@18052..18053
                Ident@18052..18053 "r"
              Comma@18053..18054 ","
              VarArgExpr@18054..18057
                TDot@18054..18057 "..."
              RParen@18057..18058 ")"
      End@18058..18061 "end"
  DeclStmt@18061..18129
    Local@18061..18066 "local"
    DeclTarget@18066..18073
      Ident@18066..18073 "zip_gen"
    Assign@18073..18074 "="
    FuncExpr@18074..18129
      Function@18074..18082 "function"
      FuncArgs@18082..18095
        LParen@18082..18083 "("
        Ident@18083..18088 "param"
        Comma@18088..18089 ","
        Ident@18089..18094 "state"
        RParen@18094..18095 ")"
      StmtList@18095..18126
        ReturnStmt@18095..18126
          Return@18095..18101 "return"
          FuncCall@18101..18126
            Ident@18101..18110
              Ident@18101..18110 "zip_gen_r"
            FuncArgs@18110..18126
              LParen@18110..18111 "("
              Ident@18111..18116
                Ident@18111..18116 "param"
              Comma@18116..18117 ","
              Ident@18117..18122
                Ident@18117..18122 "state"
              Comma@18122..18123 ","
              TableExpr@18123..18125
                LCurly@18123..18124 "{"
                RCurly@18124..18125 "}"
              RParen@18125..18126 ")"
      End@18126..18129 "end"
  DeclStmt@18129..18344
    Local@18129..18134 "local"
    DeclTarget@18134..18141
      Ident@18134..18141 "numargs"
    Assign@18141..18142 "="
    FuncExpr@18142..18344
      Function@18142..18150 "function"
      FuncArgs@18150..18155
        LParen@18150..18151 "("
        TDot@18151..18154 "..."
        RParen@18154..18155 ")"
      StmtList@18155..18341
        DeclStmt@18155..18177
          Local@18155..18160 "local"
          DeclTarget@18160..18161
            Ident@18160..18161 "n"
          Assign@18161..18162 "="
          FuncCall@18162..18177
            Ident@18162..18168
              Ident@18162..18168 "select"
            FuncArgs@18168..18177
              LParen@18168..18169 "("
              LiteralExpr@18169..18172
                String@18169..18172 "'#'"
              Comma@18172..18173 ","
              VarArgExpr@18173..18176
                TDot@18173..18176 "..."
              RParen@18176..18177 ")"
        IfStmt@18177..18334
          If@18177..18179 "if"
          BinOp@18179..18183
            Ident@18179..18180
              Ident@18179..18180 "n"
            GEq@18180..18182 ">="
            LiteralExpr@18182..18183
              Int@18182..18183 "3"
          Then@18183..18187 "then"
          StmtList@18187..18331
            DeclStmt@18187..18210
              Local@18187..18192 "local"
              DeclTarget@18192..18194
                Ident@18192..18194 "it"
              Assign@18194..18195 "="
              FuncCall@18195..18210
                Ident@18195..18201
                  Ident@18195..18201 "select"
                FuncArgs@18201..18210
                  LParen@18201..18202 "("
                  BinOp@18202..18205
                    Ident@18202..18203
                      Ident@18202..18203 "n"
                    Minus@18203..18204 "-"
                    LiteralExpr@18204..18205
                      Int@18204..18205 "2"
                  Comma@18205..18206 ","
                  VarArgExpr@18206..18209
                    TDot@18206..18209 "..."
                  RParen@18209..18210 ")"
            IfStmt@18210..18331
              If@18210..18212 "if"
              BinOp@18212..18315
                BinOp@18212..18289
                  BinOp@18212..18261
                    BinOp@18212..18229
                      FuncCall@18212..18220
                        Ident@18212..18216
                          Ident@18212..18216 "type"
                        FuncArgs@18216..18220
                          LParen@18216..18217 "("
                          Ident@18217..18219
                            Ident@18217..18219 "it"
                          RParen@18219..18220 ")"
                      Eq@18220..18222 "=="
                      LiteralExpr@18222..18229
                        String@18222..18229 "'table'"
                    And@18229..18232 "and"
                    BinOp@18232..18261
                      FuncCall@18232..18248
                        Ident@18232..18244
                          Ident@18232..18244 "getmetatable"
                        FuncArgs@18244..18248
                          LParen@18244..18245 "("
                          Ident@18245..18247
                            Ident@18245..18247 "it"
                          RParen@18247..18248 ")"
                      Eq@18248..18250 "=="
                      Ident@18250..18261
                        Ident@18250..18261 "iterator_mt"
                  And@18261..18264 "and"
                  BinOp@18264..18289
                    BinOp@18264..18272
                      Ident@18264..18266
                        Ident@18264..18266 "it"
                      Dot@18266..18267 "."
                      Ident@18267..18272
                        Ident@18267..18272 "param"
                    Eq@18272..18274 "=="
                    FuncCall@18274..18289
                      Ident@18274..18280
                        Ident@18274..18280 "select"
                      FuncArgs@18280..18289
                        LParen@18280..18281 "("
                        BinOp@18281..18284
                          Ident@18281..18282
                            Ident@18281..18282 "n"
                          Minus@18282..18283 "-"
                          LiteralExpr@18283..18284
                            Int@18283..18284 "1"
                        Comma@18284..18285 ","
                        VarArgExpr@18285..18288
                          TDot@18285..18288 "..."
                        RParen@18288..18289 ")"
                And@18289..18292 "and"
                BinOp@18292..18315
                  BinOp@18292..18300
                    Ident@18292..18294
                      Ident@18292..18294 "it"
                    Dot@18294..18295 "."
                    Ident@18295..18300
                      Ident@18295..18300 "state"
                  Eq@18300..18302 "=="
                  FuncCall@18302..18315
                    Ident@18302..18308
                      Ident@18302..18308 "select"
                    FuncArgs@18308..18315
                      LParen@18308..18309 "("
                      Ident@18309..18310
                        Ident@18309..18310 "n"
                      Comma@18310..18311 ","
                      VarArgExpr@18311..18314
                        TDot@18311..18314 "..."
                      RParen@18314..18315 ")"
              Then@18315..18319 "then"
              StmtList@18319..18328
                ReturnStmt@18319..18328
                  Return@18319..18325 "return"
                  BinOp@18325..18328
                    Ident@18325..18326
                      Ident@18325..18326 "n"
                    Minus@18326..18327 "-"
                    LiteralExpr@18327..18328
                      Int@18327..18328 "2"
              End@18328..18331 "end"
          End@18331..18334 "end"
        ReturnStmt@18334..18341
          Return@18334..18340 "return"
          Ident@18340..18341
            Ident@18340..18341 "n"
      End@18341..18344 "end"
  DeclStmt@18344..18650
    Local@18344..18349 "local"
    DeclTarget@18349..18352
      Ident@18349..18352 "zip"
    Assign@18352..18353 "="
    FuncExpr@18353..18650
      Function@18353..18361 "function"
      FuncArgs@18361..18366
        LParen@18361..18362 "("
        TDot@18362..18365 "..."
        RParen@18365..18366 ")"
      StmtList@18366..18647
        DeclStmt@18366..18385
          Local@18366..18371 "local"
          DeclTarget@18371..18372
            Ident@18371..18372 "n"
          Assign@18372..18373 "="
          FuncCall@18373..18385
            Ident@18373..18380
              Ident@18373..18380 "numargs"
            FuncArgs@18380..18385
              LParen@18380..18381 "("
              VarArgExpr@18381..18384
                TDot@18381..18384 "..."
              RParen@18384..18385 ")"
        IfStmt@18385..18425
          If@18385..18387 "if"
          BinOp@18387..18391
            Ident@18387..18388
              Ident@18387..18388 "n"
            Eq@18388..18390 "=="
            LiteralExpr@18390..18391
              Int@18390..18391 "0"
          Then@18391..18395 "then"
          StmtList@18395..18422
            ReturnStmt@18395..18422
              Return@18395..18401 "return"
              FuncCall@18401..18422
                Ident@18401..18405
                  Ident@18401..18405 "wrap"
                FuncArgs@18405..18422
                  LParen@18405..18406 "("
                  Ident@18406..18413
                    Ident@18406..18413 "nil_gen"
                  Comma@18413..18414 ","
                  LiteralExpr@18414..18417
                    Nil@18414..18417 "nil"
                  Comma@18417..18418 ","
                  LiteralExpr@18418..18421
                    Nil@18418..18421 "nil"
                  RParen@18421..18422 ")"
          End@18422..18425 "end"
        DeclStmt@18425..18445
          Local@18425..18430 "local"
          DeclTarget@18430..18435
            Ident@18430..18435 "param"
          Assign@18435..18436 "="
          TableExpr@18436..18445
            LCurly@18436..18437 "{"
            TableGenericElem@18437..18444
              LBracket@18437..18438 "["
              BinOp@18438..18441
                LiteralExpr@18438..18439
                  Int@18438..18439 "2"
                Star@18439..18440 "*"
                Ident@18440..18441
                  Ident@18440..18441 "n"
              RBracket@18441..18442 "]"
              Assign@18442..18443 "="
              LiteralExpr@18443..18444
                Int@18443..18444 "0"
            RCurly@18444..18445 "}"
        DeclStmt@18445..18463
          Local@18445..18450 "local"
          DeclTarget@18450..18455
            Ident@18450..18455 "state"
          Assign@18455..18456 "="
          TableExpr@18456..18463
            LCurly@18456..18457 "{"
            TableGenericElem@18457..18462
              LBracket@18457..18458 "["
              Ident@18458..18459
                Ident@18458..18459 "n"
              RBracket@18459..18460 "]"
              Assign@18460..18461 "="
              LiteralExpr@18461..18462
                Int@18461..18462 "0"
            RCurly@18462..18463 "}"
        DeclStmt@18463..18491
          Local@18463..18468 "local"
          DeclTarget@18468..18469
            Ident@18468..18469 "i"
          Comma@18469..18470 ","
          DeclTarget@18470..18475
            Ident@18470..18475 "gen_x"
          Comma@18475..18476 ","
          DeclTarget@18476..18483
            Ident@18476..18483 "param_x"
          Comma@18483..18484 ","
          DeclTarget@18484..18491
            Ident@18484..18491 "state_x"
        ForNumStmt@18491..18616
          For@18491..18494 "for"
          Ident@18494..18495 "i"
          Assign@18495..18496 "="
          LiteralExpr@18496..18497
            Int@18496..18497 "1"
          Comma@18497..18498 ","
          Ident@18498..18499
            Ident@18498..18499 "n"
          Comma@18499..18500 ","
          LiteralExpr@18500..18501
            Int@18500..18501 "1"
          BlockStmt@18501..18616
            Do@18501..18503 "do"
            StmtList@18503..18613
              DeclStmt@18503..18528
                Local@18503..18508 "local"
                DeclTarget@18508..18510
                  Ident@18508..18510 "it"
                Assign@18510..18511 "="
                FuncCall@18511..18528
                  Ident@18511..18517
                    Ident@18511..18517 "select"
                  FuncArgs@18517..18528
                    LParen@18517..18518 "("
                    BinOp@18518..18523
                      BinOp@18518..18521
                        Ident@18518..18519
                          Ident@18518..18519 "n"
                        Minus@18519..18520 "-"
                        Ident@18520..18521
                          Ident@18520..18521 "i"
                      Plus@18521..18522 "+"
                      LiteralExpr@18522..18523
                        Int@18522..18523 "1"
                    Comma@18523..18524 ","
                    VarArgExpr@18524..18527
                      TDot@18524..18527 "..."
                    RParen@18527..18528 ")"
              AssignStmt@18528..18561
                Ident@18528..18533
                  Ident@18528..18533 "gen_x"
                Comma@18533..18534 ","
                Ident@18534..18541
                  Ident@18534..18541 "param_x"
                Comma@18541..18542 ","
                Ident@18542..18549
                  Ident@18542..18549 "state_x"
                Assign@18549..18550 "="
                FuncCall@18550..18561
                  Ident@18550..18557
                    Ident@18550..18557 "rawiter"
                  FuncArgs@18557..18561
                    LParen@18557..18558 "("
                    Ident@18558..18560
                      Ident@18558..18560 "it"
                    RParen@18560..18561 ")"
              AssignStmt@18561..18579
                Index@18561..18573
                  Ident@18561..18566
                    Ident@18561..18566 "param"
                  LBracket@18566..18567 "["
                  BinOp@18567..18572
                    BinOp@18567..18570
                      LiteralExpr@18567..18568
                        Int@18567..18568 "2"
                      Star@18568..18569 "*"
                      Ident@18569..18570
                        Ident@18569..18570 "i"
                    Minus@18570..18571 "-"
                    LiteralExpr@18571..18572
                      Int@18571..18572 "1"
                  RBracket@18572..18573 "]"
                Assign@18573..18574 "="
                Ident@18574..18579
                  Ident@18574..18579 "gen_x"
              AssignStmt@18579..18597
                Index@18579..18589
                  Ident@18579..18584
                    Ident@18579..18584 "param"
                  LBracket@18584..18585 "["
                  BinOp@18585..18588
                    LiteralExpr@18585..18586
                      Int@18585..18586 "2"
                    Star@18586..18587 "*"
                    Ident@18587..18588
                      Ident@18587..18588 "i"
                  RBracket@18588..18589 "]"
                Assign@18589..18590 "="
                Ident@18590..18597
                  Ident@18590..18597 "param_x"
              AssignStmt@18597..18613
                Index@18597..18605
                  Ident@18597..18602
                    Ident@18597..18602 "state"
                  LBracket@18602..18603 "["
                  Ident@18603..18604
                    Ident@18603..18604 "i"
                  RBracket@18604..18605 "]"
                Assign@18605..18606 "="
                Ident@18606..18613
                  Ident@18606..18613 "state_x"
            End@18613..18616 "end"
        ReturnStmt@18616..18647
          Return@18616..18622 "return"
          FuncCall@18622..18647
            Ident@18622..18626
              Ident@18622..18626 "wrap"
            FuncArgs@18626..18647
              LParen@18626..18627 "("
              Ident@18627..18634
                Ident@18627..18634 "zip_gen"
              Comma@18634..18635 ","
              Ident@18635..18640
                Ident@18635..18640 "param"
              Comma@18640..18641 ","
              Ident@18641..18646
                Ident@18641..18646 "state"
              RParen@18646..18647 ")"
      End@18647..18650 "end"
  AssignStmt@18650..18665
    BinOp@18650..18661
      Ident@18650..18657
        Ident@18650..18657 "methods"
      Dot@18657..18658 "."
      Ident@18658..18661
        Ident@18658..18661 "zip"
    Assign@18661..18662 "="
    Ident@18662..18665
      Ident@18662..18665 "zip"
  AssignStmt@18665..18680
    BinOp@18665..18676
      Ident@18665..18672
        Ident@18665..18672 "exports"
      Dot@18672..18673 "."
      Ident@18673..18676
        Ident@18673..18676 "zip"
    Assign@18676..18677 "="
    Ident@18677..18680
      Ident@18677..18680 "zip"
  DeclStmt@18680..18861
    Local@18680..18685 "local"
    DeclTarget@18685..18699
      Ident@18685..18699 "cycle_gen_call"
    Assign@18699..18700 "="
    FuncExpr@18700..18861
      Function@18700..18708 "function"
      FuncArgs@18708..18727
        LParen@18708..18709 "("
        Ident@18709..18714 "param"
        Comma@18714..18715 ","
        Ident@18715..18722 "state_x"
        Comma@18722..18723 ","
        TDot@18723..18726 "..."
        RParen@18726..18727 ")"
      StmtList@18727..18858
        IfStmt@18727..18841
          If@18727..18729 "if"
          BinOp@18729..18741
            Ident@18729..18736
              Ident@18729..18736 "state_x"
            Eq@18736..18738 "=="
            LiteralExpr@18738..18741
              Nil@18738..18741 "nil"
          Then@18741..18745 "then"
          StmtList@18745..18838
            DeclStmt@18745..18799
              Local@18745..18750 "local"
              DeclTarget@18750..18755
                Ident@18750..18755 "gen_x"
              Comma@18755..18756 ","
              DeclTarget@18756..18763
                Ident@18756..18763 "param_x"
              Comma@18763..18764 ","
              DeclTarget@18764..18772
                Ident@18764..18772 "state_x0"
              Assign@18772..18773 "="
              ExprList@18773..18799
                Index@18773..18781
                  Ident@18773..18778
                    Ident@18773..18778 "param"
                  LBracket@18778..18779 "["
                  LiteralExpr@18779..18780
                    Int@18779..18780 "1"
                  RBracket@18780..18781 "]"
                Comma@18781..18782 ","
                Index@18782..18790
                  Ident@18782..18787
                    Ident@18782..18787 "param"
                  LBracket@18787..18788 "["
                  LiteralExpr@18788..18789
                    Int@18788..18789 "2"
                  RBracket@18789..18790 "]"
                Comma@18790..18791 ","
                Index@18791..18799
                  Ident@18791..18796
                    Ident@18791..18796 "param"
                  LBracket@18796..18797 "["
                  LiteralExpr@18797..18798
                    Int@18797..18798 "3"
                  RBracket@18798..18799 "]"
            ReturnStmt@18799..18838
              Return@18799..18805 "return"
              FuncCall@18805..18838
                Ident@18805..18810
                  Ident@18805..18810 "gen_x"
                FuncArgs@18810..18838
                  LParen@18810..18811 "("
                  Ident@18811..18818
                    Ident@18811..18818 "param_x"
                  Comma@18818..18819 ","
                  FuncCall@18819..18837
                    Ident@18819..18827
                      Ident@18819..18827 "deepcopy"
                    FuncArgs@18827..18837
                      LParen@18827..18828 "("
                      Ident@18828..18836
                        Ident@18828..18836 "state_x0"
                      RParen@18836..18837 ")"
                  RParen@18837..18838 ")"
          End@18838..18841 "end"
        ReturnStmt@18841..18858
          Return@18841..18847 "return"
          ExprList@18847..18858
            Ident@18847..18854
              Ident@18847..18854 "state_x"
            Comma@18854..18855 ","
            VarArgExpr@18855..18858
              TDot@18855..18858 "..."
      End@18858..18861 "end"
  DeclStmt@18861..19006
    Local@18861..18866 "local"
    DeclTarget@18866..18875
      Ident@18866..18875 "cycle_gen"
    Assign@18875..18876 "="
    FuncExpr@18876..19006
      Function@18876..18884 "function"
      FuncArgs@18884..18899
        LParen@18884..18885 "("
        Ident@18885..18890 "param"
        Comma@18890..18891 ","
        Ident@18891..18898 "state_x"
        RParen@18898..18899 ")"
      StmtList@18899..19003
        DeclStmt@18899..18953
          Local@18899..18904 "local"
          DeclTarget@18904..18909
            Ident@18904..18909 "gen_x"
          Comma@18909..18910 ","
          DeclTarget@18910..18917
            Ident@18910..18917 "param_x"
          Comma@18917..18918 ","
          DeclTarget@18918..18926
            Ident@18918..18926 "state_x0"
          Assign@18926..18927 "="
          ExprList@18927..18953
            Index@18927..18935
              Ident@18927..18932
                Ident@18927..18932 "param"
              LBracket@18932..18933 "["
              LiteralExpr@18933..18934
                Int@18933..18934 "1"
              RBracket@18934..18935 "]"
            Comma@18935..18936 ","
            Index@18936..18944
              Ident@18936..18941
                Ident@18936..18941 "param"
              LBracket@18941..18942 "["
              LiteralExpr@18942..18943
                Int@18942..18943 "2"
              RBracket@18943..18944 "]"
            Comma@18944..18945 ","
            Index@18945..18953
              Ident@18945..18950
                Ident@18945..18950 "param"
              LBracket@18950..18951 "["
              LiteralExpr@18951..18952
                Int@18951..18952 "3"
              RBracket@18952..18953 "]"
        ReturnStmt@18953..19003
          Return@18953..18959 "return"
          FuncCall@18959..19003
            Ident@18959..18973
              Ident@18959..18973 "cycle_gen_call"
            FuncArgs@18973..19003
              LParen@18973..18974 "("
              Ident@18974..18979
                Ident@18974..18979 "param"
              Comma@18979..18980 ","
              FuncCall@18980..19002
                Ident@18980..18985
                  Ident@18980..18985 "gen_x"
                FuncArgs@18985..19002
                  LParen@18985..18986 "("
                  Ident@18986..18993
                    Ident@18986..18993 "param_x"
                  Comma@18993..18994 ","
                  Ident@18994..19001
                    Ident@18994..19001 "state_x"
                  RParen@19001..19002 ")"
              RParen@19002..19003 ")"
      End@19003..19006 "end"
  DeclStmt@19006..19100
    Local@19006..19011 "local"
    DeclTarget@19011..19016
      Ident@19011..19016 "cycle"
    Assign@19016..19017 "="
    FuncExpr@19017..19100
      Function@19017..19025 "function"
      FuncArgs@19025..19042
        LParen@19025..19026 "("
        Ident@19026..19029 "gen"
        Comma@19029..19030 ","
        Ident@19030..19035 "param"
        Comma@19035..19036 ","
        Ident@19036..19041 "state"
        RParen@19041..19042 ")"
      StmtList@19042..19097
        ReturnStmt@19042..19097
          Return@19042..19048 "return"
          FuncCall@19048..19097
            Ident@19048..19052
              Ident@19048..19052 "wrap"
            FuncArgs@19052..19097
              LParen@19052..19053 "("
              Ident@19053..19062
                Ident@19053..19062 "cycle_gen"
              Comma@19062..19063 ","
              TableExpr@19063..19080
                LCurly@19063..19064 "{"
                TableArrayElem@19064..19067
                  Ident@19064..19067
                    Ident@19064..19067 "gen"
                Comma@19067..19068 ","
                TableArrayElem@19068..19073
                  Ident@19068..19073
                    Ident@19068..19073 "param"
                Comma@19073..19074 ","
                TableArrayElem@19074..19079
                  Ident@19074..19079
                    Ident@19074..19079 "state"
                RCurly@19079..19080 "}"
              Comma@19080..19081 ","
              FuncCall@19081..19096
                Ident@19081..19089
                  Ident@19081..19089 "deepcopy"
                FuncArgs@19089..19096
                  LParen@19089..19090 "("
                  Ident@19090..19095
                    Ident@19090..19095 "state"
                  RParen@19095..19096 ")"
              RParen@19096..19097 ")"
      End@19097..19100 "end"
  AssignStmt@19100..19128
    BinOp@19100..19113
      Ident@19100..19107
        Ident@19100..19107 "methods"
      Dot@19107..19108 "."
      Ident@19108..19113
        Ident@19108..19113 "cycle"
    Assign@19113..19114 "="
    FuncCall@19114..19128
      Ident@19114..19121
        Ident@19114..19121 "method0"
      FuncArgs@19121..19128
        LParen@19121..19122 "("
        Ident@19122..19127
          Ident@19122..19127 "cycle"
        RParen@19127..19128 ")"
  AssignStmt@19128..19156
    BinOp@19128..19141
      Ident@19128..19135
        Ident@19128..19135 "exports"
      Dot@19135..19136 "."
      Ident@19136..19141
        Ident@19136..19141 "cycle"
    Assign@19141..19142 "="
    FuncCall@19142..19156
      Ident@19142..19149
        Ident@19142..19149 "export0"
      FuncArgs@19149..19156
        LParen@19149..19150 "("
        Ident@19150..19155
          Ident@19150..19155 "cycle"
        RParen@19155..19156 ")"
  DeclStmt@19156..19173
    Local@19156..19161 "local"
    DeclTarget@19161..19173
      Ident@19161..19173 "chain_gen_r1"
  DeclStmt@19173..19391
    Local@19173..19178 "local"
    DeclTarget@19178..19190
      Ident@19178..19190 "chain_gen_r2"
    Assign@19190..19191 "="
    FuncExpr@19191..19391
      Function@19191..19199 "function"
      FuncArgs@19199..19224
        LParen@19199..19200 "("
        Ident@19200..19205 "param"
        Comma@19205..19206 ","
        Ident@19206..19211 "state"
        Comma@19211..19212 ","
        Ident@19212..19219 "state_x"
        Comma@19219..19220 ","
        TDot@19220..19223 "..."
        RParen@19223..19224 ")"
      StmtList@19224..19388
        IfStmt@19224..19360
          If@19224..19226 "if"
          BinOp@19226..19238
            Ident@19226..19233
              Ident@19226..19233 "state_x"
            Eq@19233..19235 "=="
            LiteralExpr@19235..19238
              Nil@19235..19238 "nil"
          Then@19238..19242 "then"
          StmtList@19242..19357
            DeclStmt@19242..19257
              Local@19242..19247 "local"
              DeclTarget@19247..19248
                Ident@19247..19248 "i"
              Assign@19248..19249 "="
              Index@19249..19257
                Ident@19249..19254
                  Ident@19249..19254 "state"
                LBracket@19254..19255 "["
                LiteralExpr@19255..19256
                  Int@19255..19256 "1"
                RBracket@19256..19257 "]"
            AssignStmt@19257..19262
              Ident@19257..19258
                Ident@19257..19258 "i"
              Assign@19258..19259 "="
              BinOp@19259..19262
                Ident@19259..19260
                  Ident@19259..19260 "i"
                Plus@19260..19261 "+"
                LiteralExpr@19261..19262
                  Int@19261..19262 "1"
            IfStmt@19262..19297
              If@19262..19264 "if"
              BinOp@19264..19281
                Index@19264..19276
                  Ident@19264..19269
                    Ident@19264..19269 "param"
                  LBracket@19269..19270 "["
                  BinOp@19270..19275
                    BinOp@19270..19273
                      LiteralExpr@19270..19271
                        Int@19270..19271 "3"
                      Star@19271..19272 "*"
                      Ident@19272..19273
                        Ident@19272..19273 "i"
                    Minus@19273..19274 "-"
                    LiteralExpr@19274..19275
                      Int@19274..19275 "1"
                  RBracket@19275..19276 "]"
                Eq@19276..19278 "=="
                LiteralExpr@19278..19281
                  Nil@19278..19281 "nil"
              Then@19281..19285 "then"
              StmtList@19285..19294
                ReturnStmt@19285..19294
                  Return@19285..19291 "return"
                  LiteralExpr@19291..19294
                    Nil@19291..19294 "nil"
              End@19294..19297 "end"
            DeclStmt@19297..19320
              Local@19297..19302 "local"
              DeclTarget@19302..19309
                Ident@19302..19309 "state_x"
              Assign@19309..19310 "="
              Index@19310..19320
                Ident@19310..19315
                  Ident@19310..19315 "param"
                LBracket@19315..19316 "["
                BinOp@19316..19319
                  LiteralExpr@19316..19317
                    Int@19316..19317 "3"
                  Star@19317..19318 "*"
                  Ident@19318..19319
                    Ident@19318..19319 "i"
                RBracket@19319..19320 "]"
            ReturnStmt@19320..19357
              Return@19320..19326 "return"
              FuncCall@19326..19357
                Ident@19326..19338
                  Ident@19326..19338 "chain_gen_r1"
                FuncArgs@19338..19357
                  LParen@19338..19339 "("
                  Ident@19339..19344
                    Ident@19339..19344 "param"
                  Comma@19344..19345 ","
                  TableExpr@19345..19356
                    LCurly@19345..19346 "{"
                    TableArrayElem@19346..19347
                      Ident@19346..19347
                        Ident@19346..19347 "i"
                    Comma@19347..19348 ","
                    TableArrayElem@19348..19355
                      Ident@19348..19355
                        Ident@19348..19355 "state_x"
                    RCurly@19355..19356 "}"
                  RParen@19356..19357 ")"
          End@19357..19360 "end"
        ReturnStmt@19360..19388
          Return@19360..19366 "return"
          ExprList@19366..19388
            TableExpr@19366..19384
              LCurly@19366..19367 "{"
              TableArrayElem@19367..19375
                Index@19367..19375
                  Ident@19367..19372
                    Ident@19367..19372 "state"
                  LBracket@19372..19373 "["
                  LiteralExpr@19373..19374
                    Int@19373..19374 "1"
                  RBracket@19374..19375 "]"
              Comma@19375..19376 ","
              TableArrayElem@19376..19383
                Ident@19376..19383
                  Ident@19376..19383 "state_x"
              RCurly@19383..19384 "}"
            Comma@19384..19385 ","
            VarArgExpr@19385..19388
              TDot@19385..19388 "..."
      End@19388..19391 "end"
  AssignStmt@19391..19559
    Ident@19391..19403
      Ident@19391..19403 "chain_gen_r1"
    Assign@19403..19404 "="
    FuncExpr@19404..19559
      Function@19404..19412 "function"
      FuncArgs@19412..19425
        LParen@19412..19413 "("
        Ident@19413..19418 "param"
        Comma@19418..19419 ","
        Ident@19419..19424 "state"
        RParen@19424..19425 ")"
      StmtList@19425..19556
        DeclStmt@19425..19457
          Local@19425..19430 "local"
          DeclTarget@19430..19431
            Ident@19430..19431 "i"
          Comma@19431..19432 ","
          DeclTarget@19432..19439
            Ident@19432..19439 "state_x"
          Assign@19439..19440 "="
          ExprList@19440..19457
            Index@19440..19448
              Ident@19440..19445
                Ident@19440..19445 "state"
              LBracket@19445..19446 "["
              LiteralExpr@19446..19447
                Int@19446..19447 "1"
              RBracket@19447..19448 "]"
            Comma@19448..19449 ","
            Index@19449..19457
              Ident@19449..19454
                Ident@19449..19454 "state"
              LBracket@19454..19455 "["
              LiteralExpr@19455..19456
                Int@19455..19456 "2"
              RBracket@19456..19457 "]"
        DeclStmt@19457..19501
          Local@19457..19462 "local"
          DeclTarget@19462..19467
            Ident@19462..19467 "gen_x"
          Comma@19467..19468 ","
          DeclTarget@19468..19475
            Ident@19468..19475 "param_x"
          Assign@19475..19476 "="
          ExprList@19476..19501
            Index@19476..19488
              Ident@19476..19481
                Ident@19476..19481 "param"
              LBracket@19481..19482 "["
              BinOp@19482..19487
                BinOp@19482..19485
                  LiteralExpr@19482..19483
                    Int@19482..19483 "3"
                  Star@19483..19484 "*"
                  Ident@19484..19485
                    Ident@19484..19485 "i"
                Minus@19485..19486 "-"
                LiteralExpr@19486..19487
                  Int@19486..19487 "2"
              RBracket@19487..19488 "]"
            Comma@19488..19489 ","
            Index@19489..19501
              Ident@19489..19494
                Ident@19489..19494 "param"
              LBracket@19494..19495 "["
              BinOp@19495..19500
                BinOp@19495..19498
                  LiteralExpr@19495..19496
                    Int@19495..19496 "3"
                  Star@19496..19497 "*"
                  Ident@19497..19498
                    Ident@19497..19498 "i"
                Minus@19498..19499 "-"
                LiteralExpr@19499..19500
                  Int@19499..19500 "1"
              RBracket@19500..19501 "]"
        ReturnStmt@19501..19556
          Return@19501..19507 "return"
          FuncCall@19507..19556
            Ident@19507..19519
              Ident@19507..19519 "chain_gen_r2"
            FuncArgs@19519..19556
              LParen@19519..19520 "("
              Ident@19520..19525
                Ident@19520..19525 "param"
              Comma@19525..19526 ","
              Ident@19526..19531
                Ident@19526..19531 "state"
              Comma@19531..19532 ","
              FuncCall@19532..19555
                Ident@19532..19537
                  Ident@19532..19537 "gen_x"
                FuncArgs@19537..19555
                  LParen@19537..19538 "("
                  Ident@19538..19545
                    Ident@19538..19545 "param_x"
                  Comma@19545..19546 ","
                  Index@19546..19554
                    Ident@19546..19551
                      Ident@19546..19551 "state"
                    LBracket@19551..19552 "["
                    LiteralExpr@19552..19553
                      Int@19552..19553 "2"
                    RBracket@19553..19554 "]"
                  RParen@19554..19555 ")"
              RParen@19555..19556 ")"
      End@19556..19559 "end"
  DeclStmt@19559..19862
    Local@19559..19564 "local"
    DeclTarget@19564..19569
      Ident@19564..19569 "chain"
    Assign@19569..19570 "="
    FuncExpr@19570..19862
      Function@19570..19578 "function"
      FuncArgs@19578..19583
        LParen@19578..19579 "("
        TDot@19579..19582 "..."
        RParen@19582..19583 ")"
      StmtList@19583..19859
        DeclStmt@19583..19602
          Local@19583..19588 "local"
          DeclTarget@19588..19589
            Ident@19588..19589 "n"
          Assign@19589..19590 "="
          FuncCall@19590..19602
            Ident@19590..19597
              Ident@19590..19597 "numargs"
            FuncArgs@19597..19602
              LParen@19597..19598 "("
              VarArgExpr@19598..19601
                TDot@19598..19601 "..."
              RParen@19601..19602 ")"
        IfStmt@19602..19642
          If@19602..19604 "if"
          BinOp@19604..19608
            Ident@19604..19605
              Ident@19604..19605 "n"
            Eq@19605..19607 "=="
            LiteralExpr@19607..19608
              Int@19607..19608 "0"
          Then@19608..19612 "then"
          StmtList@19612..19639
            ReturnStmt@19612..19639
              Return@19612..19618 "return"
              FuncCall@19618..19639
                Ident@19618..19622
                  Ident@19618..19622 "wrap"
                FuncArgs@19622..19639
                  LParen@19622..19623 "("
                  Ident@19623..19630
                    Ident@19623..19630 "nil_gen"
                  Comma@19630..19631 ","
                  LiteralExpr@19631..19634
                    Nil@19631..19634 "nil"
                  Comma@19634..19635 ","
                  LiteralExpr@19635..19638
                    Nil@19635..19638 "nil"
                  RParen@19638..19639 ")"
          End@19639..19642 "end"
        DeclStmt@19642..19662
          Local@19642..19647 "local"
          DeclTarget@19647..19652
            Ident@19647..19652 "param"
          Assign@19652..19653 "="
          TableExpr@19653..19662
            LCurly@19653..19654 "{"
            TableGenericElem@19654..19661
              LBracket@19654..19655 "["
              BinOp@19655..19658
                LiteralExpr@19655..19656
                  Int@19655..19656 "3"
                Star@19656..19657 "*"
                Ident@19657..19658
                  Ident@19657..19658 "n"
              RBracket@19658..19659 "]"
              Assign@19659..19660 "="
              LiteralExpr@19660..19661
                Int@19660..19661 "0"
            RCurly@19661..19662 "}"
        DeclStmt@19662..19690
          Local@19662..19667 "local"
          DeclTarget@19667..19668
            Ident@19667..19668 "i"
          Comma@19668..19669 ","
          DeclTarget@19669..19674
            Ident@19669..19674 "gen_x"
          Comma@19674..19675 ","
          DeclTarget@19675..19682
            Ident@19675..19682 "param_x"
          Comma@19682..19683 ","
          DeclTarget@19683..19690
            Ident@19683..19690 "state_x"
        ForNumStmt@19690..19816
          For@19690..19693 "for"
          Ident@19693..19694 "i"
          Assign@19694..19695 "="
          LiteralExpr@19695..19696
            Int@19695..19696 "1"
          Comma@19696..19697 ","
          Ident@19697..19698
            Ident@19697..19698 "n"
          Comma@19698..19699 ","
          LiteralExpr@19699..19700
            Int@19699..19700 "1"
          BlockStmt@19700..19816
            Do@19700..19702 "do"
            StmtList@19702..19813
              DeclStmt@19702..19725
                Local@19702..19707 "local"
                DeclTarget@19707..19711
                  Ident@19707..19711 "elem"
                Assign@19711..19712 "="
                FuncCall@19712..19725
                  Ident@19712..19718
                    Ident@19712..19718 "select"
                  FuncArgs@19718..19725
                    LParen@19718..19719 "("
                    Ident@19719..19720
                      Ident@19719..19720 "i"
                    Comma@19720..19721 ","
                    VarArgExpr@19721..19724
                      TDot@19721..19724 "..."
                    RParen@19724..19725 ")"
              AssignStmt@19725..19757
                Ident@19725..19730
                  Ident@19725..19730 "gen_x"
                Comma@19730..19731 ","
                Ident@19731..19738
                  Ident@19731..19738 "param_x"
                Comma@19738..19739 ","
                Ident@19739..19746
                  Ident@19739..19746 "state_x"
                Assign@19746..19747 "="
                FuncCall@19747..19757
                  Ident@19747..19751
                    Ident@19747..19751 "iter"
                  FuncArgs@19751..19757
                    LParen@19751..19752 "("
                    Ident@19752..19756
                      Ident@19752..19756 "elem"
                    RParen@19756..19757 ")"
              AssignStmt@19757..19775
                Index@19757..19769
                  Ident@19757..19762
                    Ident@19757..19762 "param"
                  LBracket@19762..19763 "["
                  BinOp@19763..19768
                    BinOp@19763..19766
                      LiteralExpr@19763..19764
                        Int@19763..19764 "3"
                      Star@19764..19765 "*"
                      Ident@19765..19766
                        Ident@19765..19766 "i"
                    Minus@19766..19767 "-"
                    LiteralExpr@19767..19768
                      Int@19767..19768 "2"
                  RBracket@19768..19769 "]"
                Assign@19769..19770 "="
                Ident@19770..19775
                  Ident@19770..19775 "gen_x"
              AssignStmt@19775..19795
                Index@19775..19787
                  Ident@19775..19780
                    Ident@19775..19780 "param"
                  LBracket@19780..19781 "["
                  BinOp@19781..19786
                    BinOp@19781..19784
                      LiteralExpr@19781..19782
                        Int@19781..19782 "3"
                      Star@19782..19783 "*"
                      Ident@19783..19784
                        Ident@19783..19784 "i"
                    Minus@19784..19785 "-"
                    LiteralExpr@19785..19786
                      Int@19785..19786 "1"
                  RBracket@19786..19787 "]"
                Assign@19787..19788 "="
                Ident@19788..19795
                  Ident@19788..19795 "param_x"
              AssignStmt@19795..19813
                Index@19795..19805
                  Ident@19795..19800
                    Ident@19795..19800 "param"
                  LBracket@19800..19801 "["
                  BinOp@19801..19804
                    LiteralExpr@19801..19802
                      Int@19801..19802 "3"
                    Star@19802..19803 "*"
                    Ident@19803..19804
                      Ident@19803..19804 "i"
                  RBracket@19804..19805 "]"
                Assign@19805..19806 "="
                Ident@19806..19813
                  Ident@19806..19813 "state_x"
            End@19813..19816 "end"
        ReturnStmt@19816..19859
          Return@19816..19822 "return"
          FuncCall@19822..19859
            Ident@19822..19826
              Ident@19822..19826 "wrap"
            FuncArgs@19826..19859
              LParen@19826..19827 "("
              Ident@19827..19839
                Ident@19827..19839 "chain_gen_r1"
              Comma@19839..19840 ","
              Ident@19840..19845
                Ident@19840..19845 "param"
              Comma@19845..19846 ","
              TableExpr@19846..19858
                LCurly@19846..19847 "{"
                TableArrayElem@19847..19848
                  LiteralExpr@19847..19848
                    Int@19847..19848 "1"
                Comma@19848..19849 ","
                TableArrayElem@19849..19857
                  Index@19849..19857
                    Ident@19849..19854
                      Ident@19849..19854 "param"
                    LBracket@19854..19855 "["
                    LiteralExpr@19855..19856
                      Int@19855..19856 "3"
                    RBracket@19856..19857 "]"
                RCurly@19857..19858 "}"
              RParen@19858..19859 ")"
      End@19859..19862 "end"
  AssignStmt@19862..19881
    BinOp@19862..19875
      Ident@19862..19869
        Ident@19862..19869 "methods"
      Dot@19869..19870 "."
      Ident@19870..19875
        Ident@19870..19875 "chain"
    Assign@19875..19876 "="
    Ident@19876..19881
      Ident@19876..19881 "chain"
  AssignStmt@19881..19900
    BinOp@19881..19894
      Ident@19881..19888
        Ident@19881..19888 "exports"
      Dot@19888..19889 "."
      Ident@19889..19894
        Ident@19889..19894 "chain"
    Assign@19894..19895 "="
    Ident@19895..19900
      Ident@19895..19900 "chain"
  DeclStmt@19900..20716
    Local@19900..19905 "local"
    DeclTarget@19905..19913
      Ident@19905..19913 "operator"
    Assign@19913..19914 "="
    TableExpr@19914..20716
      LCurly@19914..19915 "{"
      TableMapElem@19915..19943
        Ident@19915..19917 "lt"
        Assign@19917..19918 "="
        FuncExpr@19918..19943
          Function@19918..19926 "function"
          FuncArgs@19926..19931
            LParen@19926..19927 "("
            Ident@19927..19928 "a"
            Comma@19928..19929 ","
            Ident@19929..19930 "b"
            RParen@19930..19931 ")"
          StmtList@19931..19940
            ReturnStmt@19931..19940
              Return@19931..19937 "return"
              BinOp@19937..19940
                Ident@19937..19938
                  Ident@19937..19938 "a"
                LAngle@19938..19939 "<"
                Ident@19939..19940
                  Ident@19939..19940 "b"
          End@19940..19943 "end"
      Comma@19943..19944 ","
      TableMapElem@19944..19973
        Ident@19944..19946 "le"
        Assign@19946..19947 "="
        FuncExpr@19947..19973
          Function@19947..19955 "function"
          FuncArgs@19955..19960
            LParen@19955..19956 "("
            Ident@19956..19957 "a"
            Comma@19957..19958 ","
            Ident@19958..19959 "b"
            RParen@19959..19960 ")"
          StmtList@19960..19970
            ReturnStmt@19960..19970
              Return@19960..19966 "return"
              BinOp@19966..19970
                Ident@19966..19967
                  Ident@19966..19967 "a"
                LEq@19967..19969 "<="
                Ident@19969..19970
                  Ident@19969..19970 "b"
          End@19970..19973 "end"
      Comma@19973..19974 ","
      TableMapElem@19974..20003
        Ident@19974..19976 "eq"
        Assign@19976..19977 "="
        FuncExpr@19977..20003
          Function@19977..19985 "function"
          FuncArgs@19985..19990
            LParen@19985..19986 "("
            Ident@19986..19987 "a"
            Comma@19987..19988 ","
            Ident@19988..19989 "b"
            RParen@19989..19990 ")"
          StmtList@19990..20000
            ReturnStmt@19990..20000
              Return@19990..19996 "return"
              BinOp@19996..20000
                Ident@19996..19997
                  Ident@19996..19997 "a"
                Eq@19997..19999 "=="
                Ident@19999..20000
                  Ident@19999..20000 "b"
          End@20000..20003 "end"
      Comma@20003..20004 ","
      TableMapElem@20004..20033
        Ident@20004..20006 "ne"
        Assign@20006..20007 "="
        FuncExpr@20007..20033
          Function@20007..20015 "function"
          FuncArgs@20015..20020
            LParen@20015..20016 "("
            Ident@20016..20017 "a"
            Comma@20017..20018 ","
            Ident@20018..20019 "b"
            RParen@20019..20020 ")"
          StmtList@20020..20030
            ReturnStmt@20020..20030
              Return@20020..20026 "return"
              BinOp@20026..20030
                Ident@20026..20027
                  Ident@20026..20027 "a"
                NotEq@20027..20029 "~="
                Ident@20029..20030
                  Ident@20029..20030 "b"
          End@20030..20033 "end"
      Comma@20033..20034 ","
      TableMapElem@20034..20063
        Ident@20034..20036 "ge"
        Assign@20036..20037 "="
        FuncExpr@20037..20063
          Function@20037..20045 "function"
          FuncArgs@20045..20050
            LParen@20045..20046 "("
            Ident@20046..20047 "a"
            Comma@20047..20048 ","
            Ident@20048..20049 "b"
            RParen@20049..20050 ")"
          StmtList@20050..20060
            ReturnStmt@20050..20060
              Return@20050..20056 "return"
              BinOp@20056..20060
                Ident@20056..20057
                  Ident@20056..20057 "a"
                GEq@20057..20059 ">="
                Ident@20059..20060
                  Ident@20059..20060 "b"
          End@20060..20063 "end"
      Comma@20063..20064 ","
      TableMapElem@20064..20092
        Ident@20064..20066 "gt"
        Assign@20066..20067 "="
        FuncExpr@20067..20092
          Function@20067..20075 "function"
          FuncArgs@20075..20080
            LParen@20075..20076 "("
            Ident@20076..20077 "a"
            Comma@20077..20078 ","
            Ident@20078..20079 "b"
            RParen@20079..20080 ")"
          StmtList@20080..20089
            ReturnStmt@20080..20089
              Return@20080..20086 "return"
              BinOp@20086..20089
                Ident@20086..20087
                  Ident@20086..20087 "a"
                RAngle@20087..20088 ">"
                Ident@20088..20089
                  Ident@20088..20089 "b"
          End@20089..20092 "end"
      Comma@20092..20093 ","
      TableMapElem@20093..20122
        Ident@20093..20096 "add"
        Assign@20096..20097 "="
        FuncExpr@20097..20122
          Function@20097..20105 "function"
          FuncArgs@20105..20110
            LParen@20105..20106 "("
            Ident@20106..20107 "a"
            Comma@20107..20108 ","
            Ident@20108..20109 "b"
            RParen@20109..20110 ")"
          StmtList@20110..20119
            ReturnStmt@20110..20119
              Return@20110..20116 "return"
              BinOp@20116..20119
                Ident@20116..20117
                  Ident@20116..20117 "a"
                Plus@20117..20118 "+"
                Ident@20118..20119
                  Ident@20118..20119 "b"
          End@20119..20122 "end"
      Comma@20122..20123 ","
      TableMapElem@20123..20152
        Ident@20123..20126 "div"
        Assign@20126..20127 "="
        FuncExpr@20127..20152
          Function@20127..20135 "function"
          FuncArgs@20135..20140
            LParen@20135..20136 "("
            Ident@20136..20137 "a"
            Comma@20137..20138 ","
            Ident@20138..20139 "b"
            RParen@20139..20140 ")"
          StmtList@20140..20149
            ReturnStmt@20140..20149
              Return@20140..20146 "return"
              BinOp@20146..20149
                Ident@20146..20147
                  Ident@20146..20147 "a"
                Slash@20147..20148 "/"
                Ident@20148..20149
                  Ident@20148..20149 "b"
          End@20149..20152 "end"
      Comma@20152..20153 ","
      TableMapElem@20153..20199
        Ident@20153..20161 "floordiv"
        Assign@20161..20162 "="
        FuncExpr@20162..20199
          Function@20162..20170 "function"
          FuncArgs@20170..20175
            LParen@20170..20171 "("
            Ident@20171..20172 "a"
            Comma@20172..20173 ","
            Ident@20173..20174 "b"
            RParen@20174..20175 ")"
          StmtList@20175..20196
            ReturnStmt@20175..20196
              Return@20175..20181 "return"
              FuncCall@20181..20196
                BinOp@20181..20191
                  Ident@20181..20185
                    Ident@20181..20185 "math"
                  Dot@20185..20186 "."
                  Ident@20186..20191
                    Ident@20186..20191 "floor"
                FuncArgs@20191..20196
                  LParen@20191..20192 "("
                  BinOp@20192..20195
                    Ident@20192..20193
                      Ident@20192..20193 "a"
                    Slash@20193..20194 "/"
                    Ident@20194..20195
                      Ident@20194..20195 "b"
                  RParen@20195..20196 ")"
          End@20196..20199 "end"
      Comma@20199..20200 ","
      TableMapElem@20200..20287
        Ident@20200..20206 "intdiv"
        Assign@20206..20207 "="
        FuncExpr@20207..20287
          Function@20207..20215 "function"
          FuncArgs@20215..20220
            LParen@20215..20216 "("
            Ident@20216..20217 "a"
            Comma@20217..20218 ","
            Ident@20218..20219 "b"
            RParen@20219..20220 ")"
          StmtList@20220..20284
            DeclStmt@20220..20230
              Local@20220..20225 "local"
              DeclTarget@20225..20226
                Ident@20225..20226 "q"
              Assign@20226..20227 "="
              BinOp@20227..20230
                Ident@20227..20228
                  Ident@20227..20228 "a"
                Slash@20228..20229 "/"
                Ident@20229..20230
                  Ident@20229..20230 "b"
            IfStmt@20230..20284
              If@20230..20232 "if"
              BinOp@20232..20236
                Ident@20232..20233
                  Ident@20232..20233 "a"
                GEq@20233..20235 ">="
                LiteralExpr@20235..20236
                  Int@20235..20236 "0"
              Then@20236..20240 "then"
              StmtList@20240..20259
                ReturnStmt@20240..20259
                  Return@20240..20246 "return"
                  FuncCall@20246..20259
                    BinOp@20246..20256
                      Ident@20246..20250
                        Ident@20246..20250 "math"
                      Dot@20250..20251 "."
                      Ident@20251..20256
                        Ident@20251..20256 "floor"
                    FuncArgs@20256..20259
                      LParen@20256..20257 "("
                      Ident@20257..20258
                        Ident@20257..20258 "q"
                      RParen@20258..20259 ")"
              ElseChain@20259..20284
                Else@20259..20263 "else"
                StmtList@20263..20281
                  ReturnStmt@20263..20281
                    Return@20263..20269 "return"
                    FuncCall@20269..20281
                      BinOp@20269..20278
                        Ident@20269..20273
                          Ident@20269..20273 "math"
                        Dot@20273..20274 "."
                        Ident@20274..20278
                          Ident@20274..20278 "ceil"
                      FuncArgs@20278..20281
                        LParen@20278..20279 "("
                        Ident@20279..20280
                          Ident@20279..20280 "q"
                        RParen@20280..20281 ")"
                End@20281..20284 "end"
          End@20284..20287 "end"
      Comma@20287..20288 ","
      TableMapElem@20288..20317
        Ident@20288..20291 "mod"
        Assign@20291..20292 "="
        FuncExpr@20292..20317
          Function@20292..20300 "function"
          FuncArgs@20300..20305
            LParen@20300..20301 "("
            Ident@20301..20302 "a"
            Comma@20302..20303 ","
            Ident@20303..20304 "b"
            RParen@20304..20305 ")"
          StmtList@20305..20314
            ReturnStmt@20305..20314
              Return@20305..20311 "return"
              BinOp@20311..20314
                Ident@20311..20312
                  Ident@20311..20312 "a"
                Percent@20312..20313 "%"
                Ident@20313..20314
                  Ident@20313..20314 "b"
          End@20314..20317 "end"
      Comma@20317..20318 ","
      TableMapElem@20318..20347
        Ident@20318..20321 "mul"
        Assign@20321..20322 "="
        FuncExpr@20322..20347
          Function@20322..20330 "function"
          FuncArgs@20330..20335
            LParen@20330..20331 "("
            Ident@20331..20332 "a"
            Comma@20332..20333 ","
            Ident@20333..20334 "b"
            RParen@20334..20335 ")"
          StmtList@20335..20344
            ReturnStmt@20335..20344
              Return@20335..20341 "return"
              BinOp@20341..20344
                Ident@20341..20342
                  Ident@20341..20342 "a"
                Star@20342..20343 "*"
                Ident@20343..20344
                  Ident@20343..20344 "b"
          End@20344..20347 "end"
      Comma@20347..20348 ","
      TableMapElem@20348..20374
        Ident@20348..20351 "neq"
        Assign@20351..20352 "="
        FuncExpr@20352..20374
          Function@20352..20360 "function"
          FuncArgs@20360..20363
            LParen@20360..20361 "("
            Ident@20361..20362 "a"
            RParen@20362..20363 ")"
          StmtList@20363..20371
            ReturnStmt@20363..20371
              Return@20363..20369 "return"
              PrefixOp@20369..20371
                Minus@20369..20370 "-"
                Ident@20370..20371
                  Ident@20370..20371 "a"
          End@20371..20374 "end"
      Comma@20374..20375 ","
      TableMapElem@20375..20401
        Ident@20375..20378 "unm"
        Assign@20378..20379 "="
        FuncExpr@20379..20401
          Function@20379..20387 "function"
          FuncArgs@20387..20390
            LParen@20387..20388 "("
            Ident@20388..20389 "a"
            RParen@20389..20390 ")"
          StmtList@20390..20398
            ReturnStmt@20390..20398
              Return@20390..20396 "return"
              PrefixOp@20396..20398
                Minus@20396..20397 "-"
                Ident@20397..20398
                  Ident@20397..20398 "a"
          End@20398..20401 "end"
      Comma@20401..20402 ","
      TableMapElem@20402..20431
        Ident@20402..20405 "pow"
        Assign@20405..20406 "="
        FuncExpr@20406..20431
          Function@20406..20414 "function"
          FuncArgs@20414..20419
            LParen@20414..20415 "("
            Ident@20415..20416 "a"
            Comma@20416..20417 ","
            Ident@20417..20418 "b"
            RParen@20418..20419 ")"
          StmtList@20419..20428
            ReturnStmt@20419..20428
              Return@20419..20425 "return"
              BinOp@20425..20428
                Ident@20425..20426
                  Ident@20425..20426 "a"
                Caret@20426..20427 "^"
                Ident@20427..20428
                  Ident@20427..20428 "b"
          End@20428..20431 "end"
      Comma@20431..20432 ","
      TableMapElem@20432..20461
        Ident@20432..20435 "sub"
        Assign@20435..20436 "="
        FuncExpr@20436..20461
          Function@20436..20444 "function"
          FuncArgs@20444..20449
            LParen@20444..20445 "("
            Ident@20445..20446 "a"
            Comma@20446..20447 ","
            Ident@20447..20448 "b"
            RParen@20448..20449 ")"
          StmtList@20449..20458
            ReturnStmt@20449..20458
              Return@20449..20455 "return"
              BinOp@20455..20458
                Ident@20455..20456
                  Ident@20455..20456 "a"
                Minus@20456..20457 "-"
                Ident@20457..20458
                  Ident@20457..20458 "b"
          End@20458..20461 "end"
      Comma@20461..20462 ","
      TableMapElem@20462..20495
        Ident@20462..20469 "truediv"
        Assign@20469..20470 "="
        FuncExpr@20470..20495
          Function@20470..20478 "function"
          FuncArgs@20478..20483
            LParen@20478..20479 "("
            Ident@20479..20480 "a"
            Comma@20480..20481 ","
            Ident@20481..20482 "b"
            RParen@20482..20483 ")"
          StmtList@20483..20492
            ReturnStmt@20483..20492
              Return@20483..20489 "return"
              BinOp@20489..20492
                Ident@20489..20490
                  Ident@20489..20490 "a"
                Slash@20490..20491 "/"
                Ident@20491..20492
                  Ident@20491..20492 "b"
          End@20492..20495 "end"
      Comma@20495..20496 ","
      TableMapElem@20496..20529
        Ident@20496..20502 "concat"
        Assign@20502..20503 "="
        FuncExpr@20503..20529
          Function@20503..20511 "function"
          FuncArgs@20511..20516
            LParen@20511..20512 "("
            Ident@20512..20513 "a"
            Comma@20513..20514 ","
            Ident@20514..20515 "b"
            RParen@20515..20516 ")"
          StmtList@20516..20526
            ReturnStmt@20516..20526
              Return@20516..20522 "return"
              BinOp@20522..20526
                Ident@20522..20523
                  Ident@20522..20523 "a"
                DDot@20523..20525 ".."
                Ident@20525..20526
                  Ident@20525..20526 "b"
          End@20526..20529 "end"
      Comma@20529..20530 ","
      TableMapElem@20530..20556
        Ident@20530..20533 "len"
        Assign@20533..20534 "="
        FuncExpr@20534..20556
          Function@20534..20542 "function"
          FuncArgs@20542..20545
            LParen@20542..20543 "("
            Ident@20543..20544 "a"
            RParen@20544..20545 ")"
          StmtList@20545..20553
            ReturnStmt@20545..20553
              Return@20545..20551 "return"
              PrefixOp@20551..20553
                Hash@20551..20552 "#"
                Ident@20552..20553
                  Ident@20552..20553 "a"
          End@20553..20556 "end"
      Comma@20556..20557 ","
      TableMapElem@20557..20586
        Ident@20557..20563 "length"
        Assign@20563..20564 "="
        FuncExpr@20564..20586
          Function@20564..20572 "function"
          FuncArgs@20572..20575
            LParen@20572..20573 "("
            Ident@20573..20574 "a"
            RParen@20574..20575 ")"
          StmtList@20575..20583
            ReturnStmt@20575..20583
              Return@20575..20581 "return"
              PrefixOp@20581..20583
                Hash@20581..20582 "#"
                Ident@20582..20583
                  Ident@20582..20583 "a"
          End@20583..20586 "end"
      Comma@20586..20587 ","
      TableMapElem@20587..20619
        Ident@20587..20591 "land"
        Assign@20591..20592 "="
        FuncExpr@20592..20619
          Function@20592..20600 "function"
          FuncArgs@20600..20605
            LParen@20600..20601 "("
            Ident@20601..20602 "a"
            Comma@20602..20603 ","
            Ident@20603..20604 "b"
            RParen@20604..20605 ")"
          StmtList@20605..20616
            ReturnStmt@20605..20616
              Return@20605..20611 "return"
              BinOp@20611..20616
                Ident@20611..20612
                  Ident@20611..20612 "a"
                And@20612..20615 "and"
                Ident@20615..20616
                  Ident@20615..20616 "b"
          End@20616..20619 "end"
      Comma@20619..20620 ","
      TableMapElem@20620..20650
        Ident@20620..20623 "lor"
        Assign@20623..20624 "="
        FuncExpr@20624..20650
          Function@20624..20632 "function"
          FuncArgs@20632..20637
            LParen@20632..20633 "("
            Ident@20633..20634 "a"
            Comma@20634..20635 ","
            Ident@20635..20636 "b"
            RParen@20636..20637 ")"
          StmtList@20637..20647
            ReturnStmt@20637..20647
              Return@20637..20643 "return"
              BinOp@20643..20647
                Ident@20643..20644
                  Ident@20643..20644 "a"
                Or@20644..20646 "or"
                Ident@20646..20647
                  Ident@20646..20647 "b"
          End@20647..20650 "end"
      Comma@20650..20651 ","
      TableMapElem@20651..20680
        Ident@20651..20655 "lnot"
        Assign@20655..20656 "="
        FuncExpr@20656..20680
          Function@20656..20664 "function"
          FuncArgs@20664..20667
            LParen@20664..20665 "("
            Ident@20665..20666 "a"
            RParen@20666..20667 ")"
          StmtList@20667..20677
            ReturnStmt@20667..20677
              Return@20667..20673 "return"
              PrefixOp@20673..20677
                Not@20673..20676 "not"
                Ident@20676..20677
                  Ident@20676..20677 "a"
          End@20677..20680 "end"
      Comma@20680..20681 ","
      TableMapElem@20681..20714
        Ident@20681..20686 "truth"
        Assign@20686..20687 "="
        FuncExpr@20687..20714
          Function@20687..20695 "function"
          FuncArgs@20695..20698
            LParen@20695..20696 "("
            Ident@20696..20697 "a"
            RParen@20697..20698 ")"
          StmtList@20698..20711
            ReturnStmt@20698..20711
              Return@20698..20704 "return"
              PrefixOp@20704..20711
                Not@20704..20707 "not"
                PrefixOp@20707..20711
                  Not@20707..20710 "not"
                  Ident@20710..20711
                    Ident@20710..20711 "a"
          End@20711..20714 "end"
      Comma@20714..20715 ","
      RCurly@20715..20716 "}"
  AssignStmt@20716..20741
    BinOp@20716..20732
      Ident@20716..20723
        Ident@20716..20723 "exports"
      Dot@20723..20724 "."
      Ident@20724..20732
        Ident@20724..20732 "operator"
    Assign@20732..20733 "="
    Ident@20733..20741
      Ident@20733..20741 "operator"
  AssignStmt@20741..20766
    BinOp@20741..20757
      Ident@20741..20748
        Ident@20741..20748 "methods"
      Dot@20748..20749 "."
      Ident@20749..20757
        Ident@20749..20757 "operator"
    Assign@20757..20758 "="
    Ident@20758..20766
      Ident@20758..20766 "operator"
  AssignStmt@20766..20785
    BinOp@20766..20776
      Ident@20766..20773
        Ident@20766..20773 "exports"
      Dot@20773..20774 "."
      Ident@20774..20776
        Ident@20774..20776 "op"
    Assign@20776..20777 "="
    Ident@20777..20785
      Ident@20777..20785 "operator"
  AssignStmt@20785..20804
    BinOp@20785..20795
      Ident@20785..20792
        Ident@20785..20792 "methods"
      Dot@20792..20793 "."
      Ident@20793..20795
        Ident@20793..20795 "op"
    Assign@20795..20796 "="
    Ident@20796..20804
      Ident@20796..20804 "operator"
  FuncCall@20804..21093
    Ident@20804..20816
      Ident@20804..20816 "setmetatable"
    FuncArgs@20816..21093
      LParen@20816..20817 "("
      Ident@20817..20824
        Ident@20817..20824 "exports"
      Comma@20824..20825 ","
      TableExpr@20825..21092
        LCurly@20825..20826 "{"
        TableMapElem@20826..21090
          Ident@20826..20832 "__call"
          Assign@20832..20833 "="
          FuncExpr@20833..21090
            Function@20833..20841 "function"
            FuncArgs@20841..20853
              LParen@20841..20842 "("
              Ident@20842..20843 "t"
              Comma@20843..20844 ","
              Ident@20844..20852 "override"
              RParen@20852..20853 ")"
            StmtList@20853..21087
              ForGenStmt@20853..21087
                For@20853..20856 "for"
                Ident@20856..20857 "k"
                Comma@20857..20858 ","
                Ident@20858..20859 "v"
                In@20859..20861 "in"
                FuncCall@20861..20869
                  Ident@20861..20866
                    Ident@20861..20866 "pairs"
                  FuncArgs@20866..20869
                    LParen@20866..20867 "("
                    Ident@20867..20868
                      Ident@20867..20868 "t"
                    RParen@20868..20869 ")"
                BlockStmt@20869..21087
                  Do@20869..20871 "do"
                  StmtList@20871..21084
                    IfStmt@20871..21084
                      If@20871..20873 "if"
                      BinOp@20873..20890
                        FuncCall@20873..20885
                          Ident@20873..20879
                            Ident@20873..20879 "rawget"
                          FuncArgs@20879..20885
                            LParen@20879..20880 "("
                            Ident@20880..20882
                              Ident@20880..20882 "_G"
                            Comma@20882..20883 ","
                            Ident@20883..20884
                              Ident@20883..20884 "k"
                            RParen@20884..20885 ")"
                        NotEq@20885..20887 "~="
                        LiteralExpr@20887..20890
                          Nil@20887..20890 "nil"
                      Then@20890..20894 "then"
                      StmtList@20894..21063
                        DeclStmt@20894..20953
                          Local@20894..20899 "local"
                          DeclTarget@20899..20902
                            Ident@20899..20902 "msg"
                          Assign@20902..20903 "="
                          BinOp@20903..20953
                            LiteralExpr@20903..20914
                              String@20903..20914 "'function '"
                            DDot@20914..20916 ".."
                            BinOp@20916..20953
                              Ident@20916..20917
                                Ident@20916..20917 "k"
                              DDot@20917..20919 ".."
                              LiteralExpr@20919..20953
                                String@20919..20953 "' already exists in g ..."
                        IfStmt@20953..21063
                          If@20953..20955 "if"
                          Ident@20955..20963
                            Ident@20955..20963 "override"
                          Then@20963..20967 "then"
                          StmtList@20967..21021
                            FuncCall@20967..20981
                              Ident@20967..20973
                                Ident@20967..20973 "rawset"
                              FuncArgs@20973..20981
                                LParen@20973..20974 "("
                                Ident@20974..20976
                                  Ident@20974..20976 "_G"
                                Comma@20976..20977 ","
                                Ident@20977..20978
                                  Ident@20977..20978 "k"
                                Comma@20978..20979 ","
                                Ident@20979..20980
                                  Ident@20979..20980 "v"
                                RParen@20980..20981 ")"
                            FuncCall@20981..21021
                              Ident@20981..20986
                                Ident@20981..20986 "print"
                              FuncArgs@20986..21021
                                LParen@20986..20987 "("
                                BinOp@20987..21020
                                  LiteralExpr@20987..20998
                                    String@20987..20998 "'WARNING: '"
                                  DDot@20998..21000 ".."
                                  BinOp@21000..21020
                                    Ident@21000..21003
                                      Ident@21000..21003 "msg"
                                    DDot@21003..21005 ".."
                                    LiteralExpr@21005..21020
                                      String@21005..21020 "' Overwritten.'"
                                RParen@21020..21021 ")"
                          ElseChain@21021..21063
                            Else@21021..21025 "else"
                            StmtList@21025..21060
                              FuncCall@21025..21060
                                Ident@21025..21030
                                  Ident@21025..21030 "print"
                                FuncArgs@21030..21060
                                  LParen@21030..21031 "("
                                  BinOp@21031..21059
                                    LiteralExpr@21031..21041
                                      String@21031..21041 "'NOTICE: '"
                                    DDot@21041..21043 ".."
                                    BinOp@21043..21059
                                      Ident@21043..21046
                                        Ident@21043..21046 "msg"
                                      DDot@21046..21048 ".."
                                      LiteralExpr@21048..21059
                                        String@21048..21059 "' Skipped.'"
                                  RParen@21059..21060 ")"
                            End@21060..21063 "end"
                      ElseChain@21063..21084
                        Else@21063..21067 "else"
                        StmtList@21067..21081
                          FuncCall@21067..21081
                            Ident@21067..21073
                              Ident@21067..21073 "rawset"
                            FuncArgs@21073..21081
                              LParen@21073..21074 "("
                              Ident@21074..21076
                                Ident@21074..21076 "_G"
                              Comma@21076..21077 ","
                              Ident@21077..21078
                                Ident@21077..21078 "k"
                              Comma@21078..21079 ","
                              Ident@21079..21080
                                Ident@21079..21080 "v"
                              RParen@21080..21081 ")"
                        End@21081..21084 "end"
                  End@21084..21087 "end"
            End@21087..21090 "end"
        Comma@21090..21091 ","
        RCurly@21091..21092 "}"
      RParen@21092..21093 ")"
  ReturnStmt@21093..21106
    Return@21093..21099 "return"
    Ident@21099..21106
      Ident@21099..21106 "exports"

